<?xml version="1.0" encoding="UTF-8" ?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="../ProcessSalesOrderPSOIndustryReqABCSImpl.wsdl"/>
      <rootElement name="SiebelMessage" namespace="http://www.sky.com.mx/soasky/ordenes"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="../CommunicationsSalesOrderEBSRef.wsdl"/>
      <rootElement name="ProcessSalesOrderFulfillmentEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/SalesOrder/V2"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 11.1.1.7.0(build 130301.0647.0008) AT [THU JUL 26 17:37:15 CDT 2024]. -->
?>
<xsl:stylesheet version="2.0"
                xmlns:ns2="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/SalesOrder/V2"
                xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:ns0="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2"
                xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:ora="http://schemas.oracle.com/xpath/extension"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:xacml="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:hashmap="http://www.oracle.com/XSL/Transform/java/java.util.HashMap"
                xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2"
                xmlns:salesorderebo="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/SalesOrder/V2"
                xmlns:orderentryabo="http://www.sky.com.mx/soasky/ordenes"
                exclude-result-prefixes="xsl xref xp20 bpws ora ehdr orcl ids hwf sbldata xacmlctx coresalesorder corecom hashmap wsa aia">
  <xsl:template match="/">
    <xsl:variable name="COMMON_ACCOUNT_ID" select="orcl:generate-guid()"/>
    <salesorderebo:ProcessSalesOrderFulfillmentEBM>
      <xsl:variable name="endDateFormat"
                    select='xp20:format-dateTime(concat(substring(orderentryabo:EffectiveEndDate,7.0,4.0),"-",substring(orderentryabo:EffectiveEndDate,1.0,2.0),"-",substring(orderentryabo:EffectiveEndDate,4.0,2.0),"T",substring(orderentryabo:EffectiveEndDate,12.0,8.0)),"[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01][Z]")'/>
      <xsl:variable name="endDate"
                    select='concat(substring($endDateFormat,1.0,22.0),":",substring($endDateFormat,23.0,24.0))'/>
      <xsl:variable name="vActionCodeRechargeBTGpre">
        <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Paquete Principal' and  orderentryabo:ProductType = 'Video' and  $endDate >= xp20:current-date() and orderentryabo:ActionCode = 'New']">
          <xsl:if test="position()=1">
            <xsl:choose>
              <xsl:when test="orderentryabo:ProductType = 'Video'">
                <xsl:text disable-output-escaping="no">Recharge</xsl:text>
              </xsl:when>
              <xsl:otherwise>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
        </xsl:for-each>
      </xsl:variable>
      <xsl:variable name="changeSchemeFlag">
        <xsl:choose>
          <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ChangeBillingProfilePaymentSystem!=''">
            <xsl:text>Y</xsl:text>
          </xsl:when>
          <xsl:otherwise>
            <xsl:text>N</xsl:text>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:variable>
      <xsl:variable name="accountScheme"
                    select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem"/>
      <xsl:variable name="vIdDireccion">
        <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode,'COMMON', '', 'SOA_02','-') = 'Modem'  or dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode,'COMMON', '', 'SOA_02','TelefonÃ­a') = 'CelSIM']">
          <xsl:if test="position() = 1">
            <xsl:value-of select="orderentryabo:PrimaryAddressId"/>
          </xsl:if>
        </xsl:for-each>
      </xsl:variable>
      <xsl:variable name="vIdDireccionVideo">
        <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode,'COMMON', '', 'SOA_02','-') = 'IRD']">
          <xsl:if test="position() = 1">
            <xsl:value-of select="orderentryabo:PrimaryAddressId"/>
          </xsl:if>
        </xsl:for-each>
      </xsl:variable>
      <corecom:EBMHeader>
        <corecom:EBMID>
          <xsl:value-of select="orcl:generate-guid()"/>
        </corecom:EBMID>
        <corecom:EBMName>
          <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/SalesOrder/V2}ProcessSalesOrderFulfillmentEBM</xsl:text>
        </corecom:EBMName>
        <corecom:EBOName>
          <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/SalesOrder/V2}SalesOrderEBO</xsl:text>
        </corecom:EBOName>
        <corecom:CreationDateTime>
          <xsl:value-of select="xp20:current-dateTime()"/>
        </corecom:CreationDateTime>
        <corecom:VerbCode>
          <xsl:text disable-output-escaping="no">process</xsl:text>
        </corecom:VerbCode>
        <corecom:MessageProcessingInstruction>
          <corecom:EnvironmentCode>
            <xsl:text disable-output-escaping="no">PRODUCTION</xsl:text>
          </corecom:EnvironmentCode>
          <!-- TODO: AJNR Optimizar para evitar invocar el mismo dvm lookup varias veces -->
          <xsl:choose>
            <xsl:when test="starts-with(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceOrderId,'SYNNE-')">
              <corecom:DefinitionID>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PROCESSINGTYPECODE.dvm','COMMON','SOA-SYNNE','COMMON','CouldNotBeFound', 'SOA_03', '0')"/>
              </corecom:DefinitionID>
            </xsl:when>
            <xsl:when test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PROCESSINGTYPECODE.dvm','SOA_01',xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SOAServiceName),'COMMON','CouldNotBeFound', 'SOA_03', '1') != 'CouldNotBeFound'">
              <corecom:DefinitionID>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PROCESSINGTYPECODE.dvm','SOA_01',xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SOAServiceName),'COMMON','CouldNotBeFound', 'SOA_03', '1')"/>
              </corecom:DefinitionID>
            </xsl:when>
            <xsl:when test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PROCESSINGTYPECODE.dvm','SOA_01',xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SOAServiceName),'COMMON','CouldNotBeFound', 'SOA_03', '0') != 'CouldNotBeFound' and dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PROCESSINGTYPECODE.dvm','SIEBEL_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType,'COMMON','CouldNotBeFound', 'SOA_03', '0') != 'CouldNotBeFound'">
              <corecom:DefinitionID>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PROCESSINGTYPECODE.dvm','SOA_01',xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SOAServiceName),'COMMON','CouldNotBeFound', 'SOA_03', '0')"/>
              </corecom:DefinitionID>
            </xsl:when>
            <xsl:otherwise>
              <corecom:DefinitionID>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PROCESSINGTYPECODE.dvm','SIEBEL_02','SKYHJ Com Work Order Nueva Era', 'COMMON', 'CouldNotBeFound', 'SOA_03', '0')"/>
              </corecom:DefinitionID>
            </xsl:otherwise>
          </xsl:choose>
          <xsl:choose>
            <xsl:when test="contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceOrderId, 'SYNNE-') and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CorrelationId != ''">
              <corecom:InstanceID>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CorrelationId"/>
              </corecom:InstanceID>
            </xsl:when>
            <xsl:otherwise>
              <corecom:InstanceID>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </corecom:InstanceID>
            </xsl:otherwise>
          </xsl:choose>
        </corecom:MessageProcessingInstruction>
        <corecom:Sender>
          <corecom:ID>
            <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
          </corecom:ID>
          <corecom:Description>
            <xsl:text disable-output-escaping="no">Siebel 6.3 Instance</xsl:text>
          </corecom:Description>
          <corecom:IPAddress>
            <xsl:text disable-output-escaping="no">siebel63.sky.com.mx</xsl:text>
          </corecom:IPAddress>
          <corecom:SenderMessageID>
            <xsl:text disable-output-escaping="no">AIA_SALESORDERJMSQUEUE QUEUE
                                                   ID:707987D98418ABD2E040449898F0678C</xsl:text>
          </corecom:SenderMessageID>
          <corecom:TransactionCode>
            <xsl:text disable-output-escaping="no">SalesOrder</xsl:text>
          </corecom:TransactionCode>
          <corecom:CallingServiceName>
            <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/ABCSImpl/Siebel/Industry/Comms/ProcessSalesOrderFulfillmentSiebelCommsReqABCSImpl/V1}ProcessSalesOrderFulfillmentSiebelCommsReqABCSImpl</xsl:text>
          </corecom:CallingServiceName>
          <corecom:Application>
            <corecom:ID>
              <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
            </corecom:ID>
            <corecom:Version>
              <xsl:text disable-output-escaping="no">6.3</xsl:text>
            </corecom:Version>
          </corecom:Application>
          <corecom:ContactName>
            <xsl:text disable-output-escaping="no">Ruben Marin</xsl:text>
          </corecom:ContactName>
          <corecom:ContactEmail>
            <xsl:text disable-output-escaping="no">rmarinh@sky.com.mx</xsl:text>
          </corecom:ContactEmail>
          <corecom:ContactPhoneNumber>
            <xsl:text disable-output-escaping="no"></xsl:text>
          </corecom:ContactPhoneNumber>
          <!-- TODO: AJNR Revisar cuales atributos extensibles se van a seguir utilizando para solicitarlos a Siebe en caso de ser necesario:
          SpecialProductTreatment, POIDAction, IDEscenario-->
          <!--corecom:ESBHeaderExtension>
            <corecom:Name>
              <xsl:text disable-output-escaping="no">SiebelOrderId</xsl:text>
            </corecom:Name>
            <corecom:Value>
              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Id"/>
            </corecom:Value>
          </corecom:ESBHeaderExtension-->
          <corecom:ESBHeaderExtension>
            <corecom:Name>
              <xsl:text disable-output-escaping="no">POIDAction</xsl:text>
            </corecom:Name>
            <xsl:choose>
              <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:POIDAction != '' ">
                <corecom:Value>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:POIDAction"/>
                </corecom:Value>
              </xsl:when>
              <xsl:otherwise>
                <corecom:Value>
                  <xsl:text disable-output-escaping="no">-1</xsl:text>
                </corecom:Value>
              </xsl:otherwise>
            </xsl:choose>
          </corecom:ESBHeaderExtension>
          <corecom:ESBHeaderExtension>
            <corecom:Name>
              <xsl:text disable-output-escaping="no">IDEscenario</xsl:text>
            </corecom:Name>
            <corecom:Value>
              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AlertNumber"/>
            </corecom:Value>
          </corecom:ESBHeaderExtension>
          <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SOAServiceName != ''">
            <xsl:variable name="prefijoSSN"
                          select="substring-before(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SOAServiceName,'-')"/>
            <corecom:ESBHeaderExtension>
              <corecom:Name>
                <xsl:text disable-output-escaping="no">CollectionsOrigin</xsl:text>
              </corecom:Name>
              <xsl:choose>
                <xsl:when test="$prefijoSSN = 'SBL'">
                  <corecom:Value>CRM</corecom:Value>
                </xsl:when>
                <xsl:otherwise>
                  <corecom:Value>
                    <xsl:value-of select="$prefijoSSN"/>
                  </corecom:Value>
                </xsl:otherwise>
              </xsl:choose>
            </corecom:ESBHeaderExtension>
          </xsl:if>
          <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'New'">
            <corecom:ESBHeaderExtension>
              <corecom:Name>
                <xsl:text disable-output-escaping="no">CreateAccountFlag</xsl:text>
              </corecom:Name>
              <corecom:Value>
                <xsl:text disable-output-escaping="no">true</xsl:text>
              </corecom:Value>
            </corecom:ESBHeaderExtension>
          </xsl:if>
          <!--Cambio de Esquema
               Nov17 RHA: Se agregan condiciones para identificar cuando sea un cambio de esquema (Downgrade) -->
          <!--<xsl:variable name="deletePaymentScheme"
                        select="xp20:upper-case(orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ Subtipo from ofertacomercial_codes where siebel_id='&quot;,/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='Deleted']/orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;))"/>
          <xsl:variable name="addPaymentScheme"
                        select="xp20:upper-case(orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ Subtipo from ofertacomercial_codes where siebel_id='&quot;,/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='New']/orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;))"/>
          <xsl:variable name="deleteDvmScheme"
                        select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_CONFIG_CROSSREFERENCE.dvm','SOA_01',$deletePaymentScheme,'SOA_03','CouldNotBeFound')"/>
          <xsl:variable name="addDvmScheme"
                        select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_CONFIG_CROSSREFERENCE.dvm','SOA_01',$addPaymentScheme,'SOA_03','CouldNotBeFound')"/>-->
          <xsl:choose>
            <!--<xsl:when test="($deleteDvmScheme = 'TRADICIONAL') and ($addDvmScheme = 'VETV')">-->
            <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ChangeBillingProfilePaymentSystem='POSPRE'">
              <corecom:ESBHeaderExtension>
                <corecom:Name>
                  <xsl:text disable-output-escaping="no">ChangeSchemaPrepayFlag</xsl:text>
                </corecom:Name>
                <corecom:Value>
                  <xsl:text disable-output-escaping="no">Y</xsl:text>
                </corecom:Value>
              </corecom:ESBHeaderExtension>
            </xsl:when>
            <xsl:otherwise>
              <corecom:ESBHeaderExtension>
                <corecom:Name>
                  <xsl:text disable-output-escaping="no">ChangeSchemaPrepayFlag</xsl:text>
                </corecom:Name>
                <corecom:Value>
                  <xsl:text disable-output-escaping="no">N</xsl:text>
                </corecom:Value>
              </corecom:ESBHeaderExtension>
            </xsl:otherwise>
          </xsl:choose>
          <corecom:ESBHeaderExtension>
            <corecom:Name>
              <xsl:text disable-output-escaping="no">OSMFlagSwitch</xsl:text>
            </corecom:Name>
            <corecom:Value>
              <xsl:text disable-output-escaping="no">true</xsl:text>
            </corecom:Value>
          </corecom:ESBHeaderExtension>
          <!-- AJNR May19: Se agrega atributo extensible Migracion Oferta Comercial Blue Telecomm para identificar ordenes e invocar notificacion BRM en cierre 
                        Se agrega numero de cuenta necesario para invocar la notificacion de BRM-->
          <corecom:ESBHeaderExtension>
            <corecom:Name>
              <xsl:text disable-output-escaping="no">CustomerAccount</xsl:text>
            </corecom:Name>
            <corecom:Value>
              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account"/>
            </corecom:Value>
          </corecom:ESBHeaderExtension>
          <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Cambio Oferta Comercial Ext.'">
            <corecom:ESBHeaderExtension>
              <corecom:Name>
                <xsl:text disable-output-escaping="no">OrderMOC</xsl:text>
              </corecom:Name>
              <corecom:Value>
                <xsl:text disable-output-escaping="no">true</xsl:text>
              </corecom:Value>
            </corecom:ESBHeaderExtension>
          </xsl:if>
        </corecom:Sender>
        <corecom:BusinessScope>
          <corecom:ID>
            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceOrderId"/>
          </corecom:ID>
          <corecom:InstanceID>
            <xsl:text disable-output-escaping="no">CRM-To-Order-Management-Process-ReqMessage</xsl:text>
          </corecom:InstanceID>
          <corecom:BusinessScopeTypeCode>
            <xsl:text disable-output-escaping="no">BusinessProcess</xsl:text>
          </corecom:BusinessScopeTypeCode>
          <corecom:EnterpriseServiceName>
            <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/EnterpriseServices/Core/SalesOrder/V2}CommunicationsSalesOrderEBSV2</xsl:text>
          </corecom:EnterpriseServiceName>
          <corecom:EnterpriseServiceOperationName>
            <xsl:text disable-output-escaping="no">process</xsl:text>
          </corecom:EnterpriseServiceOperationName>
        </corecom:BusinessScope>
        <corecom:EBMTracking>
          <corecom:SequenceNumber>
            <xsl:text disable-output-escaping="no">1</xsl:text>
          </corecom:SequenceNumber>
          <corecom:ExecutionUnitID>
            <xsl:text disable-output-escaping="no">ora:getInstanceId()</xsl:text>
          </corecom:ExecutionUnitID>
          <corecom:ExecutionUnitName>
            <xsl:text disable-output-escaping="no">ProcessSalesOrderFulfillmentSiebelCommsReqABCSImpl</xsl:text>
          </corecom:ExecutionUnitName>
          <corecom:ImplementationCode>
            <xsl:text disable-output-escaping="no">ESB</xsl:text>
          </corecom:ImplementationCode>
          <corecom:ActivityDateTime>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </corecom:ActivityDateTime>
          <corecom:IntermediateMessageHop>
            <corecom:SenderResourceTypeCode>
              <xsl:text disable-output-escaping="no">QUEUE</xsl:text>
            </corecom:SenderResourceTypeCode>
            <corecom:SenderResourceID>
              <xsl:text disable-output-escaping="no">AIA_SALESORDERJMSQUEUE</xsl:text>
            </corecom:SenderResourceID>
            <corecom:SenderMessageID>
              <xsl:text disable-output-escaping="no">ID:707987D98418ABD2E040449898F0678C</xsl:text>
            </corecom:SenderMessageID>
          </corecom:IntermediateMessageHop>
        </corecom:EBMTracking>
        <corecom:FaultNotification>
          <corecom:ReportingDateTime>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </corecom:ReportingDateTime>
        </corecom:FaultNotification>
      </corecom:EBMHeader>
      <salesorderebo:DataArea>
        <!--<xsl:variable name="contInst"
                    select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ServiceInstances/orderentryabo:ComWorkOrder-ServiceInstances)"/>-->
        <xsl:variable name="contInst">
          <xsl:choose>
            <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ServiceInstances/orderentryabo:ComWorkOrder-ServiceInstances)=0 or (/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ServiceInstances/orderentryabo:ComWorkOrder-ServiceInstances[orderentryabo:ServiceInstance = 'DATOS']/orderentryabo:ServiceActionCode = 'Deleted' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Modified') ">
              <xsl:text disable-output-escaping="no">1</xsl:text>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ServiceInstances/orderentryabo:ComWorkOrder-ServiceInstances)"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="vServicioBTGpre">
          <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Canal a la Carta' and contains(orderentryabo:Product,'lueToGo Video Everywhere PRE')]">
            <xsl:if test="position()=1">
              <xsl:choose>
                <xsl:when test="contains(orderentryabo:Product,'lueToGo Video Everywhere PRE')">
                  <xsl:text disable-output-escaping="no">BTG PRE</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
          </xsl:for-each>
        </xsl:variable>
        <!--Ene2017-AJNR: Se valida si el perfil de facturacion ya existe en las Xref; y se recupera dicho valor, si no es asi se crea-->
        <xsl:variable name="existBillingProfile">
          <xsl:choose>
            <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileId != ''">
              <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_BILLPROFILEID.xref', 'Siebel_01', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileId, 'COMMON', false())"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text disable-output-escaping="no"></xsl:text>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:variable name="COMMON_BILLINGPROFILEID">
          <xsl:choose>
            <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileId != ''">
              <xsl:choose>
                <xsl:when test="$existBillingProfile = ''">
                  <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_BILLPROFILEID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileId,'COMMON',orcl:generate-guid(),'ADD')"/>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:value-of select="$existBillingProfile"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:when>
            <xsl:otherwise>
              <xsl:text disable-output-escaping="no"></xsl:text>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <salesorderebo:ProcessSalesOrderFulfillment>
          <corecom:Identification>
            <corecom:BusinessComponentID>
              <xsl:attribute name="schemeID">
                <xsl:text disable-output-escaping="no">SALESORDER_ID</xsl:text>
              </xsl:attribute>
              <xsl:attribute name="schemeAgencyID">
                <xsl:text disable-output-escaping="no">COMMON</xsl:text>
              </xsl:attribute>
              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceOrderId"/>
            </corecom:BusinessComponentID>
            <corecom:ID>
              <xsl:attribute name="schemeID">
                <xsl:text disable-output-escaping="no">SALESORDER_ID</xsl:text>
              </xsl:attribute>
              <xsl:attribute name="schemeAgencyID">
                <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
              </xsl:attribute>
              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceOrderId"/>
            </corecom:ID>
            <corecom:ApplicationObjectKey>
              <corecom:ID>
                <xsl:attribute name="schemeID">
                  <xsl:text disable-output-escaping="no">SALESORDER_ID</xsl:text>
                </xsl:attribute>
                <xsl:attribute name="schemeAgencyID">
                  <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceOrderId"/>
              </corecom:ID>
            </corecom:ApplicationObjectKey>
            <corecom:Revision>
              <corecom:Number>
                <xsl:text disable-output-escaping="no">1</xsl:text>
              </corecom:Number>
            </corecom:Revision>
          </corecom:Identification>
          <salesorderebo:OrderDateTime>
            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OrderDate"/>
          </salesorderebo:OrderDateTime>
          <salesorderebo:PaymentMethodCode>
            <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_PAYPROFILE_PAYMETHODCODE.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentMethod,'OSM_01','CouldNotBeFound')"/>
          </salesorderebo:PaymentMethodCode>
          <salesorderebo:RequestedDeliveryDateTime>
            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:RequestedShipDate"/>
          </salesorderebo:RequestedDeliveryDateTime>
          <salesorderebo:TypeCode>
            <xsl:text disable-output-escaping="no">SALES ORDER</xsl:text>
          </salesorderebo:TypeCode>
          <salesorderebo:FulfillmentPriorityCode>
            <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRIORITY.dvm','Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OrderPriority,'JMS','')"/>
          </salesorderebo:FulfillmentPriorityCode>
          <salesorderebo:FulfillmentSuccessCode>
            <xsl:text disable-output-escaping="no">ALL OR NONE</xsl:text>
          </salesorderebo:FulfillmentSuccessCode>
          <salesorderebo:FulfillmentModeCode>
            <xsl:text disable-output-escaping="no">DELIVER</xsl:text>
          </salesorderebo:FulfillmentModeCode>
          <!-- RAH 04/01/2018 Se realiza modificacion de conteo de instancias de servicio Air tomando los Anchos de Banda. En dado caso de venir mas de 1 Ancho de Banda (Cambio de Proveedor) se toma el que viene con accion New-->
          <xsl:variable name="countServDatosAir"
                        select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Bandwidth'])"/>
          <xsl:variable name="vVelocidad">
            <xsl:choose>
              <xsl:when test="$countServDatosAir=1">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Bandwidth']/orderentryabo:UploadSpeed"/>
              </xsl:when>
              <xsl:when test="$countServDatosAir=2">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Bandwidth' and orderentryabo:ActionCode='New']/orderentryabo:UploadSpeed"/>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <xsl:variable name="vProveedor">
            <xsl:choose>
              <xsl:when test="$countServDatosAir=1">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Bandwidth']/orderentryabo:Supplier"/>
              </xsl:when>
              <xsl:when test="$countServDatosAir=2">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Bandwidth' and orderentryabo:ActionCode='New']/orderentryabo:Supplier"/>
              </xsl:when>
            </xsl:choose>
          </xsl:variable>
          <salesorderebo:ProcessingNumber>
            <xsl:text disable-output-escaping="no">NA</xsl:text>
          </salesorderebo:ProcessingNumber>
          <!-- TODO: AJNR En el order type se hacen algunas validaciones  en SiebelToSoa si es IVR que no agregue aqui -->
          <salesorderebo:ProcessingTypeCode>
            <xsl:value-of select="concat(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType, '-', dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ORDERTYPE.dvm','Siebel_01','ALL','OSM_01','','SOA_01','NUEVA-ERA'), concat(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ORDERTYPE.dvm', 'Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OrderType, 'OSM_01','', 'SOA_01',xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SOAServiceName)), dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRIORITY.dvm', 'Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OrderPriority, 'SOA_01','')))"/>
          </salesorderebo:ProcessingTypeCode>
          <corecom:Status>
            <corecom:Code>
              <xsl:text disable-output-escaping="no">OPEN</xsl:text>
            </corecom:Code>
            <corecom:Description>
              <xsl:text disable-output-escaping="no"></xsl:text>
            </corecom:Description>
          </corecom:Status>
          <corecom:BusinessUnitReference>
            <corecom:BusinessUnitIdentification>
              <corecom:ID>
                <xsl:attribute name="schemeID">
                  <xsl:text disable-output-escaping="no">ORGANIZATION_ID</xsl:text>
                </xsl:attribute>
                <xsl:attribute name="schemeAgencyID">
                  <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Organization"/>
              </corecom:ID>
            </corecom:BusinessUnitIdentification>
          </corecom:BusinessUnitReference>
          <corecom:ContractReference>
            <corecom:ContractIdentification>
              <corecom:ID>
                <xsl:attribute name="schemeID">
                  <xsl:text disable-output-escaping="no">CONTRACT_ID</xsl:text>
                </xsl:attribute>
                <xsl:attribute name="schemeAgencyID">
                  <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AgreementId"/>
              </corecom:ID>
            </corecom:ContractIdentification>
            <corecom:Custom>
              <!--<ns0:ContractName>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AgreementName"/>
                </ns0:ContractName>-->
              <ns0:EquipmentsVideo>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:EquipmentsVideo"/>
              </ns0:EquipmentsVideo>
              <ns0:EquipmentsBroadband>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:EquipmentsBroadband"/>
              </ns0:EquipmentsBroadband>
            </corecom:Custom>
          </corecom:ContractReference>
          <corecom:CustomerPartyReference>
            <corecom:OrganizationName>
              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CompanyName"/>
            </corecom:OrganizationName>
            <corecom:CustomerPartyAccountIdentification>
              <corecom:BusinessComponentID>
                <xsl:attribute name="schemeID">
                  <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ACCOUNTID</xsl:text>
                </xsl:attribute>
                <xsl:attribute name="schemeAgencyID">
                  <xsl:text disable-output-escaping="no">COMMON</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="orcl:generate-guid()"/>
              </corecom:BusinessComponentID>
              <!--Dic2016 AJNR Se valida si la accion sobre la 
              es New, para saber si se debe almacenar en Xrefs o consultar el valor -->
              <xsl:choose>
                <!--<xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode='New' and not(contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PromoCode,'InalÃ¡mbrico'))">-->
                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode='New' and not(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PreActivateFlag='Y')">
                  <corecom:ID>
                    <xsl:attribute name="schemeID">
                      <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ACCOUNTID</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="schemeAgencyID">
                      <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                    </xsl:attribute>
                    <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountId,'COMMON',$COMMON_ACCOUNT_ID,'ADD')"/>
                  </corecom:ID>
                </xsl:when>
                <xsl:otherwise>
                  <corecom:ID>
                    <xsl:attribute name="schemeID">
                      <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ACCOUNTID</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="schemeAgencyID">
                      <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                    </xsl:attribute>
                    <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref","Siebel_01",/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountId,"COMMON",false())'/>
                  </corecom:ID>
                </xsl:otherwise>
              </xsl:choose>
              <!-- Dic2016-AJNR: Si la accion sobre la cuenta es diferente a New se busca el valor en las Xrefs; en caso contrario se envia el valor de $COMMON_ACCOUNT_ID -->
              <xsl:choose>
                <!--<xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode!='New' 
                            or (/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode='New' and contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PromoCode,'InalÃ¡mbrico'))">-->
                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode!='New' 
                            or (/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode='New' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PreActivateFlag='Y')">
                  <corecom:ApplicationObjectKey>
                    <corecom:ID>
                      <xsl:attribute name="schemeID">
                        <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ACCOUNTID</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="schemeAgencyID">
                        <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountId,'COMMON',false())"/>
                    </corecom:ID>
                  </corecom:ApplicationObjectKey>
                </xsl:when>
                <xsl:otherwise>
                  <corecom:ApplicationObjectKey>
                    <corecom:ID>
                      <xsl:attribute name="schemeID">
                        <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ACCOUNTID</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="schemeAgencyID">
                        <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="$COMMON_ACCOUNT_ID"/>
                    </corecom:ID>
                  </corecom:ApplicationObjectKey>
                </xsl:otherwise>
              </xsl:choose>
            </corecom:CustomerPartyAccountIdentification>
            <!--Dic2016-AJNR: Si la accion sobre la cuenta viene con New, se agrega el numero de cuenta en la tabla de xref, si no se busca el valor -->
            <xsl:choose>
              <!--<xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode='New' and not(contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PromoCode,'InalÃ¡mbrico'))">-->
              <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode='New' and not(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PreActivateFlag='Y')">
                <corecom:CustomerPartyAccountName>
                  <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountId,'Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account,'LINK')"/>
                </corecom:CustomerPartyAccountName>
              </xsl:when>
              <xsl:otherwise>
                <corecom:CustomerPartyAccountName>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account"/>
                </corecom:CustomerPartyAccountName>
              </xsl:otherwise>
            </xsl:choose>
            <corecom:CustomerPartyAccountContactPersonName>
              <corecom:FirstName>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </corecom:FirstName>
              <corecom:FamilyName>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountLoc"/>
              </corecom:FamilyName>
            </corecom:CustomerPartyAccountContactPersonName>
            <corecom:CustomerPartyAccountContactAddressCommunication>
              <corecom:AddressCommunication>
                <corecom:Address>
                  <corecom:Identification>
                    <corecom:BusinessComponentID>
                      <xsl:attribute name="schemeID">
                        <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ADDRESSID</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="schemeAgencyID">
                        <xsl:text disable-output-escaping="no">COMMON</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="orcl:generate-guid()"/>
                    </corecom:BusinessComponentID>
                    <corecom:ApplicationObjectKey>
                      <corecom:ID>
                        <xsl:attribute name="schemeID">
                          <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ADDRESSID</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="schemeAgencyID">
                          <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                        </xsl:attribute>
                        <xsl:choose>
                          <xsl:when test="$vIdDireccion != '' ">
                            <xsl:value-of select="$vIdDireccion"/>
                          </xsl:when>
                          <xsl:when test="$vIdDireccionVideo != '' ">
                            <xsl:value-of select="$vIdDireccionVideo"/>
                          </xsl:when>
                          <xsl:when test="$vServicioBTGpre = 'BTG PRE'">
                            <xsl:value-of select="concat(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode,'+',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account)"/>
                          </xsl:when>
                          <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                            <xsl:value-of select="concat(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode,'+',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account)"/>
                          </xsl:when>
                          <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service OTT']/orderentryabo:ProductTypeCodeCRM = 'Service OTT'  and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = 1">
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'IRD' and orderentryabo:Hierarchy = 'Master']/orderentryabo:PrimaryAddressId"/>
                          </xsl:when>
                          <xsl:otherwise></xsl:otherwise>
                        </xsl:choose>
                      </corecom:ID>
                    </corecom:ApplicationObjectKey>
                  </corecom:Identification>
                  <xsl:choose>
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                      <corecom:LineOne>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineOne>
                      <corecom:LineTwo>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineTwo>
                      <corecom:LineThree>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineThree>
                      <corecom:LineFour>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineFour>
                      <corecom:LineFive>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineFive>
                      <corecom:LineSix>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineSix>
                      <corecom:CityName>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                      </corecom:CityName>
                      <corecom:StateName>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:StateName>
                      <corecom:CountryCode>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                      </corecom:CountryCode>
                      <corecom:CitySubDivisionName>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:CitySubDivisionName>
                      <corecom:PostalCode>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:PostalCode>
                      <corecom:TimeZoneCode>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:TimeZoneCode>
                    </xsl:when>
                    <xsl:otherwise>
                      <corecom:LineOne>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountStreetAddress"/>
                      </corecom:LineOne>
                      <corecom:LineTwo>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountAddressNumber"/>
                      </corecom:LineTwo>
                      <corecom:LineThree>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountInternalNum"/>
                      </corecom:LineThree>
                      <corecom:LineFour>
                        <!--xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountStreetAddress2"/-->
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountProvince"/>
                      </corecom:LineFour>
                      <corecom:LineFive>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBetweenStreet1"/>
                      </corecom:LineFive>
                      <corecom:LineSix>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBetweenStreet2"/>
                      </corecom:LineSix>
                      <corecom:CityName>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCity"/>
                      </corecom:CityName>
                      <corecom:StateName>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountState"/>
                      </corecom:StateName>
                      <corecom:CountryCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/COUNTRY_CODES.dvm','Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCountry,'COMMON','CouldNotBeFound')"/>
                      </corecom:CountryCode>
                      <corecom:CitySubDivisionName>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCounty"/>
                      </corecom:CitySubDivisionName>
                      <corecom:PostalCode>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountPostalCode"/>
                      </corecom:PostalCode>
                      <corecom:TimeZoneCode>
                        <xsl:text disable-output-escaping="no"></xsl:text>
                      </corecom:TimeZoneCode>
                    </xsl:otherwise>
                  </xsl:choose>
                </corecom:Address>
              </corecom:AddressCommunication>
            </corecom:CustomerPartyAccountContactAddressCommunication>
            <corecom:CustomerPartyAccountContactPhoneCommunication>
              <corecom:PhoneCommunication>
                <corecom:CountryCode>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountKeyAccess"/>
                </corecom:CountryCode>
                <corecom:AreaCode>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountAreaCode"/>
                </corecom:AreaCode>
                <corecom:LocalNumber>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountPhoneNum"/>
                </corecom:LocalNumber>
                <corecom:ExtensionNumber>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </corecom:ExtensionNumber>
                <corecom:TypeCode>
                  <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PHONE_TYPE.dvm','Siebel_01','Telefono particular','COMMON','CouldNotBeFound')"/>
                </corecom:TypeCode>
              </corecom:PhoneCommunication>
            </corecom:CustomerPartyAccountContactPhoneCommunication>
            <corecom:CustomerPartyAccountContactEmailCommunication>
              <corecom:EmailCommunication>
                <corecom:URI>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToMailAddress"/>
                </corecom:URI>
              </corecom:EmailCommunication>
            </corecom:CustomerPartyAccountContactEmailCommunication>
            <corecom:CustomerPartyAccountTypeCode>
              <xsl:text disable-output-escaping="no">RESIDENTIAL</xsl:text>
            </corecom:CustomerPartyAccountTypeCode>
            <corecom:Custom>
              <!--Septiembre 2017. RHA Devolver el common del Parent Account/-->
              <xsl:choose>
                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ParentAccountId = ''">
                  <ns0:ParentAccountId>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ParentAccountId"/>
                  </ns0:ParentAccountId>
                </xsl:when>
                <xsl:otherwise>
                  <ns0:ParentAccountId>
                    <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref","Siebel_01",/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ParentAccountId,"COMMON",false())'/>
                  </ns0:ParentAccountId>
                </xsl:otherwise>
              </xsl:choose>
              <ns0:AccountType>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketClass"/>
              </ns0:AccountType>
              <ns0:AccessCode1>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </ns0:AccessCode1>
              <ns0:AccessCode2>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </ns0:AccessCode2>
              <ns0:AccountTypeAndSubtype>
                <xsl:text disable-output-escaping="no">NA</xsl:text>
              </ns0:AccountTypeAndSubtype>
              <ns0:BillingProfilePaymentSystem>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem"/>
              </ns0:BillingProfilePaymentSystem>
              <ns0:ChangeBillingProfilePaymentSystem>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ChangeBillingProfilePaymentSystem"/>
              </ns0:ChangeBillingProfilePaymentSystem>
              <ns0:HotelRoomQtyRange>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </ns0:HotelRoomQtyRange>
              <ns0:EmployeeId>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountEmployeeNumber"/>
              </ns0:EmployeeId>
              <ns0:AccountCurrencyCode>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODES.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CurrencyCode,'COMMON','CouldNotBeFound')"/>
              </ns0:AccountCurrencyCode>
              <ns0:InvoiceCurrencyCode>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODES.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CurrencyCode,'COMMON','CouldNotBeFound')"/>
              </ns0:InvoiceCurrencyCode>
              <xsl:choose>
                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:InternetServicesFlag = 'Y'">
                  <ns0:AccountWWW>
                    <xsl:text disable-output-escaping="no">true</xsl:text>
                  </ns0:AccountWWW>
                </xsl:when>
                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:InternetServicesFlag = 'N'">
                  <ns0:AccountWWW>
                    <xsl:text disable-output-escaping="no">false</xsl:text>
                  </ns0:AccountWWW>
                </xsl:when>
                <xsl:otherwise>
                  <ns0:AccountWWW>
                    <xsl:text disable-output-escaping="no">false</xsl:text>
                  </ns0:AccountWWW>
                </xsl:otherwise>
              </xsl:choose>
              <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccAssocStatus != ''">
                <ns0:AssociationStatus>
                  <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_ASSOCIATECODE.dvm","SIEBEL_01",/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccAssocStatus,"COMMON","CouldNotBeFound")'/>
                </ns0:AssociationStatus>
              </xsl:if>
              <ns0:IdSAP>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SAPId"/>
              </ns0:IdSAP>
              <xsl:variable name="vSaleChannelIRD">
                <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:SalesChannel!='' and orderentryabo:AssetTypeCode = 'IRD']">
                  <xsl:if test="position()=1">
                    <xsl:value-of select="orderentryabo:SalesChannel"/>
                  </xsl:if>
                </xsl:for-each>
              </xsl:variable>
              <xsl:variable name="vSaleChannelVideo">
                <xsl:choose>
                  <xsl:when test="$vSaleChannelIRD!=''">
                    <xsl:value-of select="$vSaleChannelIRD"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:SalesChannel!='']">
                      <xsl:if test="position()=1">
                        <xsl:value-of select="orderentryabo:SalesChannel"/>
                      </xsl:if>
                    </xsl:for-each>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="vSaleChannelModem"
                            select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']/orderentryabo:SalesChannel"/>
              <xsl:variable name="vSaleChannelCel">
                <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:SalesChannel!='' and orderentryabo:AssetTypeCode = 'SIM-MSISDN']">
                  <xsl:if test="position()=1">
                    <xsl:value-of select="orderentryabo:SalesChannel"/>
                  </xsl:if>
                </xsl:for-each>
              </xsl:variable>
              <xsl:variable name="vSaleChannelDatosCel">
                <xsl:choose>
                  <xsl:when test="$vSaleChannelModem!=''">
                    <xsl:value-of select="$vSaleChannelModem"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="$vSaleChannelCel"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <ns0:SaleChannel>
                <xsl:value-of select="$vSaleChannelDatosCel"/>
              </ns0:SaleChannel>
              <ns0:InstallationSaleChannel>
                <xsl:value-of select="$vSaleChannelVideo"/>
              </ns0:InstallationSaleChannel>
              <ns0:SaleOrigin>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Source"/>
              </ns0:SaleOrigin>
              <ns0:SalesDistributor>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountMasterId"/>
              </ns0:SalesDistributor>
            </corecom:Custom>
          </corecom:CustomerPartyReference>
          <corecom:ShipToPartyReference>
            <corecom:OrganizationName>
              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CompanyName"/>
            </corecom:OrganizationName>
            <corecom:Contact>
              <corecom:PersonName>
                <corecom:FirstName>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToFirstName"/>
                </corecom:FirstName>
                <corecom:FamilyName>
                  <xsl:value-of select="concat(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToLastName,' ',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToMiddleName)"/>
                </corecom:FamilyName>
              </corecom:PersonName>
              <corecom:ContactPhoneCommunication>
                <corecom:PhoneCommunication>
                  <corecom:CountryCode>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountKeyAccess"/>
                  </corecom:CountryCode>
                  <corecom:AreaCode>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountAreaCode"/>
                  </corecom:AreaCode>
                  <corecom:LocalNumber>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountPhoneNum"/>
                  </corecom:LocalNumber>
                  <corecom:ExtensionNumber>
                    <xsl:text disable-output-escaping="no"></xsl:text>
                  </corecom:ExtensionNumber>
                  <corecom:TypeCode>
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PHONE_TYPE.dvm','Siebel_01','Telefono particular','COMMON','CouldNotBeFound')"/>
                  </corecom:TypeCode>
                </corecom:PhoneCommunication>
              </corecom:ContactPhoneCommunication>
              <corecom:ContactEmailCommunication>
                <corecom:EmailCommunication>
                  <corecom:URI>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToMailAddress"/>
                  </corecom:URI>
                </corecom:EmailCommunication>
              </corecom:ContactEmailCommunication>
            </corecom:Contact>
            <corecom:LocationReference>
              <corecom:Address>
                <corecom:LineOne>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryShipToStreetAddress"/>
                </corecom:LineOne>
                <corecom:LineTwo>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryShipToAddressNumber"/>
                </corecom:LineTwo>
                <corecom:LineThree>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryShipToInternalNum"/>
                </corecom:LineThree>
                <corecom:LineFour>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryShipToProvince"/>
                </corecom:LineFour>
                <corecom:LineFive>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </corecom:LineFive>
                <corecom:LineSix>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </corecom:LineSix>
                <xsl:choose>
                  <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                    <corecom:CityName>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                    </corecom:CityName>
                    <corecom:CountryCode>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                    </corecom:CountryCode>
                  </xsl:when>
                  <xsl:otherwise>
                    <corecom:CityName>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryShipToCity"/>
                    </corecom:CityName>
                    <corecom:CountryCode>
                      <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/COUNTRY_CODES.dvm','Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryShipToCountry,'COMMON','')"/>
                    </corecom:CountryCode>
                  </xsl:otherwise>
                </xsl:choose>
                <corecom:CitySubDivisionName>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryShipToCounty"/>
                </corecom:CitySubDivisionName>
                <corecom:StateName>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryShipToState"/>
                </corecom:StateName>
                <corecom:PostalCode>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryShipToPostalCode"/>
                </corecom:PostalCode>
              </corecom:Address>
            </corecom:LocationReference>
          </corecom:ShipToPartyReference>
          <corecom:BillToPartyReference>
            <corecom:PartyIdentification>
              <corecom:BusinessComponentID>
                <xsl:value-of select="orcl:generate-guid()"/>
              </corecom:BusinessComponentID>
              <corecom:ApplicationObjectKey>
                <corecom:ID>
                  <xsl:attribute name="schemeID">
                    <xsl:text disable-output-escaping="no">BILLINGPARTY_ACCOUNTID</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="schemeAgencyID">
                    <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                  </xsl:attribute>
                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountId"/>
                </corecom:ID>
              </corecom:ApplicationObjectKey>
            </corecom:PartyIdentification>
            <corecom:OrganizationName>
              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CompanyName"/>
            </corecom:OrganizationName>
            <corecom:Contact>
              <corecom:PersonName>
                <corecom:FirstName>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </corecom:FirstName>
                <xsl:choose>
                  <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToFiscalName != ''">
                    <corecom:FamilyName>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToFiscalName"/>
                    </corecom:FamilyName>
                  </xsl:when>
                  <xsl:otherwise>
                    <corecom:FamilyName>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountLoc"/>
                    </corecom:FamilyName>
                  </xsl:otherwise>
                </xsl:choose>
              </corecom:PersonName>
              <corecom:ContactPhoneCommunication>
                <corecom:PhoneCommunication>
                  <corecom:CountryCode>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountKeyAccess"/>
                  </corecom:CountryCode>
                  <corecom:AreaCode>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountAreaCode"/>
                  </corecom:AreaCode>
                  <corecom:LocalNumber>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountPhoneNum"/>
                  </corecom:LocalNumber>
                  <corecom:ExtensionNumber>
                    <xsl:text disable-output-escaping="no"></xsl:text>
                  </corecom:ExtensionNumber>
                  <corecom:TypeCode>
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PHONE_TYPE.dvm','Siebel_01','Telefono particular','COMMON','CouldNotBeFound')"/>
                  </corecom:TypeCode>
                </corecom:PhoneCommunication>
              </corecom:ContactPhoneCommunication>
              <corecom:ContactEmailCommunication>
                <corecom:EmailCommunication>
                  <corecom:URI>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToMailAddress"/>
                  </corecom:URI>
                </corecom:EmailCommunication>
              </corecom:ContactEmailCommunication>
            </corecom:Contact>
            <corecom:LocationReference>
              <xsl:choose>
                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBillToStreetAddress2 != ''">
                  <corecom:Address>
                    <corecom:LineOne>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBillToStreetAddress2"/>
                    </corecom:LineOne>
                    <corecom:LineTwo>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBillToExternalNum"/>
                    </corecom:LineTwo>
                    <corecom:LineThree>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBillToInternalNum"/>
                    </corecom:LineThree>
                    <corecom:LineFour>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBillToStreetAddress3"/>
                    </corecom:LineFour>
                    <corecom:LineFive>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </corecom:LineFive>
                    <corecom:LineSix>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </corecom:LineSix>
                    <corecom:CitySubDivisionName>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBillToCounty"/>
                    </corecom:CitySubDivisionName>
                    <corecom:StateName>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBillToState"/>
                    </corecom:StateName>
                    <xsl:choose>
                      <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                        <corecom:CountryCode>
                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                        </corecom:CountryCode>
                        <corecom:CityName>
                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                        </corecom:CityName>
                      </xsl:when>
                      <xsl:otherwise>
                        <corecom:CountryCode>
                          <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/COUNTRY_CODES.dvm','Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCountry,'COMMON','')"/>
                        </corecom:CountryCode>
                        <corecom:CityName>
                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBillToStreetAddress"/>
                        </corecom:CityName>
                      </xsl:otherwise>
                    </xsl:choose>
                    <corecom:PostalCode>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBillToPostalCode"/>
                    </corecom:PostalCode>
                  </corecom:Address>
                </xsl:when>
                <xsl:otherwise>
                  <corecom:Address>
                    <corecom:LineOne>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountStreetAddress"/>
                    </corecom:LineOne>
                    <corecom:LineTwo>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountAddressNumber"/>
                    </corecom:LineTwo>
                    <corecom:LineThree>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountInternalNum"/>
                    </corecom:LineThree>
                    <corecom:LineFour>
                      <!--xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountStreetAddress2"/-->
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountProvince"/>
                    </corecom:LineFour>
                    <corecom:LineFive>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBetweenStreet1"/>
                    </corecom:LineFive>
                    <corecom:LineSix>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBetweenStreet2"/>
                    </corecom:LineSix>
                    <corecom:CitySubDivisionName>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCounty"/>
                    </corecom:CitySubDivisionName>
                    <corecom:StateName>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountState"/>
                    </corecom:StateName>
                    <xsl:choose>
                      <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                        <corecom:CountryCode>
                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                        </corecom:CountryCode>
                        <corecom:CityName>
                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                        </corecom:CityName>
                      </xsl:when>
                      <xsl:otherwise>
                        <corecom:CountryCode>
                          <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/COUNTRY_CODES.dvm','Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCountry,'COMMON','')"/>
                        </corecom:CountryCode>
                        <corecom:CityName>
                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCity"/>
                        </corecom:CityName>
                      </xsl:otherwise>
                    </xsl:choose>
                    <corecom:PostalCode>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountPostalCode"/>
                    </corecom:PostalCode>
                  </corecom:Address>
                </xsl:otherwise>
              </xsl:choose>
            </corecom:LocationReference>
            <corecom:BillingProfileReference>
              <corecom:BillingProfileIdentification>
                <!--Dic2017-AJNR: Si la accion de la cuenta viene New, se almacena el valor en la tabla Xref y si no se busca -->
                <corecom:ID>
                  <xsl:attribute name="schemeID">
                    <xsl:text disable-output-escaping="no">BILLINGPROFILE_ID</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="schemeAgencyID">
                    <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                  </xsl:attribute>
                  <xsl:value-of select="$COMMON_BILLINGPROFILEID"/>
                </corecom:ID>
              </corecom:BillingProfileIdentification>
              <corecom:PaymentProfileReference>
                <corecom:PaymentProfileIdentification>
                  <!--Dic2017-AJNR: Si la accion de la cuenta viene New, se almacena el valor en la tabla Xref y si no se busca -->
                  <xsl:choose>
                    <xsl:when test="$existBillingProfile = ''">
                      <corecom:ID>
                        <xsl:attribute name="schemeID">
                          <xsl:text disable-output-escaping="no">BILLINGPROFILE_ID</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="schemeAgencyID">
                          <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                        </xsl:attribute>
                        <!--DERC: validacion para creacion de cuentas padre -->
                        <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileId != ''">
                          <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_PAYPROFILEID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileId,'COMMON',$COMMON_BILLINGPROFILEID,'ADD')"/>
                        </xsl:if>
                      </corecom:ID>
                    </xsl:when>
                    <xsl:otherwise>
                      <corecom:ID>
                        <xsl:attribute name="schemeID">
                          <xsl:text disable-output-escaping="no">BILLINGPROFILE_ID</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="schemeAgencyID">
                          <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                        </xsl:attribute>
                        <!--DERC: validacion para creacion de cuentas padre -->
                        <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileId != ''">
                          <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_PAYPROFILEID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileId,'COMMON',false())"/>
                        </xsl:if>
                      </corecom:ID>
                    </xsl:otherwise>
                  </xsl:choose>
                </corecom:PaymentProfileIdentification>
              </corecom:PaymentProfileReference>
            </corecom:BillingProfileReference>
            <corecom:Custom>
              <ns0:PrimaryBillToTaxRegime>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToTaxRegime"/>
              </ns0:PrimaryBillToTaxRegime>
              <ns0:PrimaryBillToUseCFDI>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToUseCFDI"/>
              </ns0:PrimaryBillToUseCFDI>
              <ns0:TaxPayerType>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </ns0:TaxPayerType>
              <xsl:choose>
                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToRFC != ''">
                  <ns0:TaxPayerId>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToRFC"/>
                  </ns0:TaxPayerId>
                </xsl:when>
                <xsl:otherwise>
                  <ns0:TaxPayerId>
                    <xsl:text disable-output-escaping="no">-</xsl:text>
                  </ns0:TaxPayerId>
                </xsl:otherwise>
              </xsl:choose>
              <ns0:InvoiceMediaCode>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_BILLPROFILE_BILLTYPECODE.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountBillType,'BRM_01','','Siebel_02','NO REQUIERE ENVIO')"/>
              </ns0:InvoiceMediaCode>
              <xsl:choose>
                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                  <ns0:BillingAccountCountryCode>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                  </ns0:BillingAccountCountryCode>
                </xsl:when>
                <xsl:otherwise>
                  <ns0:BillingAccountCountryCode>
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/COUNTRY_CODES.dvm','Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCountry,'COMMON','')"/>
                  </ns0:BillingAccountCountryCode>
                </xsl:otherwise>
              </xsl:choose>
              <ns0:AccountDisableBilling>
                <xsl:text disable-output-escaping="no">0</xsl:text>
              </ns0:AccountDisableBilling>
              <xsl:choose>
                <xsl:when test='xp20:upper-case(oraext:right-trim(oraext:left-trim(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SOAServiceName))) = "SBL-LLD-CREACUENTA-PADRE"'>
                  <ns0:ExemptFromCollections>
                    <xsl:text disable-output-escaping="no">1</xsl:text>
                  </ns0:ExemptFromCollections>
                </xsl:when>
                <xsl:otherwise>
                  <ns0:ExemptFromCollections>
                    <xsl:text disable-output-escaping="no">0</xsl:text>
                  </ns0:ExemptFromCollections>
                </xsl:otherwise>
              </xsl:choose>
              <ns0:FutureDom>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileBillCycle"/>
              </ns0:FutureDom>
              <!--<xsl:variable name="accCount">
                <xsl:choose>
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem='PRE' and $contInst='2'">
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ACCOUNT_TYPE_CODE_PREPAY_DUALPLAY.dvm', 'OU_TYPE_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountType, 'ACC_SOURCE', 'CouldNotBeFound', 'MARKET_TYPE_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketType, 'MARKET_CLASS_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketClass, 'FUNCIONALIDAD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountTechnology,
                            'INSTANCIAS_SERVICIO', $contInst, 'VELOCIDAD', $vVelocidad)"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ACCOUNT_TYPE_CODE.dvm', 'OU_TYPE_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountType, 'ACC_SOURCE', 'CouldNotBeFound', 'MARKET_TYPE_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketType, 'MARKET_CLASS_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketClass, 'FUNCIONALIDAD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountTechnology,
                            'INSTANCIAS_SERVICIO', $contInst)"/>
                    </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>-->
              <xsl:choose>
                <!--<xsl:when test="starts-with(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ACCOUNT_TYPE_CODE.dvm', 'OU_TYPE_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountType, 'ACC_SOURCE', 'CouldNotBeFound', 'MARKET_TYPE_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketType, 'MARKET_CLASS_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketClass, 'FUNCIONALIDAD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountTechnology,
                            'INSTANCIAS_SERVICIO', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ConteoInstancias),'06')">-->
                <!--<xsl:when test="starts-with(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ACCOUNT_TYPE_CODE.dvm', 'OU_TYPE_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountType, 'ACC_SOURCE', 'CouldNotBeFound', 'MARKET_TYPE_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketType, 'MARKET_CLASS_CD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketClass, 'FUNCIONALIDAD', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountTechnology,
                            'INSTANCIAS_SERVICIO', $contInst),'06')">-->
                <!--<xsl:when test="starts-with($accCount,'06')">-->
                <xsl:when test="$accountScheme='PRE'">
                  <ns0:DisableInvoiceGeneration>
                    <xsl:text disable-output-escaping="no">1</xsl:text>
                  </ns0:DisableInvoiceGeneration>
                </xsl:when>
                <xsl:otherwise>
                  <ns0:DisableInvoiceGeneration>
                    <xsl:text disable-output-escaping="no">0</xsl:text>
                  </ns0:DisableInvoiceGeneration>
                </xsl:otherwise>
              </xsl:choose>
              <ns0:TaxExemption>
                <ns0:Type>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </ns0:Type>
                <ns0:Id>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </ns0:Id>
                <ns0:Percentage>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </ns0:Percentage>
                <ns0:StartDate>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </ns0:StartDate>
                <ns0:EndDate>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </ns0:EndDate>
              </ns0:TaxExemption>
            </corecom:Custom>
          </corecom:BillToPartyReference>
          <salesorderebo:SalesOrderPaymentInstrument>
            <corecom:PaymentInstrument>
              <xsl:if test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_PAYPROFILE_PAYMETHODCODE.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentMethod,'OSM_01','CouldNotBeFound') = 'CREDITCARD'">
                <corecom:CreditCard>
                  <corecom:PaymentInstrument>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentInstrument"/>
                  </corecom:PaymentInstrument>
                  <corecom:InstrumentIdentifier>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileInstrumentIdentifier"/>
                  </corecom:InstrumentIdentifier>
                  <corecom:TypeCode>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileClearingHouseId"/>
                  </corecom:TypeCode>
                  <corecom:Number>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileCreditCardNumber"/>
                  </corecom:Number>
                  <corecom:CardHolderName>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileCreditCardName"/>
                  </corecom:CardHolderName>
                  <corecom:ExpirationMonth>
                    <xsl:value-of select="substring(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileCreditCardExpirationDate,1.0,2.0)"/>
                  </corecom:ExpirationMonth>
                  <corecom:ExpirationYear>
                    <xsl:value-of select="substring(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileCreditCardExpirationDate,9.0,2.0)"/>
                  </corecom:ExpirationYear>
                  <corecom:CardHolderAddress>
                    <corecom:StateName>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </corecom:StateName>
                    <corecom:CountryCode>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                    </corecom:CountryCode>
                    <corecom:PostalCode>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </corecom:PostalCode>
                  </corecom:CardHolderAddress>
                  <corecom:Custom>
                    <ns0:CecobanCode>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </ns0:CecobanCode>
                    <ns0:CardBIN>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </ns0:CardBIN>
                  </corecom:Custom>
                </corecom:CreditCard>
              </xsl:if>
              <xsl:if test="contains(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_PAYPROFILE_PAYMETHODCODE.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentMethod,'OSM_01','CouldNotBeFound'), 'DEBIT')">
                <corecom:DebitCard>
                  <xsl:choose>
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileCreditCardNumber != ''">
                      <corecom:TypeCode>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileClearingHouseId"/>
                      </corecom:TypeCode>
                      <corecom:Number>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileCreditCardNumber"/>
                      </corecom:Number>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:variable name="account"
                                    select="substring(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileBankAccountNumber,1.0,3.0)"/>
                      <xsl:variable name="clearingHouse"
                                    select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_PAYPROFILE_CLEARINGCODE.dvm','Siebel_01',$account,'BRM_01','')"/>
                      <xsl:choose>
                        <xsl:when test="$clearingHouse != ''">
                          <corecom:TypeCode>
                            <xsl:value-of select="$clearingHouse"/>
                          </corecom:TypeCode>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:variable name="clearingHouseSF"
                                        select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_PAYPROFILE_CLEARINGCODE.dvm','Siebel_01','Default','BRM_01','')"/>
                          <corecom:TypeCode>
                            <xsl:value-of select="$clearingHouseSF"/>
                          </corecom:TypeCode>
                        </xsl:otherwise>
                      </xsl:choose>
                      <corecom:Number>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileBankAccountNumber"/>
                      </corecom:Number>
                    </xsl:otherwise>
                  </xsl:choose>
                  <corecom:PaymentInstrument>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentInstrument"/>
                  </corecom:PaymentInstrument>
                  <corecom:InstrumentIdentifier>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileInstrumentIdentifier"/>
                  </corecom:InstrumentIdentifier>
                  <corecom:CardHolderName>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileCreditCardName"/>
                  </corecom:CardHolderName>
                  <corecom:ExpirationMonth>
                    <xsl:value-of select="substring(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileCreditCardExpirationDate,1.0,2.0)"/>
                  </corecom:ExpirationMonth>
                  <corecom:ExpirationYear>
                    <xsl:value-of select="substring(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileCreditCardExpirationDate,9.0,2.0)"/>
                  </corecom:ExpirationYear>
                  <corecom:CardHolderAddress>
                    <corecom:CountryCode>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </corecom:CountryCode>
                    <corecom:PostalCode>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </corecom:PostalCode>
                  </corecom:CardHolderAddress>
                  <corecom:Custom>
                    <ns0:CecobanCode>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </ns0:CecobanCode>
                    <ns0:CardBIN>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </ns0:CardBIN>
                    <ns0:AccountTypeCode>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </ns0:AccountTypeCode>
                  </corecom:Custom>
                </corecom:DebitCard>
              </xsl:if>
              <xsl:choose>
                <xsl:when test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_PAYPROFILE_PAYMETHODCODE.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentMethod,'OSM_01','CouldNotBeFound') = 'CASH'">
                  <corecom:CashIndicator>
                    <xsl:text disable-output-escaping="no">TRUE</xsl:text>
                  </corecom:CashIndicator>
                </xsl:when>
                <xsl:otherwise>
                  <corecom:CashIndicator>
                    <xsl:text disable-output-escaping="no">FALSE</xsl:text>
                  </corecom:CashIndicator>
                </xsl:otherwise>
              </xsl:choose>
            </corecom:PaymentInstrument>
          </salesorderebo:SalesOrderPaymentInstrument>
          <corecom:SalespersonPartyReference>
            <corecom:PartyIdentification>
              <corecom:ID>
                <xsl:attribute name="schemeID">
                  <xsl:text disable-output-escaping="no">SALESPERSON_PARTYID</xsl:text>
                </xsl:attribute>
                <!--               <xsl:choose>
                  <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SMC' and orderentryabo:ActionCode != 'Existing']) > 0">
                    <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SMC' and orderentryabo:ActionCode != 'Existing']">
                      <xsl:if test="position() = 1">
                        <xsl:value-of select="orderentryabo:DistributorThatActivates"/>
                      </xsl:if>
                    </xsl:for-each>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SMC' and orderentryabo:ActionCode = 'Existing']">
                      <xsl:if test="position() = 1">
                        <xsl:value-of select="orderentryabo:DistributorThatActivates"/>
                      </xsl:if>
                    </xsl:for-each>
                  </xsl:otherwise>
                </xsl:choose>
                -->
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DistributorThatActivates"/>
              </corecom:ID>
            </corecom:PartyIdentification>
            <corecom:Custom>
              <ns0:MasterId>
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountMasterId"/>
              </ns0:MasterId>
            </corecom:Custom>
          </corecom:SalespersonPartyReference>
          <xsl:variable name="ROOT_INF_ACCOUNTLINEID"
                        select="orcl:generate-guid()"/>
          <!-- Linea de cuenta -->
          <salesorderebo:SalesOrderLine>
            <corecom:Identification>
              <corecom:BusinessComponentID>
                <xsl:value-of select="$ROOT_INF_ACCOUNTLINEID"/>
              </corecom:BusinessComponentID>
              <corecom:ID>
                <xsl:attribute name="schemeID">
                  <xsl:text disable-output-escaping="no">SALESORDER_LINEID</xsl:text>
                </xsl:attribute>
                <xsl:attribute name="schemeAgencyID">
                  <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                </xsl:attribute>
                <xsl:text disable-output-escaping="no">1</xsl:text>
              </corecom:ID>
              <corecom:ApplicationObjectKey>
                <corecom:ID>
                  <xsl:attribute name="schemeID">
                    <xsl:text disable-output-escaping="no">SALESORDER_LINEID</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="schemeAgencyID">
                    <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                  </xsl:attribute>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </corecom:ID>
              </corecom:ApplicationObjectKey>
            </corecom:Identification>
            <salesorderebo:Description>
              <xsl:text disable-output-escaping="no">CUENTA</xsl:text>
            </salesorderebo:Description>
            <salesorderebo:OrderQuantity>
              <xsl:text disable-output-escaping="no">1</xsl:text>
            </salesorderebo:OrderQuantity>
            <salesorderebo:ServiceActionCode>
              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode,'OSM_01','ACTIONNOTSUPPORTED')"/>
              <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','Siebel_01','New','OSM_01','ACTIONNOTSUPPORTED')"/>-->
            </salesorderebo:ServiceActionCode>
            <salesorderebo:StartBillingOnFirstServiceUsageIndicator>
              <xsl:text disable-output-escaping="no">false</xsl:text>
            </salesorderebo:StartBillingOnFirstServiceUsageIndicator>
            <salesorderebo:FulfillmentModeCode>
              <xsl:text disable-output-escaping="no">DO</xsl:text>
            </salesorderebo:FulfillmentModeCode>
            <corecom:ParentSalesOrderLineIdentification>
              <corecom:BusinessComponentID>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </corecom:BusinessComponentID>
              <corecom:ApplicationObjectKey>
                <corecom:ID>
                  <xsl:attribute name="schemeID">
                    <xsl:text disable-output-escaping="no">SALESORDER_LINEID</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="schemeAgencyID">
                    <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                  </xsl:attribute>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </corecom:ID>
              </corecom:ApplicationObjectKey>
            </corecom:ParentSalesOrderLineIdentification>
            <corecom:RootParentSalesOrderLineIdentification>
              <corecom:BusinessComponentID>
                <xsl:value-of select="$ROOT_INF_ACCOUNTLINEID"/>
              </corecom:BusinessComponentID>
              <corecom:ApplicationObjectKey>
                <corecom:ID>
                  <xsl:attribute name="schemeID">
                    <xsl:text disable-output-escaping="no">SALESORDER_LINEID</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="schemeAgencyID">
                    <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                  </xsl:attribute>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </corecom:ID>
              </corecom:ApplicationObjectKey>
            </corecom:RootParentSalesOrderLineIdentification>
            <corecom:Status>
              <corecom:Code>
                <xsl:text disable-output-escaping="no">OPEN</xsl:text>
              </corecom:Code>
              <corecom:Description>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </corecom:Description>
            </corecom:Status>
            <corecom:ServiceAddress>
              <corecom:Identification>
                <corecom:BusinessComponentID>
                  <xsl:attribute name="schemeID">
                    <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ADDRESSID</xsl:text>
                  </xsl:attribute>
                  <xsl:attribute name="schemeAgencyID">
                    <xsl:text disable-output-escaping="no">COMMON</xsl:text>
                  </xsl:attribute>
                  <xsl:value-of select="orcl:generate-guid()"/>
                </corecom:BusinessComponentID>
                <corecom:ApplicationObjectKey>
                  <corecom:ID>
                    <xsl:attribute name="schemeID">
                      <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ADDRESSID</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="schemeAgencyID">
                      <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                    </xsl:attribute>
                    <xsl:choose>
                      <xsl:when test="$vIdDireccion != '' ">
                        <xsl:value-of select="$vIdDireccion"/>
                      </xsl:when>
                      <xsl:when test="$vIdDireccionVideo != '' ">
                        <xsl:value-of select="$vIdDireccionVideo"/>
                      </xsl:when>
                      <xsl:when test="$vServicioBTGpre = 'BTG PRE'">
                        <xsl:value-of select="concat(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode,'+',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account)"/>
                      </xsl:when>
                      <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                        <xsl:value-of select="concat(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode,'+',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account)"/>
                      </xsl:when>
                      <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service OTT']/orderentryabo:ProductTypeCodeCRM = 'Service OTT'  and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = 1">
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'IRD' and orderentryabo:Hierarchy = 'Master']/orderentryabo:PrimaryAddressId"/>
                      </xsl:when>
                      <xsl:otherwise></xsl:otherwise>
                    </xsl:choose>
                    <!--<xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode,'COMMON', '') = 'Modem']/orderentryabo:PrimaryAddressId"/>-->
                  </corecom:ID>
                </corecom:ApplicationObjectKey>
              </corecom:Identification>
              <xsl:choose>
                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                  <corecom:LineOne>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:LineOne>
                  <corecom:LineTwo>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:LineTwo>
                  <corecom:LineThree>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:LineThree>
                  <corecom:LineFour>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:LineFour>
                  <corecom:LineFive>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:LineFive>
                  <corecom:LineSix>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:LineSix>
                  <corecom:CityName>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                  </corecom:CityName>
                  <corecom:StateName>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:StateName>
                  <corecom:CountryCode>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                  </corecom:CountryCode>
                  <corecom:CitySubDivisionName>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:CitySubDivisionName>
                  <corecom:PostalCode>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:PostalCode>
                  <corecom:TimeZoneCode>
                    <xsl:text disable-output-escaping="no">dummy</xsl:text>
                  </corecom:TimeZoneCode>
                </xsl:when>
                <xsl:otherwise>
                  <corecom:LineOne>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountStreetAddress"/>
                  </corecom:LineOne>
                  <corecom:LineTwo>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountAddressNumber"/>
                  </corecom:LineTwo>
                  <corecom:LineThree>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountInternalNum"/>
                  </corecom:LineThree>
                  <corecom:LineFour>
                    <!--xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountStreetAddress2"/-->
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountProvince"/>
                  </corecom:LineFour>
                  <corecom:LineFive>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBetweenStreet1"/>
                  </corecom:LineFive>
                  <corecom:LineSix>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBetweenStreet2"/>
                  </corecom:LineSix>
                  <corecom:CityName>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCity"/>
                  </corecom:CityName>
                  <corecom:StateName>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountState"/>
                  </corecom:StateName>
                  <corecom:CountryCode>
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/COUNTRY_CODES.dvm','Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCountry,'COMMON','CouldNotBeFound')"/>
                  </corecom:CountryCode>
                  <corecom:CitySubDivisionName>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCounty"/>
                  </corecom:CitySubDivisionName>
                  <corecom:PostalCode>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountPostalCode"/>
                  </corecom:PostalCode>
                  <corecom:TimeZoneCode>
                    <xsl:text disable-output-escaping="no"></xsl:text>
                  </corecom:TimeZoneCode>
                </xsl:otherwise>
              </xsl:choose>
            </corecom:ServiceAddress>
            <corecom:EffectiveTimePeriod>
              <corecom:StartDateTime>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </corecom:StartDateTime>
              <corecom:EndDateTime>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </corecom:EndDateTime>
            </corecom:EffectiveTimePeriod>
            <corecom:ItemReference>
              <corecom:ItemIdentification>
                <corecom:BusinessComponentID>
                  <xsl:value-of select="orcl:generate-guid()"/>
                </corecom:BusinessComponentID>
                <corecom:ApplicationObjectKey>
                  <!--Dic2016-AJNR: Si la accion de la cuenta viene como New se guarda en la tabla de Xref, en caso contrario se realiza la busqueda 
                  
                  CUSTOMERPARTY_SERVICESID-->
                  <xsl:choose>
                    <!--<xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode='New' and not(contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PromoCode,'InalÃ¡mbrico'))">-->
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode='New' and (contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountTypeRecharge,'VETV') or contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceType,'Video')) and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PreActivateFlag='Y' 
                                        and xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountId,'COMMON',false())='' ">
                      <corecom:ID>
                        <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountId,'COMMON',$COMMON_ACCOUNT_ID,'ADD')"/>
                      </corecom:ID>
                    </xsl:when>
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode='New' and not(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PreActivateFlag='Y')">
                      <corecom:ID>
                        <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountId,'COMMON',$COMMON_ACCOUNT_ID,'ADD')"/>
                      </corecom:ID>
                    </xsl:when>
                    <xsl:otherwise>
                      <corecom:ID>
                        <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountId,'COMMON',false())"/>
                      </corecom:ID>
                    </xsl:otherwise>
                  </xsl:choose>
                </corecom:ApplicationObjectKey>
              </corecom:ItemIdentification>
              <corecom:Name>
                <xsl:text disable-output-escaping="no">CUENTA</xsl:text>
              </corecom:Name>
              <corecom:ClassificationCode>
                <xsl:attribute name="listID">
                  <xsl:text disable-output-escaping="no">PermittedTypeCode</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','CustomerAccount','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
              </corecom:ClassificationCode>
              <corecom:ClassificationCode>
                <xsl:attribute name="listID">
                  <xsl:text disable-output-escaping="no">BillingProductTypeCode</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','CustomerAccount','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
              </corecom:ClassificationCode>
              <corecom:ClassificationCode>
                <xsl:attribute name="listID">
                  <xsl:text disable-output-escaping="no">FulfillmentItemCode</xsl:text>
                </xsl:attribute>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','CustomerAccount','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
              </corecom:ClassificationCode>
              <corecom:TypeCode>
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','CustomerAccount','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
              </corecom:TypeCode>
              <corecom:ServiceIndicator>
                <xsl:text disable-output-escaping="no">false</xsl:text>
              </corecom:ServiceIndicator>
              <corecom:Description>
                <xsl:text disable-output-escaping="no">CUENTA</xsl:text>
              </corecom:Description>
              <corecom:SpecificationGroup>
                <corecom:Name>
                  <xsl:text disable-output-escaping="no">ExtensibleAttributes</xsl:text>
                </corecom:Name>
                <!-- Inicio Modelo de Cuenta-->
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">MarketType</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketType"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">MarketClass</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountMarketClass"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">PrimaryAccountCountry</xsl:text>
                  </corecom:Name>
                  <xsl:choose>
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                      <corecom:Value>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                      </corecom:Value>
                    </xsl:when>
                    <xsl:otherwise>
                      <corecom:Value>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCountry"/>
                      </corecom:Value>
                    </xsl:otherwise>
                  </xsl:choose>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">AccountTypeService</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountTypeService"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">AccountService</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountService"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">email</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OTTUser"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">compound_hashed_password</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OTTPassword"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">country</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">AccountServiceType</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceType"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">WeightServicesType</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceTypeWeighting"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">DeviceNumbersWeighting</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountDeviceNumbersWeighting"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">ServicesPackage</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServicesPackage"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">AccountServiceTypeWeightingDetail</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceTypeWeightingDetail"/>
                  </corecom:Value>
                </corecom:Specification>
                <!-- -->
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">RechargeType</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountTypeRecharge"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">WeightServices</xsl:text>
                  </corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>
                    <xsl:text disable-output-escaping="no">TechnologyAccount</xsl:text>
                  </corecom:Name>
                  <xsl:choose>
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountTechnology = ''">
                      <corecom:Value>
                        <xsl:text disable-output-escaping="no">SD</xsl:text>
                      </corecom:Value>
                    </xsl:when>
                    <xsl:otherwise>
                      <corecom:Value>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountTechnology"/>
                      </corecom:Value>
                    </xsl:otherwise>
                  </xsl:choose>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>InvoiceBillPaymentSystem</corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ComInvoiceBillPaymentSystem"/>
                  </corecom:Value>
                </corecom:Specification>
                <corecom:Specification>
                  <corecom:Name>ServiceAccountType</corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountType"/>
                  </corecom:Value>
                </corecom:Specification>
                <!-- Fin Modelo de Cuenta-->
                <xsl:variable name="vActivePreAccount">
                  <xsl:choose>
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PreActivateFlag='Y'">
                      <corecom:Value>
                        <xsl:text disable-output-escaping="no">true</xsl:text>
                      </corecom:Value>
                    </xsl:when>
                    <xsl:otherwise>
                      <corecom:Value>
                        <xsl:text disable-output-escaping="no">false</xsl:text>
                      </corecom:Value>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:variable>
                <corecom:Specification>
                  <corecom:Name>ActivePreAccount</corecom:Name>
                  <corecom:Value>
                    <xsl:value-of select="$vActivePreAccount"/>
                  </corecom:Value>
                </corecom:Specification>
                <xsl:variable name="vPreRegistry">
                  <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN']">
                    <xsl:if test="position()=1">
                      <xsl:value-of select="orderentryabo:ActivationCode"/>
                    </xsl:if>
                  </xsl:for-each>
                </xsl:variable>
                <xsl:choose>
                  <!--Dic2016: Se validan condiciones para activar hotbill cuando se trate de una cuenta de PREPAGO -->
                  <!--<xsl:when test="starts-with($accountTypeAndSubtypeLine,'06')">-->
                  <!--Se establece condicion para  no hacer HotBill en cuentas subordinadas en Jerarquia!-->
                  <xsl:when test="$accountScheme='PRE' and not(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccAssocStatus = 'Asociada')">
                    <!-- Se busca si hay compra de algun producto faturable, entonces se manda la bandera, excepto en activacion de la cuenta -->
                    <xsl:variable name="isFacturable">
                      <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Producto' and orderentryabo:ActionCode='New']">
                        <xsl:variable name="productFuncionality"
                                      select="oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ FUNCIONALIDAD from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>
                        <xsl:if test="contains($productFuncionality, 'Factura')">
                          <xsl:value-of select="orderentryabo:Product"/>
                        </xsl:if>
                      </xsl:for-each>
                    </xsl:variable>
                    <!--                <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems) &lt;= 1.0 and string-length($isFacturable) > 0">
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                        </corecom:Name>
                        <corecom:Value>
                          <xsl:text disable-output-escaping="no">true</xsl:text>
                        </corecom:Value>
                      </corecom:Specification>
                    </xsl:if>
                    -->
                    <!-- DERC modificacion para considerar cancelaciones y descartar activaciones, se estan excluyendo los cambios de paquete y de esquema-->
                    <corecom:Specification>
                      <corecom:Name>
                        <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                      </corecom:Name>
                      <!--<xsl:choose>
                        <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'New' and $contInst='2'">
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">true</xsl:text>
                          </corecom:Value>
                        </xsl:when>
                        <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems) &lt;= 1.0 
                                        and string-length($isFacturable) > 0 
                                        and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'New'">
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">true</xsl:text>
                          </corecom:Value>
                        </xsl:when>
                        <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Deleted'">
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">true</xsl:text>
                          </corecom:Value>
                        </xsl:when>
                        <xsl:otherwise>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">false</xsl:text>
                          </corecom:Value>
                        </xsl:otherwise>
                      </xsl:choose>-->
                      <xsl:choose>
                        <!--Para nueva cuenta dualplay prepago-->
                        <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'New'">
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">true</xsl:text>
                          </corecom:Value>
                        </xsl:when>
                        <!--Para una orden con algun producto facturable y que no sea una activacion !-->
                        <xsl:when test="string-length($isFacturable) > 0 and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'New'">
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">true</xsl:text>
                          </corecom:Value>
                        </xsl:when>
                        <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Deleted'">
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">true</xsl:text>
                          </corecom:Value>
                        </xsl:when>
                        <xsl:otherwise>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">false</xsl:text>
                          </corecom:Value>
                        </xsl:otherwise>
                      </xsl:choose>
                    </corecom:Specification>
                  </xsl:when>
                  <!--Dic2016 AJNR: Se validan condiciones para activar hotbill cuando se trate de una cuenta de postpago -->
                  <!--Se establece condicion para  no hacer HotBill en cuentas subordinadas en Jerarquia!-->
                  <xsl:when test="$accountScheme='POS' and not(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccAssocStatus = 'Asociada')">
                    <!--DERC 7 abril 2017-->
                    <!--RHA 30 agosto 2017-->
                    <xsl:choose>
                      <!--Activacion-->
                      <!--Cancelacion-->
                      <!--<xsl:when test="(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'New' and not(starts-with($accountTypeAndSubtypeLine,'04')))or (/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Deleted')">-->
                      <xsl:when test="(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'New' and $vPreRegistry != 'PRE-REGISTRY' ) or (/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Deleted')">
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">true</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                      </xsl:when>
                      <!--Cambio de Esquema-->
                      <xsl:when test="$changeSchemeFlag='Y'">
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">true</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                      </xsl:when>
                      <!--March17 AJRN: Se agrega HotBill en el cambio de esquema de VeTV a TyA. Se compone de dos escenarios: 
                            1) Prepago con recarga: llega el paquete de prepago con Deleted y el paquete con postpago con New
                            2) Prepago sin recarga: llega unicamente el nuevo paquete de postpago con New pero no llega ningun paquete con Delete 
                            puesto que ese podria tratarse de un cambio de paquete entre postpago-->
                      <!--<xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'New'">
                        <xsl:choose>
                          <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='Deleted']) >= 1.0 and count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='New']) >= 1.0">-->
                      <!--<xsl:variable name="deletePaymentScheme"
                                          select="xp20:upper-case(oraext:lookup-table('ofertacomercial_codes','SIEBEL_ID', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='Deleted']/orderentryabo:PartNumber, 'SUBTIPO','jdbc/usr_ofcomer'))"/>
                            <xsl:variable name="addPaymentScheme"
                                          select="xp20:upper-case(oraext:lookup-table('ofertacomercial_codes','SIEBEL_ID', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='New']/orderentryabo:PartNumber, 'SUBTIPO','jdbc/usr_ofcomer'))"/>-->
                      <!--<xsl:variable name="deletePaymentScheme"
                                          select="xp20:upper-case(oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ SUBTIPO from ofertacomercial_codes where nombre_producto='&quot;,/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='Deleted']/orderentryabo:Product,&quot;' and siebel_id='&quot;,/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='Deleted']/orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;))"/>
                            <xsl:variable name="addPaymentScheme"
                                          select="xp20:upper-case(oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ SUBTIPO from ofertacomercial_codes where nombre_producto='&quot;,/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='New']/orderentryabo:Product,&quot;' and siebel_id='&quot;,/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='New']/orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;))"/>
                            <xsl:variable name="deleteDvmScheme"
                                          select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_CONFIG_CROSSREFERENCE.dvm','SOA_01',$deletePaymentScheme,'SOA_03','CouldNotBeFound')"/>
                            <xsl:variable name="addDvmScheme"
                                          select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_CONFIG_CROSSREFERENCE.dvm','SOA_01',$addPaymentScheme,'SOA_03','CouldNotBeFound')"/>
                            <xsl:choose>
                              <xsl:when test="$deleteDvmScheme != $addDvmScheme">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:text disable-output-escaping="no">true</xsl:text>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:text disable-output-escaping="no">false</xsl:text>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='Deleted']) = 0.0 and count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='New']) >= 1.0">-->
                      <!--<xsl:variable name="addPaymentScheme"
                                          select="xp20:upper-case(oraext:lookup-table('ofertacomercial_codes','SIEBEL_ID', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='New']/orderentryabo:PartNumber, 'SUBTIPO','jdbc/usr_ofcomer'))"/>-->
                      <!--<xsl:variable name="addPaymentScheme"
                                          select="xp20:upper-case(oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ SUBTIPO from ofertacomercial_codes where nombre_producto='&quot;,/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='New']/orderentryabo:Product,&quot;' and siebel_id='&quot;,/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode='New']/orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;))"/>
                            <xsl:variable name="addDvmScheme"
                                          select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_CONFIG_CROSSREFERENCE.dvm","SOA_01",$addPaymentScheme,"SOA_03","CouldNotBeFound")'/>
                            <xsl:choose>
                              <xsl:when test="$addDvmScheme = 'TRADICIONAL' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Modified'">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:text disable-output-escaping="no">true</xsl:text>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:text disable-output-escaping="no">false</xsl:text>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:when>
                          <xsl:otherwise>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">false</xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>-->
                      <xsl:otherwise>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">HotbillCode</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">false</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                </xsl:choose>
                <!--Ene2017: AJNR Se agrega specifications para cancelacion de cuenta -->
                <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Deleted'">
                  <corecom:Specification>
                    <corecom:Name>
                      <xsl:text disable-output-escaping="no">TargetStatus</xsl:text>
                    </corecom:Name>
                    <corecom:Value>
                      <xsl:text disable-output-escaping="no">10102</xsl:text>
                    </corecom:Value>
                  </corecom:Specification>
                  <corecom:Specification>
                    <corecom:Name>
                      <xsl:text disable-output-escaping="no">DisconnectReason</xsl:text>
                    </corecom:Name>
                    <corecom:Value>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason"/>
                    </corecom:Value>
                  </corecom:Specification>
                  <corecom:Specification>
                    <corecom:Name>
                      <xsl:text disable-output-escaping="no">StatusPropagation</xsl:text>
                    </corecom:Name>
                    <corecom:Value>
                      <xsl:text disable-output-escaping="no">1</xsl:text>
                    </corecom:Value>
                  </corecom:Specification>
                </xsl:if>
                <!-- Se agrega variable para identificar si existe una promesa de pago y no mandar la marca de xGrade, ya que en las promesas de pago bajan varios paquetes / paquetes principales en New RAH 13/02/2019 -->
                <xsl:variable name="vPaymentPromise"
                              select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'PaymentPromise'])"/>
                <xsl:variable name="vIRD_Slave"
                              select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'IRD' and orderentryabo:Hierarchy = 'Slave1' and orderentryabo:ActionCode = 'Modified/New'])"/>
                <xsl:variable name="vTypeOM"
                              select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType"/>
                <xsl:variable name="vNumService"
                              select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServicesPackage"/>
                <xsl:choose>
                  <!--Sept2017 Cambio de paquete con recarga -->
                  <xsl:when test="$accountScheme='PRE' and (count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode = 'New']) > 0) and (count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode = 'Deleted']) > 0) and $changeSchemeFlag='N' and $vPaymentPromise = 0 and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode ='Modified'">
                    <corecom:Specification>
                      <corecom:Name>
                        <xsl:text disable-output-escaping="no">ResetCounterRecharge</xsl:text>
                      </corecom:Name>
                      <corecom:Value>
                        <xsl:text disable-output-escaping="no">true</xsl:text>
                      </corecom:Value>
                    </corecom:Specification>
                  </xsl:when>
                  <xsl:when test="$accountScheme='PRE' and count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode = 'New']) > 0 and count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-RootItems/orderentryabo:ComWorkOrder-RootItems[orderentryabo:ActionCode = 'Deleted']) = 0 and $changeSchemeFlag='N' and $vPaymentPromise = 0 and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode ='Modified'">
                    <xsl:choose>
                      <xsl:when test="$vIRD_Slave > 0 and $vTypeOM = 'Reactivacion de cuenta'">
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ResetCounterRecharge</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">false</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                      </xsl:when>
                      <xsl:otherwise>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ResetCounterRecharge</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">true</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:when test="$accountScheme='PRE' and count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Product='Servicio de Datos' and orderentryabo:ActionCode='New']) >=1 and count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Product='Servicio de Video' and orderentryabo:ActionCode='Existing']) >=1 and $vPaymentPromise = 0 and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode ='Modified'">
                    <corecom:Specification>
                      <corecom:Name>
                        <xsl:text disable-output-escaping="no">ResetCounterRecharge</xsl:text>
                      </corecom:Name>
                      <corecom:Value>
                        <xsl:text disable-output-escaping="no">true</xsl:text>
                      </corecom:Value>
                    </corecom:Specification>
                  </xsl:when>
                  <!--<xsl:when test="$accountScheme='POS' and $vTypeOM = 'Cancelar equipo secundario' and $vNumService = '1 Play' and count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Product='Servicio de Datos' and orderentryabo:ActionCode='Deleted']) >=1 and count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Product='Servicio de Video' and orderentryabo:ActionCode='Modified']) >=1 and $vPaymentPromise = 0 and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode ='Modified'">
                    <corecom:Specification>
                      <corecom:Name>
                        <xsl:text disable-output-escaping="no">ResetCounterRecharge</xsl:text>
                      </corecom:Name>
                      <corecom:Value>
                        <xsl:text disable-output-escaping="no">true</xsl:text>
                      </corecom:Value>
                    </corecom:Specification>
                  </xsl:when>-->
                </xsl:choose>
              </corecom:SpecificationGroup>
              <corecom:NetworkIndicator>
                <xsl:text disable-output-escaping="no">false</xsl:text>
              </corecom:NetworkIndicator>
              <corecom:FulfillmentCompositionTypeCode>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </corecom:FulfillmentCompositionTypeCode>
              <corecom:FulfillmentSuccessCode>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </corecom:FulfillmentSuccessCode>
              <corecom:PrimaryClassificationCode>
                <xsl:text disable-output-escaping="no"></xsl:text>
              </corecom:PrimaryClassificationCode>
              <corecom:ServiceInstanceIndicator>
                <xsl:text disable-output-escaping="no">true</xsl:text>
              </corecom:ServiceInstanceIndicator>
            </corecom:ItemReference>
            <!-- AJNR Marzo2018 - Se agrega estructura InstalledProductReference que ahora es obligatoria por upgrade de version de EBM en OSM -->
            <corecom:InstalledProductReference>
              <corecom:InstalledProductIdentification>
                <corecom:BusinessComponentID schemeID="INSTALLEDPRODUCT_ID"
                                             schemeAgencyID="COMMON">
                  <xsl:value-of select="orcl:generate-guid()"/>
                </corecom:BusinessComponentID>
                <corecom:ApplicationObjectKey>
                  <corecom:ID schemeID="INSTALLEDPRODUCT_ID"
                              schemeAgencyID="SEBL_01">
                    <xsl:value-of select="concat(substring(orcl:generate-guid(),1.0,8.0),'00')"/>
                  </corecom:ID>
                </corecom:ApplicationObjectKey>
              </corecom:InstalledProductIdentification>
            </corecom:InstalledProductReference>
            <salesorderebo:SalesOrderSchedule>
              <salesorderebo:RequestedDeliveryDateTime>
                <xsl:value-of select="xp20:current-dateTime()"/>
              </salesorderebo:RequestedDeliveryDateTime>
              <salesorderebo:ExpectedDeliveryDate>
                <xsl:value-of select="xp20:current-dateTime()"/>
              </salesorderebo:ExpectedDeliveryDate>
              <corecom:BillToPartyReference>
                <corecom:BillingProfileReference>
                  <corecom:BillingProfileIdentification>
                    <corecom:ID>
                      <xsl:attribute name="schemeID">
                        <xsl:text disable-output-escaping="no">BILLINGPROFILE_ID</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="schemeAgencyID">
                        <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="$COMMON_BILLINGPROFILEID"/>
                    </corecom:ID>
                  </corecom:BillingProfileIdentification>
                </corecom:BillingProfileReference>
              </corecom:BillToPartyReference>
            </salesorderebo:SalesOrderSchedule>
            <salesorderebo:SalesOrderLineSpecificationGroup>
              <corecom:SpecificationGroup>
                <corecom:Name>
                  <xsl:text disable-output-escaping="no">Extensible Attributes</xsl:text>
                </corecom:Name>
              </corecom:SpecificationGroup>
            </salesorderebo:SalesOrderLineSpecificationGroup>
          </salesorderebo:SalesOrderLine>
          <xsl:variable name="paymentMethodCode"
                        select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_PAYPROFILE_PAYMETHODCODE.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentMethod,'OSM_01','CouldNotBeFound')"/>
          <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems">
            <xsl:variable name="productType"
                          select="oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ OSM_ID from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>
            <xsl:variable name="fullfillmentIC"
                          select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
            <xsl:variable name="vServ_BTGPre">
              <xsl:choose>
                <xsl:when test="contains(orderentryabo:Product,'lueToGo Video Everywhere PRE')">
                  <xsl:text disable-output-escaping="no">BTG PRE</xsl:text>
                </xsl:when>
                <xsl:otherwise>
                  <xsl:text disable-output-escaping="no"></xsl:text>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:variable>
            <xsl:if test="contains($fullfillmentIC,'Streaming Service Class') and $vServ_BTGPre != 'BTG PRE'">
              <xsl:choose>
                <xsl:when test="orderentryabo:ActionCode = 'New' and xp20:upper-case(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'SOA_XREF_CODE','','SOA_SERVICIO','-')) = 'SI'">
                  <corecom:Value>
                    <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01', orderentryabo:IntegrationId, 'COMMON', orcl:generate-guid(), 'ADD')"/>
                  </corecom:Value>
                </xsl:when>
              </xsl:choose>
            </xsl:if>
          </xsl:for-each>
          <!--$stParentIRDUltra-->
          <xsl:variable name="stParentIRDUltra">
            <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems">
              <xsl:variable name="vParentServiceInstanceId"
                            select="orderentryabo:ParentServiceInstanceId"/>
              <xsl:variable name="intID">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[(orderentryabo:ProductTypeCodeCRM = 'Paquete' or orderentryabo:ProductTypeCodeCRM = 'Paquete Principal') and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>
              </xsl:variable>
              <xsl:variable name="poiId"
                            select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:IntegrationId=$intID]/orderentryabo:ParentOrderItemId"/>
              <xsl:variable name="ssIdParent"
                            select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Id=$poiId]/orderentryabo:ParentOrderItemId"/>
              <xsl:if test="contains(orderentryabo:ProductTypeCodeCRM,'UHD') and orderentryabo:Hierarchy = 'Master' and  orderentryabo:AssetTypeCode = 'IRD'">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Id=$ssIdParent]/orderentryabo:Product"/>
              </xsl:if>
            </xsl:for-each>
          </xsl:variable>
          <!--$ssParentIRDUltra-->
          <xsl:variable name="ssParentIRDUltra">
            <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems">
              <xsl:variable name="vParentServiceInstanceId"
                            select="orderentryabo:ParentServiceInstanceId"/>
              <xsl:variable name="intID">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[(orderentryabo:ProductTypeCodeCRM = 'Paquete' or orderentryabo:ProductTypeCodeCRM = 'Paquete Principal') and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>
              </xsl:variable>
              <xsl:variable name="poiId"
                            select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:IntegrationId=$intID]/orderentryabo:ParentOrderItemId"/>
              <xsl:if test="contains(orderentryabo:ProductTypeCodeCRM,'UHD') and orderentryabo:Hierarchy = 'Master' and  orderentryabo:AssetTypeCode = 'IRD'">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Id=$poiId]/orderentryabo:Product"/>
              </xsl:if>
            </xsl:for-each>
          </xsl:variable>
          <!--$saleDetailIRDUltra-->
          <xsl:variable name="saleDetailIRDUltra">
            <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems">
              <xsl:variable name="vParentServiceInstanceId"
                            select="orderentryabo:ParentServiceInstanceId"/>
              <xsl:variable name="intID">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[(orderentryabo:ProductTypeCodeCRM = 'Paquete' or orderentryabo:ProductTypeCodeCRM = 'Paquete Principal') and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>
              </xsl:variable>
              <xsl:if test="contains(orderentryabo:ProductTypeCodeCRM,'UHD') and orderentryabo:Hierarchy = 'Master' and  orderentryabo:AssetTypeCode = 'IRD'">
                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:IntegrationId=$intID]/orderentryabo:Product"/>
              </xsl:if>
            </xsl:for-each>
          </xsl:variable>
          <!--paqueteInstanciaServicioIRDUHD-->
          <xsl:variable name="paqueteInstanciaServicio_spaceUHD">
            <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems">
              <xsl:variable name="vParentServiceInstanceId"
                            select="orderentryabo:ParentServiceInstanceId"/>
              <xsl:if test="contains(orderentryabo:ProductTypeCodeCRM,'UHD') and orderentryabo:Hierarchy = 'Master' and  orderentryabo:AssetTypeCode = 'IRD'">
                <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Paquete' or orderentryabo:ProductTypeCodeCRM = 'Paquete Principal'] ">
                  <xsl:variable name="psiPaquete"
                                select="orderentryabo:ParentServiceInstanceId"/>
                  <xsl:choose>
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode='SMC' and orderentryabo:IntegrationId=$psiPaquete and orderentryabo:IntegrationId=$vParentServiceInstanceId]/orderentryabo:ServiceProductType='VIDEO'">
                      <xsl:value-of select="concat(orderentryabo:Product,' ')"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:text disable-output-escaping="no"></xsl:text>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsl:for-each>
              </xsl:if>
            </xsl:for-each>
          </xsl:variable>
          <xsl:variable name="paqueteInstanciaServicioIRDUHD"
                        select="normalize-space($paqueteInstanciaServicio_spaceUHD)"/>
          <!-- Lineas de productos-->
          <!--ALL-->
          <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems">
            <xsl:sort select="orderentryabo:Key" order="descending"/>
            <xsl:variable name="distribuitor"
                          select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DistributorThatActivates"/>
            <xsl:if test="(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_DISTRIBUITORWITHOUTPROMO.dvm','DISTRIBUITOR', $distribuitor, 'DELETE_PROMOS','CouldNotBeFound') != 'Y')
                        or (dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_DISTRIBUITORWITHOUTPROMO.dvm','DISTRIBUITOR', $distribuitor, 'DELETE_PROMOS','CouldNotBeFound') = 'Y'
                        and dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'BRM_OSM_TYPE_CODE','CouldNotBeFound') != 'PROMOTION','SOA_SERVICIO','-')">
              <xsl:variable name="countPosition" select="position()"/>
              <!-- <xsl:variable name="tipoLinea"
                            select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode,'COMMON', '')"/>
             
              <xsl:variable name="lineasDif"
                            select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:ProductTypeCode,'COMMON', '')"/>  
                            -->
              <!-- Variables para BTCEL  -->
              <xsl:variable name="tipoLinea">
                <xsl:choose>
                  <xsl:when test="(contains(orderentryabo:Product,'MÃ³vil') or contains(orderentryabo:OriginalProductType,'CEL') or contains(orderentryabo:Product,'movil') or contains(orderentryabo:ProductType,'MÃ³vil') or  contains(orderentryabo:Product,'mÃ³vil') or contains(orderentryabo:ServiceProductType,'CEL')) and (/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '6' or contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting,'6'))">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON','', 'SOA_02','TelefonÃ­a')"/>
                  </xsl:when>
                  <xsl:when test="contains(orderentryabo:Product,'MIFI') and orderentryabo:ActionCode = 'Deleted'  and orderentryabo:ServiceProductType = 'DATOS'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON','', 'SOA_02','-')"/>
                  </xsl:when>
                  <!-- When para cancelacion de celular  -->
                  <xsl:when test="(contains(orderentryabo:Product,'MÃ³vil') or contains(orderentryabo:OriginalProductType,'CEL') or contains(orderentryabo:Product,'movil') or  contains(orderentryabo:Product,'mÃ³vil') or contains(orderentryabo:ProductType,'MÃ³vil') or contains(orderentryabo:ServiceProductType,'CEL')) and orderentryabo:ActionCode = 'Deleted'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON','', 'SOA_02','TelefonÃ­a')"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON','', 'SOA_02','-')"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <!-- /orderentryabo:AccountServiceWeighting = '6'  se valida para casos MIFI -->
              <xsl:variable name="lineasDif">
                <xsl:choose>
                  <xsl:when test="(contains(orderentryabo:Product,'MÃ³vil') or contains(orderentryabo:OriginalProductType,'CEL') or contains(orderentryabo:Product,'movil') or  contains(orderentryabo:Product,'mÃ³vil') or contains(orderentryabo:ProductType,'MÃ³vil') or contains(orderentryabo:ServiceProductType,'CEL')) and (/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '6' or contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting,'6'))">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:ProductTypeCode, 'COMMON','', 'SOA_02','TelefonÃ­a')"/>
                  </xsl:when>
                  <!-- When para cancelacion de celular  -->
                  <xsl:when test="(contains(orderentryabo:Product,'MÃ³vil') or contains(orderentryabo:OriginalProductType,'CEL') or contains(orderentryabo:Product,'movil') or  contains(orderentryabo:Product,'mÃ³vil') or contains(orderentryabo:ProductType,'MÃ³vil') or contains(orderentryabo:ServiceProductType,'CEL')) and orderentryabo:ActionCode = 'Deleted'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:ProductTypeCode, 'COMMON','', 'SOA_02','TelefonÃ­a')"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:ProductTypeCode, 'COMMON','', 'SOA_02','-')"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="productType"
                            select="oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ OSM_ID from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>
              <!--<xsl:text>tipoLinea: </xsl:text>
            <xsl:value-of select='$tipoLinea'/>
            <xsl:text> | lineasDif: </xsl:text>
            <xsl:value-of select='$lineasDif'/>
            <xsl:text> | productType: </xsl:text>
            <xsl:value-of select='$productType'/>       -->
              <xsl:variable name="hierarchy" select="orderentryabo:Hierarchy"/>
              <xsl:variable name="integrationId"
                            select="orderentryabo:IntegrationId"/>
              <xsl:variable name="eqMigFlag"
                            select="orderentryabo:EquipoMigradoFlag"/>
              <xsl:variable name="parentId"
                            select="orderentryabo:ParentOrderItemId"/>
              <xsl:variable name="rootId"
                            select="orderentryabo:RootOrderItemId"/>
              <xsl:variable name="vParentServiceInstanceId"
                            select="orderentryabo:ParentServiceInstanceId"/>
              <xsl:variable name="numPaqBTG"
                            select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'InternetService'])"/>
              <xsl:variable name="modemTipoCuenta">
                <xsl:choose>
                  <!--Se realiza el calculo del tipo de Modem de acuerdo al Proveedor IZZI / ATT o ALTAN RAH 12/02/2019 RAH-->
                  <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode='Modem' and orderentryabo:Supplier!= 'IZZI']) >=1">
                    <xsl:text disable-output-escaping="no">BroadbandEquipment</xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text disable-output-escaping="no">InternetEquipment</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="actionItem"
                            select="orderentryabo:ActionCode"/>
              <xsl:variable name="serviceIdEQ">
                <xsl:choose>
                  <xsl:when test="$tipoLinea='IRD' or ($tipoLinea='Modem' and $modemTipoCuenta='InternetEquipment' ) or $productType='WirelessBroadbandService'or $productType='BroadbandService' or
                                $productType='VoIPService' or $productType='CellphoneService' or $productType= 'StreamingService'">
                    <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',$integrationId,'COMMON',false())"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text disable-output-escaping="no"></xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="varServicio">
                <xsl:choose>
                  <xsl:when test="contains(orderentryabo:Product,'Combo+')">
                    <xsl:text disable-output-escaping="no">COMBO+</xsl:text>
                  </xsl:when>
                  <xsl:when test="contains(orderentryabo:Product,'Star')">
                    <xsl:text disable-output-escaping="no">STAR+</xsl:text>
                  </xsl:when>
                  <xsl:when test="contains(orderentryabo:Product,'VIX')">
                    <xsl:text disable-output-escaping="no">VIX+</xsl:text>
                  </xsl:when>
                  <xsl:when test="contains(orderentryabo:Product,'Disney')">
                    <xsl:text disable-output-escaping="no">D+</xsl:text>
                  </xsl:when>
                  <xsl:when test="contains(orderentryabo:Product,'lueToGo Video Everywhere PRE')">
                    <xsl:text disable-output-escaping="no">BTG PRE</xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text disable-output-escaping="no">-</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <!--<xsl:text>modemTipoCuenta: </xsl:text>
            <xsl:value-of select="$modemTipoCuenta"/>-->
              <xsl:variable name="permittedTC">
                <xsl:choose>
                  <xsl:when test="$lineasDif='CelSupplementary'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSupplementary","BRM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelService'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelService","BRM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelServiceBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelServiceBundle","BRM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelState'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelState","BRM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccessBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccessBundle","BRM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelEquipment'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelEquipment","BRM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccess'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccess","BRM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelSIM'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSIM","BRM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'IRD'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Equipment','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'SMC'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','SMC','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Extension'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Extension','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='PPE'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','PPVEvent','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='RB'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','RemoteBooking','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'Modem' or $tipoLinea = 'SIM'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$modemTipoCuenta,'BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Bandwidth','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Global Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBandwidth','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','BroadbandServiceBundle','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBundle','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Access','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVBundle','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccessBundle','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccess','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Addon'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AddonbackBroadbandService','BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Personalizable OTT'">
                    <xsl:text></xsl:text>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Personalizable'">
                    <xsl:text></xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ Tipo_Codigo from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="billingProductTC">
                <xsl:choose>
                  <xsl:when test="$lineasDif='CelSupplementary'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSupplementary","BRM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelService'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelService","BRM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelServiceBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelServiceBundle","BRM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelState'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelState","BRM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccessBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccessBundle","BRM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelEquipment'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelEquipment","BRM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccess'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccess","BRM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelSIM'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSIM","BRM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'IRD'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Equipment','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'SMC'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','SMC','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Extension'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Extension','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='PPE'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","PPVEvent","BRM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='RB'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','RemoteBooking','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'Modem'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$modemTipoCuenta,'BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea='SIM'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','BroadbandSIM','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Bandwidth','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Global Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBandwidth','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','BroadbandServiceBundle','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBundle','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Access','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVBundle','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccessBundle','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccess','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Addon'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AddonbackBroadbandService','BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Personalizable OTT'">
                    <xsl:text></xsl:text>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Personalizable'">
                    <xsl:text></xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <!--<xsl:variable name="productType"
                                select="oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ OSM_ID from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>-->
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'BRM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO',$varServicio)"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="fullfillmentIC">
                <xsl:choose>
                  <xsl:when test="$lineasDif='CelSupplementary'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSupplementary","OSM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelService'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelService","OSM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelServiceBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelServiceBundle","OSM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelState'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelState","OSM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccessBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccessBundle","OSM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelEquipment'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelEquipment","OSM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccess'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccess","OSM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelSIM'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSIM","OSM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'IRD'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Equipment','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'SMC' and $lineasDif=''">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','SMC','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'SMC' and $lineasDif='Extension'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Extension','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'SMC' and $lineasDif='ExtensionHMC'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','ExtensionHMC','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='PPE'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","PPVEvent","OSM_CLASS_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='RB'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','RemoteBooking','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'Modem'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$modemTipoCuenta,'OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea='SIM'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','BroadbandSIM','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Bandwidth','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Global Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBandwidth','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','BroadbandServiceBundle','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBundle','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Access','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVBundle','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccessBundle','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccess','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Addon'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AddonbackBroadbandService','OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Personalizable'">
                    <xsl:text></xsl:text>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Personalizable OTT'">
                    <xsl:text></xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <!--<xsl:variable name="productType"
                                select="oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ OSM_ID from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>-->
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'OSM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO',$varServicio)"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="vTypeCode">
                <xsl:choose>
                  <xsl:when test="$lineasDif='CelSupplementary'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSupplementary","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelService'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelService","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelServiceBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelServiceBundle","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelState'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelState","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccessBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccessBundle","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelEquipment'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelEquipment","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccess'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccess","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelSIM'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSIM","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'IRD'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Equipment','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'SMC'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','SMC','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Extension'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Extension','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='PPE'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","PPVEvent","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='RB'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","RemoteBooking","OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'Modem'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$modemTipoCuenta,'OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea='SIM'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','BroadbandSIM','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Bandwidth','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Global Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBandwidth','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBundle','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','BroadbandServiceBundle','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Access','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVBundle','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccessBundle','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccess','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Addon'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AddonbackBroadbandService','OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Personalizable OTT'">
                    <xsl:text>BUNDLE</xsl:text>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Personalizable'">
                    <!--<xsl:text>BUNDDLE</xsl:text>-->
                    <xsl:choose>
                      <xsl:when test="$rootId=''">
                        <xsl:text>OFFER</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'OSM_TYPE_CODE','BUNDLE','SOA_SERVICIO',$varServicio)"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <!--<xsl:variable name="productType"
                                select="oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ OSM_ID from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>-->
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO',$varServicio)"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <xsl:variable name="vDescItemRef">
                <xsl:choose>
                  <xsl:when test="$tipoLinea='IRD'">
                    <xsl:text disable-output-escaping="no">Equipo TV</xsl:text>
                  </xsl:when>
                  <xsl:when test="$tipoLinea='SMC' or $lineasDif='Extension'">
                    <xsl:text disable-output-escaping="no">Smartcard TV</xsl:text>
                  </xsl:when>
                  <xsl:when test="$lineasDif='PPE'">
                    <xsl:value-of select="orderentryabo:Product"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='RB'">
                    <!--xsl:text disable-output-escaping="no">Remote Booking</xsl:text-->
                    <xsl:value-of select="orderentryabo:Product"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea='Modem'">
                    <xsl:text disable-output-escaping="no">Modem</xsl:text>
                  </xsl:when>
                  <xsl:when test="$tipoLinea='SIM'">
                    <xsl:text disable-output-escaping="no">SIM</xsl:text>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Global Bandwidth' or $lineasDif='Bandwidth'">
                    <xsl:text disable-output-escaping="no">Ancho de Banda</xsl:text>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:value-of select="orderentryabo:Product"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <!--variable para BillingProductType-->
              <xsl:variable name="vBillingPTC">
                <xsl:choose>
                  <xsl:when test="$lineasDif='CelSupplementary'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSupplementary","BRM_OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelService'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelService","BRM_OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelServiceBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelServiceBundle","BRM_OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelState'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelState","BRM_OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccessBundle'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccessBundle","BRM_OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelEquipment'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelEquipment","BRM_OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelAccess'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelAccess","BRM_OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='CelSIM'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","CelSIM","BRM_OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea='IRD'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Equipment','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea = 'SMC'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','SMC','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Extension'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Extension','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='PPE'">
                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm","COMMON","PPVEvent","BRM_OSM_TYPE_CODE","CouldNotBeFound","SOA_SERVICIO","-")'/>
                  </xsl:when>
                  <xsl:when test="$tipoLinea='Modem'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$modemTipoCuenta,'BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Bandwidth','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Global Bandwidth'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBandwidth','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AccessBundle','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','BroadbandServiceBundle','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','Access','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVBundle','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access Bundle'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccessBundle','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='TV Access'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','TVAccess','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <xsl:when test="$lineasDif='RB' or $tipoLinea='SIM'">
                    <xsl:text></xsl:text>
                  </xsl:when>
                  <xsl:when test="$lineasDif='Broadband Service Addon'">
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON','AddonbackBroadbandService','BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                  </xsl:when>
                  <!--                    <xsl:when test="$lineasDif='Personalizable'">
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                    </xsl:when>-->
                  <xsl:otherwise>
                    <!--<xsl:variable name="productType"
                                select="oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ OSM_ID from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>-->
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO',$varServicio)"/>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <!--Variables para cambio de esquema-->
              <xsl:variable name="tablePRE">
                <xsl:text disable-output-escaping="no">PURCHASEDPRODUCT_PREPAY_ID.xref</xsl:text>
              </xsl:variable>
              <xsl:variable name="tablePOS">
                <xsl:text disable-output-escaping="no">PURCHASEDPRODUCT_ID.xref</xsl:text>
              </xsl:variable>
              <xsl:variable name="schemeOld">
                <xsl:if test="$changeSchemeFlag='Y'">
                  <xsl:value-of select="substring(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ChangeBillingProfilePaymentSystem,1,3)"/>
                </xsl:if>
              </xsl:variable>
              <xsl:variable name="schemeNew">
                <xsl:if test="$changeSchemeFlag='Y'">
                  <xsl:value-of select="substring(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ChangeBillingProfilePaymentSystem,4,3)"/>
                </xsl:if>
              </xsl:variable>
              <xsl:variable name="productPaymentScheme">
                <xsl:choose>
                  <xsl:when test="$changeSchemeFlag='Y'">
                    <xsl:choose>
                      <xsl:when test="(orderentryabo:ActionCode='Deleted' and $accountScheme!=$schemeOld) or orderentryabo:ActionCode='Existing'">
                        <xsl:choose>
                          <xsl:when test="$schemeOld='PRE'">
                            <xsl:value-of select="$tablePRE"/>
                          </xsl:when>
                          <xsl:when test="$schemeOld='POS'">
                            <xsl:value-of select="$tablePOS"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:text disable-output-escaping="no">CouldNotBeFound</xsl:text>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                      <xsl:when test="(orderentryabo:ActionCode='New' or orderentryabo:ActionCode='Modified') and $accountScheme=$schemeNew">
                        <xsl:choose>
                          <xsl:when test="$schemeNew='PRE'">
                            <xsl:value-of select="$tablePRE"/>
                          </xsl:when>
                          <xsl:when test="$schemeNew='POS'">
                            <xsl:value-of select="$tablePOS"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:text disable-output-escaping="no">CouldNotBeFound</xsl:text>
                          </xsl:otherwise>
                        </xsl:choose>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text disable-output-escaping="no">CouldNotBeFound</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:choose>
                      <xsl:when test="$accountScheme='PRE'">
                        <xsl:value-of select="$tablePRE"/>
                      </xsl:when>
                      <xsl:when test="$accountScheme='POS'">
                        <xsl:value-of select="$tablePOS"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text disable-output-escaping="no">CouldNotBeFound</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:variable>
              <!--Fin variables cambio Esquema-->
              <salesorderebo:SalesOrderLine>
                <corecom:Identification>
                  <corecom:BusinessComponentID>
                    <xsl:value-of select="orderentryabo:InfId"/>
                  </corecom:BusinessComponentID>
                  <corecom:ID>
                    <xsl:attribute name="schemeID">
                      <xsl:text disable-output-escaping="no">SALESORDER_LINEID</xsl:text>
                    </xsl:attribute>
                    <xsl:attribute name="schemeAgencyID">
                      <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                    </xsl:attribute>
                    <xsl:value-of select="orderentryabo:Id"/>
                  </corecom:ID>
                  <corecom:ApplicationObjectKey>
                    <corecom:ID>
                      <xsl:attribute name="schemeID">
                        <xsl:text disable-output-escaping="no">SALESORDER_LINEID</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="schemeAgencyID">
                        <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="orderentryabo:Id"/>
                    </corecom:ID>
                  </corecom:ApplicationObjectKey>
                </corecom:Identification>
                <!--<xsl:if test='$hierarchy != ""'>-->
                <xsl:choose>
                  <xsl:when test="$tipoLinea='IRD'">
                    <xsl:choose>
                      <xsl:when test="contains(xp20:upper-case($hierarchy),'MASTER')">
                        <salesorderebo:Description>
                          <xsl:value-of select="concat('EQUIPO ', 'Master', '1')"/>
                        </salesorderebo:Description>
                      </xsl:when>
                      <xsl:otherwise>
                        <salesorderebo:Description>
                          <xsl:value-of select="concat('EQUIPO ', 'Slave', number(substring($hierarchy,6.0)) + 1.0)"/>
                        </salesorderebo:Description>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:when test="$tipoLinea='SMC' or $lineasDif='Extension'">
                    <xsl:choose>
                      <xsl:when test="contains(xp20:upper-case(orderentryabo:Hierarchy),'MASTER')">
                        <salesorderebo:Description>
                          <xsl:value-of select="concat('SMC ', 'Master', '1')"/>
                        </salesorderebo:Description>
                      </xsl:when>
                      <xsl:otherwise>
                        <salesorderebo:Description>
                          <xsl:value-of select="concat('SMC ', 'Slave', number(substring(orderentryabo:Hierarchy,6.0)) + 1.0)"/>
                        </salesorderebo:Description>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:when>
                  <xsl:when test="$lineasDif='PPE'">
                    <salesorderebo:Description>
                      <xsl:value-of select='concat("PPV ", orderentryabo:Product)'/>
                    </salesorderebo:Description>
                  </xsl:when>
                  <xsl:when test="$lineasDif='RB'">
                    <salesorderebo:Description>
                      <xsl:value-of select="concat('RemoteBooking ',orderentryabo:RemBookContentType)"/>
                    </salesorderebo:Description>
                  </xsl:when>
                  <xsl:otherwise>
                    <!--Modem, SIM, Ancho de banda, productos, servicos personalizables-->
                    <salesorderebo:Description>
                      <xsl:value-of select="orderentryabo:Product"/>
                    </salesorderebo:Description>
                  </xsl:otherwise>
                </xsl:choose>
                <!--</xsl:if>-->
                <salesorderebo:OrderQuantity>
                  <xsl:text disable-output-escaping="no">1</xsl:text>
                </salesorderebo:OrderQuantity>
                <salesorderebo:ServiceActionCode>
                  <xsl:choose>
                    <xsl:when test="$vActionCodeRechargeBTGpre = 'Recharge' and orderentryabo:ActionCode = 'Existing' and contains($fullfillmentIC,'Streaming Service Class') and $varServicio = 'BTG PRE'">
                      <xsl:text disable-output-escaping="no">RESUME</xsl:text>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','Siebel_01',orderentryabo:ActionCode,'OSM_01','ACTIONNOTSUPPORTED')"/>
                    </xsl:otherwise>
                  </xsl:choose>
                  <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','Siebel_01','New','OSM_01','ACTIONNOTSUPPORTED')"/>-->
                </salesorderebo:ServiceActionCode>
                <salesorderebo:StartBillingOnFirstServiceUsageIndicator>
                  <xsl:text disable-output-escaping="no">false</xsl:text>
                </salesorderebo:StartBillingOnFirstServiceUsageIndicator>
                <salesorderebo:FulfillmentModeCode>
                  <xsl:text disable-output-escaping="no">DO</xsl:text>
                </salesorderebo:FulfillmentModeCode>
                <corecom:ParentSalesOrderLineIdentification>
                  <corecom:BusinessComponentID>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:Id = $parentId]/orderentryabo:InfId"/>
                  </corecom:BusinessComponentID>
                  <corecom:ApplicationObjectKey>
                    <corecom:ID>
                      <xsl:attribute name="schemeID">
                        <xsl:text disable-output-escaping="no">SALESORDER_LINEID</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="schemeAgencyID">
                        <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                      </xsl:attribute>
                      <xsl:choose>
                        <xsl:when test="$parentId=''">
                          <xsl:value-of select="orderentryabo:Id"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:Id = $parentId]/orderentryabo:Id"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </corecom:ID>
                  </corecom:ApplicationObjectKey>
                </corecom:ParentSalesOrderLineIdentification>
                <corecom:RootParentSalesOrderLineIdentification>
                  <corecom:BusinessComponentID>
                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:Id = $rootId]/orderentryabo:InfId"/>
                  </corecom:BusinessComponentID>
                  <corecom:ApplicationObjectKey>
                    <corecom:ID>
                      <xsl:attribute name="schemeID">
                        <xsl:text disable-output-escaping="no">SALESORDER_LINEID</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="schemeAgencyID">
                        <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:Id = $rootId]/orderentryabo:Id"/>
                    </corecom:ID>
                  </corecom:ApplicationObjectKey>
                </corecom:RootParentSalesOrderLineIdentification>
                <corecom:Status>
                  <corecom:Code>
                    <xsl:text disable-output-escaping="no">OPEN</xsl:text>
                  </corecom:Code>
                  <corecom:Description>
                    <xsl:text disable-output-escaping="no"></xsl:text>
                  </corecom:Description>
                </corecom:Status>
                <corecom:ServiceAddress>
                  <corecom:Identification>
                    <corecom:BusinessComponentID>
                      <xsl:attribute name="schemeID">
                        <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ADDRESSID</xsl:text>
                      </xsl:attribute>
                      <xsl:attribute name="schemeAgencyID">
                        <xsl:text disable-output-escaping="no">COMMON</xsl:text>
                      </xsl:attribute>
                      <xsl:value-of select="orcl:generate-guid()"/>
                    </corecom:BusinessComponentID>
                    <corecom:ApplicationObjectKey>
                      <corecom:ID>
                        <xsl:attribute name="schemeID">
                          <xsl:text disable-output-escaping="no">CUSTOMERPARTY_ADDRESSID</xsl:text>
                        </xsl:attribute>
                        <xsl:attribute name="schemeAgencyID">
                          <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                        </xsl:attribute>
                        <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode,'COMMON', '') = 'Modem']">
                                <xsl:value-of select="orderentryabo:PrimaryAddressId"/>
                            </xsl:for-each>-->
                        <!--<xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode,'COMMON', '') = 'Modem']/orderentryabo:PrimaryAddressId"/>-->
                        <xsl:choose>
                          <xsl:when test="$vIdDireccion != '' ">
                            <xsl:value-of select="$vIdDireccion"/>
                          </xsl:when>
                          <xsl:when test="$vIdDireccionVideo != '' ">
                            <xsl:value-of select="$vIdDireccionVideo"/>
                          </xsl:when>
                          <xsl:when test="$varServicio = 'BTG PRE'">
                            <xsl:value-of select="concat(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode,'+',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account)"/>
                          </xsl:when>
                          <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                            <xsl:value-of select="concat(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode,'+',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account)"/>
                          </xsl:when>
                          <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service OTT']/orderentryabo:ProductTypeCodeCRM = 'Service OTT'  and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = 1">
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'IRD' and orderentryabo:Hierarchy = 'Master']/orderentryabo:PrimaryAddressId"/>
                          </xsl:when>
                          <xsl:otherwise></xsl:otherwise>
                        </xsl:choose>
                      </corecom:ID>
                    </corecom:ApplicationObjectKey>
                  </corecom:Identification>
                  <xsl:choose>
                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting = '7'">
                      <corecom:LineOne>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineOne>
                      <corecom:LineTwo>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineTwo>
                      <corecom:LineThree>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineThree>
                      <corecom:LineFour>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineFour>
                      <corecom:LineFive>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineFive>
                      <corecom:LineSix>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:LineSix>
                      <corecom:CityName>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                      </corecom:CityName>
                      <corecom:StateName>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:StateName>
                      <corecom:CountryCode>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                      </corecom:CountryCode>
                      <corecom:CitySubDivisionName>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:CitySubDivisionName>
                      <corecom:PostalCode>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:PostalCode>
                      <corecom:TimeZoneCode>
                        <xsl:text disable-output-escaping="no">dummy</xsl:text>
                      </corecom:TimeZoneCode>
                    </xsl:when>
                    <xsl:otherwise>
                      <corecom:LineOne>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountStreetAddress"/>
                      </corecom:LineOne>
                      <corecom:LineTwo>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountAddressNumber"/>
                      </corecom:LineTwo>
                      <corecom:LineThree>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountInternalNum"/>
                      </corecom:LineThree>
                      <corecom:LineFour>
                        <!--xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountStreetAddress2"/-->
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountProvince"/>
                      </corecom:LineFour>
                      <corecom:LineFive>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBetweenStreet1"/>
                      </corecom:LineFive>
                      <corecom:LineSix>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountBetweenStreet2"/>
                      </corecom:LineSix>
                      <corecom:CityName>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCity"/>
                      </corecom:CityName>
                      <corecom:StateName>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountState"/>
                      </corecom:StateName>
                      <corecom:CountryCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/COUNTRY_CODES.dvm','Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCountry,'COMMON','CouldNotBeFound')"/>
                      </corecom:CountryCode>
                      <corecom:CitySubDivisionName>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountCounty"/>
                      </corecom:CitySubDivisionName>
                      <corecom:PostalCode>
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountPostalCode"/>
                      </corecom:PostalCode>
                      <corecom:TimeZoneCode>
                        <xsl:text disable-output-escaping="no"></xsl:text>
                      </corecom:TimeZoneCode>
                    </xsl:otherwise>
                  </xsl:choose>
                </corecom:ServiceAddress>
                <corecom:EffectiveTimePeriod>
                  <corecom:StartDateTime>
                    <xsl:value-of select="orderentryabo:EffectiveStartDate"/>
                  </corecom:StartDateTime>
                  <corecom:EndDateTime>
                    <xsl:value-of select="orderentryabo:EffectiveEndDate"/>
                  </corecom:EndDateTime>
                </corecom:EffectiveTimePeriod>
                <corecom:ItemReference>
                  <corecom:ItemIdentification>
                    <corecom:BusinessComponentID>
                      <xsl:value-of select="orcl:generate-guid()"/>
                    </corecom:BusinessComponentID>
                    <corecom:ApplicationObjectKey>
                      <corecom:ID>
                        <xsl:choose>
                          <xsl:when test="$tipoLinea='IRD' or $tipoLinea='SMC' or $lineasDif='Extension' or $tipoLinea='SIM'or $tipoLinea='Modem'
                                            or $lineasDif='Global Bandwidth' or $lineasDif='Bandwidth' or $lineasDif='Personalizable'">
                            <xsl:value-of select="orderentryabo:AssetNumber"/>
                          </xsl:when>
                          <xsl:when test="$lineasDif='PPE'">
                            <xsl:value-of select="orderentryabo:PPETrackingId"/>
                          </xsl:when>
                          <xsl:when test="$lineasDif='RB'">
                            <xsl:value-of select="orderentryabo:RemBookContentType"/>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:value-of select="orderentryabo:PartNumber"/>
                          </xsl:otherwise>
                        </xsl:choose>
                      </corecom:ID>
                    </corecom:ApplicationObjectKey>
                  </corecom:ItemIdentification>
                  <corecom:Name>
                    <xsl:choose>
                      <xsl:when test="$tipoLinea='IRD'">
                        <xsl:text disable-output-escaping="no">Equipo TV</xsl:text>
                      </xsl:when>
                      <xsl:when test="$tipoLinea='SMC' or $lineasDif='Extension'">
                        <xsl:text disable-output-escaping="no">Smartcard TV</xsl:text>
                      </xsl:when>
                      <xsl:when test="$lineasDif='PPE'">
                        <xsl:value-of select="orderentryabo:Product"/>
                      </xsl:when>
                      <xsl:when test="$lineasDif='RB'">
                        <!--xsl:text disable-output-escaping="no">Remote Booking</xsl:text-->
                        <xsl:value-of select="orderentryabo:Product"/>
                      </xsl:when>
                      <xsl:when test="$tipoLinea='Modem'">
                        <xsl:text disable-output-escaping="no">Modem</xsl:text>
                      </xsl:when>
                      <xsl:when test="$tipoLinea='SIM'">
                        <xsl:text disable-output-escaping="no">SIM</xsl:text>
                      </xsl:when>
                      <xsl:when test="$lineasDif='Global Bandwidth' or $lineasDif='Bandwidth'">
                        <xsl:text disable-output-escaping="no">Ancho de Banda</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="orderentryabo:Product"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </corecom:Name>
                  <corecom:ClassificationCode>
                    <xsl:attribute name="listID">
                      <xsl:text disable-output-escaping="no">PermittedTypeCode</xsl:text>
                    </xsl:attribute>
                    <xsl:value-of select="$permittedTC"/>
                  </corecom:ClassificationCode>
                  <corecom:ClassificationCode>
                    <xsl:attribute name="listID">
                      <xsl:text disable-output-escaping="no">BillingProductTypeCode</xsl:text>
                    </xsl:attribute>
                    <xsl:choose>
                      <xsl:when test="orderentryabo:Product  = 'Servicio Datos BTI' or orderentryabo:ProductTypeIntegration = 'WirelessData'">
                        <xsl:text disable-output-escaping="no">ITEM</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$billingProductTC"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </corecom:ClassificationCode>
                  <corecom:ClassificationCode>
                    <xsl:attribute name="listID">
                      <xsl:text disable-output-escaping="no">FulfillmentItemCode</xsl:text>
                    </xsl:attribute>
                    <xsl:choose>
                      <xsl:when test="orderentryabo:Product  = 'Servicio Datos BTI' or orderentryabo:ProductTypeIntegration = 'WirelessData'">
                        <xsl:text disable-output-escaping="no">SKY Wireless Data Service Class</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$fullfillmentIC"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </corecom:ClassificationCode>
                  <corecom:TypeCode>
                    <xsl:choose>
                      <xsl:when test="orderentryabo:Product  = 'Servicio Datos BTI' or orderentryabo:ProductTypeIntegration = 'WirelessData'">
                        <xsl:text disable-output-escaping="no">PRODUCT</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$vTypeCode"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </corecom:TypeCode>
                  <corecom:ServiceIndicator>
                    <xsl:text disable-output-escaping="no">false</xsl:text>
                  </corecom:ServiceIndicator>
                  <corecom:Description>
                    <xsl:value-of select="$vDescItemRef"/>
                  </corecom:Description>
                  <xsl:variable name="intID">
                    <xsl:choose>
                      <xsl:when test="$tipoLinea= 'Modem'">
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM='Bandwidth']/orderentryabo:IntegrationId"/>
                      </xsl:when>
                      <xsl:when test="$tipoLinea='IRD'">
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[(orderentryabo:ProductTypeCodeCRM = 'Paquete' or orderentryabo:ProductTypeCodeCRM = 'Paquete Principal') and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>
                      </xsl:when>
                      <xsl:when test="$tipoLinea='CelSIM'">
                        <!-- Nuevo when para BTCEL-->
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM='Service' and orderentryabo:OriginalProductType = 'Cell Service']/orderentryabo:IntegrationId"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:variable name="validintID">
                    <xsl:choose>
                      <xsl:when test="contains($intID, ' ')">
                        <xsl:value-of select="substring-before($intID, ' ')"/>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:value-of select="$intID"/>
                      </xsl:otherwise>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:variable name="poiId"
                                select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:IntegrationId=$validintID]/orderentryabo:ParentOrderItemId"/>
                  <xsl:variable name="ssParent"
                                select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Id=$poiId]/orderentryabo:Product"/>
                  <xsl:variable name="ssIdParent"
                                select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Id=$poiId]/orderentryabo:ParentOrderItemId"/>
                  <xsl:variable name="stParent"
                                select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Id=$ssIdParent]/orderentryabo:Product"/>
                  <xsl:variable name="vParentServiceInstIdCel"
                                select="orderentryabo:ParentServiceInstanceId"/>
                  <xsl:variable name="vIntegrationIdAux"
                                select="orderentryabo:IntegrationId"/>
                  <xsl:variable name="vSalePackage">
                    <xsl:choose>
                      <xsl:when test="$tipoLinea='CelSIM' or $lineasDif='CelSIM'">
                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Paquete Principal' and orderentryabo:ParentServiceInstanceId = $vIntegrationIdAux]/orderentryabo:Product"/>
                      </xsl:when>
                    </xsl:choose>
                  </xsl:variable>
                  <xsl:variable name="CveStreaming"
                                select="orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ CVE_STREAMING from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>
                  <xsl:choose>
                    <!-- BTCEL inicio -->
                    <xsl:when test="contains($fullfillmentIC,'Cel')">
                      <corecom:SpecificationGroup>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">BillingProductType</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="$vBillingPTC"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <xsl:if test="contains($fullfillmentIC,'Addon Cel Service Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ADDON_SH</xsl:text>
                              <!-- Comparte -->
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:text disable-output-escaping="no">0</xsl:text>
                                </xsl:when>
                                <xsl:when test="orderentryabo:ActionCode = 'New'">
                                  <xsl:text disable-output-escaping="no">1</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no"></xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ReplaceTo</xsl:text>
                              <!--Revisar-->
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN']) > 1">
                                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:ActionCode='Deleted' and orderentryabo:IntegrationId= $integrationId]/orderentryabo:AssetNumber"/>
                              </xsl:if>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SaleType</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no">Servicio de Celular</xsl:text>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SaleSubtype</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no">Servicio BT Celular</xsl:text>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SalePackage</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="$vSalePackage != ''">
                                  <xsl:value-of select="$vSalePackage"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">BT Cel</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SaleDetail</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="$vSalePackage != ''">
                                  <xsl:value-of select="$vSalePackage"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">BT Cel</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ContractName</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:AgreementNameLine"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">TermsConditionsWeb</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no"></xsl:text>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SaleChannel</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:SalesChannel"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SaleOrigin</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Source"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ActivationCode</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:ActivationCode"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ServiceUpdateScheme</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">OFFER_ADDON_SHARE</xsl:text>
                              <!-- Comparte -->
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:TetheringServices = 'Y' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem = 'PRE'">
                                  <xsl:text disable-output-escaping="no">1</xsl:text>
                                </xsl:when>
                                <xsl:when test="orderentryabo:TetheringServices = 'Y' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem = 'POS'">
                                  <xsl:text disable-output-escaping="no">1</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">0</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ActivationCode</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:ActivationCode"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:ActivationCode"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Modified'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:ActivationCode"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:ActivationCode"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:ActivationCode"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <!--Se agrega specification ServiceId-->
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <xsl:when test="orderentryabo:ActionCode = 'New' and xp20:upper-case(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'SOA_XREF_CODE','','SOA_SERVICIO','-')) = 'SI'">
                                <corecom:Value>
                                  <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01', orderentryabo:IntegrationId, 'COMMON', orcl:generate-guid(), 'ADD')"/>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:when test="orderentryabo:ActionCode != 'New'">
                                <corecom:Value>
                                  <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',orderentryabo:IntegrationId,'COMMON',false())"/>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no"></xsl:text>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SIMReference</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Modified'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:AssetNumber"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">AccessReference</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:ParentServiceInstanceId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <!--Remplazo de SIM -->
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Movil Access' and orderentryabo:ParentServiceInstanceId = $vIntegrationIdAux and orderentryabo:ActionCode = 'New']/orderentryabo:IntegrationId"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:ParentServiceInstanceId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <!--Remplazo de SIM -->
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Movil Access' and orderentryabo:ParentServiceInstanceId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Deleted']/orderentryabo:IntegrationId"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:ParentServiceInstanceId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <!--Remplazo de SIM -->
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Movil Access' and orderentryabo:ParentServiceInstanceId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Resume']/orderentryabo:IntegrationId"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Movil Access' and orderentryabo:ParentServiceInstanceId = $vIntegrationIdAux ]/orderentryabo:IntegrationId"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Technology</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId =$vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Modified'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:Technology"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel Access Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Technology</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId =$vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId =$vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId =$vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId =$vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:Technology"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Technology</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <!--Remplazo de SIM,  toma el Technology de la linea de SIM que sea accion New-->
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'New']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Deleted']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Resume']/orderentryabo:Technology"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]/orderentryabo:Technology"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel Access Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Provider</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:Supplier"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:Supplier"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:Supplier"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:Supplier"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ICCID</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Modified'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:AssetNumber"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ICCID</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'New']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Deleted']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Resume']/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]/orderentryabo:AssetNumber"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">IMSI</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:IMSI"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:IMSI"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Modified'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:IMSI"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:IMSI"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:IMSI"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">IMSI</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'New']/orderentryabo:IMSI"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Deleted']/orderentryabo:IMSI"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Resume']/orderentryabo:IMSI"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]/orderentryabo:IMSI"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">MSISDN</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'New']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Deleted']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Resume']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]/orderentryabo:MSISDN"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">MSISDN</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Modified'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:MSISDN"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:MSISDNPorted != ''">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">MSISDN_ported</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:choose>
                                  <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:MSISDNPorted"/>
                                  </xsl:when>
                                  <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:MSISDNPorted"/>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:MSISDNPorted"/>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">MSISDN_ported</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'New']/orderentryabo:MSISDNPorted"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Deleted']/orderentryabo:MSISDNPorted"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux and orderentryabo:ActionCode = 'Resume']/orderentryabo:MSISDNPorted"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vIntegrationIdAux]/orderentryabo:MSISDNPorted"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ServiceReference</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:OriginalProductType = 'Cell Service' and orderentryabo:ParentServiceInstanceId=$vIntegrationIdAux]/orderentryabo:IntegrationId"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <xsl:if test="orderentryabo:EventTypeExtern = 'Band28B'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">SuspensionReason</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">BARRING</xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel State Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">StartDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveStartDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel State Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">EndDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveEndDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C') or contains($fullfillmentIC,'Cel Access Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UnifiedServiceId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:IntegrationId"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$vBillingPTC = 'SERVICE'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ServiceType</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="contains($fullfillmentIC,'SKY Cel Service C')">
                                  <xsl:text disable-output-escaping="no">/service/celular</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="$permittedTC"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">OfferMinutes</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:OriginalProductType = 'Cell Service' and orderentryabo:IntegrationId = $vIntegrationIdAux]/orderentryabo:TimePack"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">OfferSMS</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:OriginalProductType = 'Cell Service' and orderentryabo:IntegrationId = $vIntegrationIdAux]/orderentryabo:SMSPack"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">OfferDatabag</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:OriginalProductType = 'Cell Service' and orderentryabo:IntegrationId = $vIntegrationIdAux]/orderentryabo:DataBag"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel State Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ADDON_SHARE</xsl:text>
                              <!-- Comparte -->
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:TetheringServices = 'Y'">
                                  <xsl:text disable-output-escaping="no">1</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">0</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel State Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Minutes</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:TimePack"/>
                              <!--
                                <xsl:choose>
                                 <xsl:when test="orderentryabo:ProductTypeCode = 'Broadband Service Addon'">
                                  <xsl:value-of select="orderentryabo:TimePack"/>
                                </xsl:when>                                
                               <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:OriginalProductType = 'Cell Service' and orderentryabo:ParentServiceInstanceId = $vParentServiceInstanceId]/orderentryabo:TimePack"/>
                                </xsl:otherwise>   
                                </xsl:choose>
                                 fixM6-->
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel State Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SMS</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:SMSPack"/>
                              <!--
                                <xsl:choose>
                                <xsl:when test="orderentryabo:ProductTypeCode = 'Broadband Service Addon'">
                                  <xsl:value-of select="orderentryabo:SMSPack"/>
                                </xsl:when>                                   
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:OriginalProductType = 'Cell Service' and orderentryabo:ParentServiceInstanceId = $vParentServiceInstanceId]/orderentryabo:SMSPack"/>
                                </xsl:otherwise> 
                                 </xsl:choose>
                                 fixM6-->
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel State Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DataBag</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:DataBag"/>
                              <!--
                                <xsl:choose>
                                <xsl:when test="orderentryabo:ProductTypeCode = 'Broadband Service Addon'">
                                  <xsl:value-of select="orderentryabo:DataBag"/>
                                </xsl:when>                                
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:OriginalProductType = 'Cell Service' and orderentryabo:ParentServiceInstanceId = $vParentServiceInstanceId]/orderentryabo:DataBag"/>
                                </xsl:otherwise>  
                                </xsl:choose>
                                 fixM6-->
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UOMDataBag</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:UOMDataBag"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ServiceUpdateScheme</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Offering_ID</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="0"/>
                              <!--PD-->
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">IDPos</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:SalesChannel"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:SalesChannel"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Modified'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:SalesChannel"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:SalesChannel"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:SalesChannel"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'SKY Cel Service C')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ExternalOffer</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:ExternalOffer"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:EventTypeExtern = 'Band28B'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">SuspensionReason</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">BARRING</xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel SIM Class') or contains($fullfillmentIC,'SKY Cel Service C')">
                          <xsl:if test="(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason!='')">
                            <xsl:variable name="varSuspension"
                                          select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_SUSPENSION_CODES.dvm","Siebel_01",/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason,"OSM_01","")'/>
                            <xsl:variable name="varCollection"
                                          select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/COLLECTION_ACTIONNAME.dvm","COMMON", xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason), "OSM_01", "")'/>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">SuspensionReason</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:choose>
                                  <xsl:when test="$varSuspension != ''">
                                    <xsl:value-of select="$varSuspension"/>
                                  </xsl:when>
                                  <xsl:when test="$varCollection != ''">
                                    <xsl:value-of select="$varCollection"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:Value>
                            </corecom:Specification>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">SuspensionType</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:choose>
                                  <xsl:when test="$varSuspension != ''">
                                    <xsl:value-of select="$varSuspension"/>
                                  </xsl:when>
                                  <xsl:when test="$varCollection != ''">
                                    <xsl:value-of select="$varCollection"/>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                        </xsl:if>
                        <xsl:if test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SUPPLEMENTARY.dvm','SIEBEL_PRODUCT',orderentryabo:Product, 'SOA_ADDON_CODE', '', 'SOA_01','ADDON_VM') = 'Si'">
                          <!--contains($fullfillmentIC,'Supplementary Cel')-->
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ADDON_VM</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:ActionCode = 'New'">
                                  <xsl:text disable-output-escaping="no">1</xsl:text>
                                </xsl:when>
                                <xsl:when test="orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:text disable-output-escaping="no">2</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">0</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SUPPLEMENTARY.dvm','SIEBEL_PRODUCT',orderentryabo:Product, 'SOA_ADDON_CODE', '', 'SOA_01','MSISDN_VOICE_MAIL') = 'Si'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">MSISDN_VOICE_MAIL</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'New'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN'  and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'New']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN'  and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Deleted']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN' and orderentryabo:IntegrationId = $vParentServiceInstIdCel]) > 1 and orderentryabo:ActionCode = 'Resume'">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN'  and orderentryabo:IntegrationId = $vParentServiceInstIdCel and orderentryabo:ActionCode = 'Resume']/orderentryabo:MSISDN"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM-MSISDN'  and orderentryabo:IntegrationId = $vParentServiceInstIdCel]/orderentryabo:MSISDN"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:variable name="vSupplementaryBuzon">
                          <xsl:text disable-output-escaping="no">BTCel servicio buzÃ³n de voz A</xsl:text>
                        </xsl:variable>
                        <xsl:if test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SUPPLEMENTARY.dvm','SIEBEL_PRODUCT',orderentryabo:Product, 'SOA_ADDON_CODE', '', 'SOA_01','ADDON_CFU') = 'Si'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ADDON_CFU</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:ActionCode = 'New'">
                                  <xsl:text disable-output-escaping="no">1</xsl:text>
                                </xsl:when>
                                <xsl:when test="orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:text disable-output-escaping="no">2</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">0</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SUPPLEMENTARY.dvm','SIEBEL_PRODUCT',orderentryabo:Product, 'SOA_ADDON_CODE', '', 'SOA_01','MSISDN_CALL_FORWARDING_UNCONDITIONAL') = 'Si'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">MSISDN_CALL_FORWARDING_UNCONDITIONAL</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:CallForwardingNumber"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SUPPLEMENTARY.dvm','SIEBEL_PRODUCT',orderentryabo:Product, 'SOA_ADDON_CODE', '', 'SOA_01','ADDON_CFB') = 'Si'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ADDON_CFB</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:ActionCode = 'New'">
                                  <xsl:text disable-output-escaping="no">1</xsl:text>
                                </xsl:when>
                                <xsl:when test="orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:text disable-output-escaping="no">2</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">0</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SUPPLEMENTARY.dvm','SIEBEL_PRODUCT',orderentryabo:Product, 'SOA_ADDON_CODE', '', 'SOA_01','MSISDN_CALL_FORWARDING_BUSY') = 'Si'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">MSISDN_CALL_FORWARDING_BUSY</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:CallForwardingNumber"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SUPPLEMENTARY.dvm','SIEBEL_PRODUCT',orderentryabo:Product, 'SOA_ADDON_CODE', '', 'SOA_01','ADDON_TCW') = 'Si'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ADDON_TCW</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:ActionCode = 'New'">
                                  <xsl:text disable-output-escaping="no">1</xsl:text>
                                </xsl:when>
                                <xsl:when test="orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:text disable-output-escaping="no">2</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">0</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SUPPLEMENTARY.dvm','SIEBEL_PRODUCT',orderentryabo:Product, 'SOA_ADDON_CODE', '', 'SOA_01','ADDON_SPN') = 'Si'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ADDON_SPN</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:ActionCode = 'New'">
                                  <xsl:text disable-output-escaping="no">1</xsl:text>
                                </xsl:when>
                                <xsl:when test="orderentryabo:ActionCode = 'Deleted'">
                                  <xsl:text disable-output-escaping="no">2</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">0</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="contains($fullfillmentIC,'Cel State Class')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Region</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RegionCode"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                      </corecom:SpecificationGroup>
                    </xsl:when>
                    <!-- BTCEL Fin -->
                    <!-- Striming Disney+, Vix+, Star+, Combo+ -->
                    <xsl:when test="contains($fullfillmentIC,'External OTT Service Class')">
                      <corecom:SpecificationGroup>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">UnifiedServiceId</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:IntegrationId"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">SERVICE</xsl:text>
                          </corecom:Name>                   
                          <corecom:Value>
                                <xsl:text disable-output-escaping="no">OTT</xsl:text>
                           </corecom:Value>                           
                        </corecom:Specification>
                         <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">BILLING_TYPE</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem"/>
                            </corecom:Value>
                          </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ServiceUpdateScheme</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">Technology</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">STREAMING</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">StreamingId</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="$CveStreaming"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ExternalOffer</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:ExternalOffer"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">MessageID</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceOrderId"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">Email</xsl:text>
                          </corecom:Name>                         
                              <corecom:Value>
                                <xsl:choose>
                                  <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:LoginEmailAddress !=  ''">
                                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:LoginEmailAddress"/>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryBillToMailAddress"/>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </corecom:Value>                          
                        </corecom:Specification>
                        <xsl:choose>
                          <xsl:when test="orderentryabo:ActionCode = 'Deleted'  ">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">Motivo</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">Baja</xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:when>
                          <xsl:otherwise></xsl:otherwise>
                        </xsl:choose>
                         <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">OTT</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <xsl:when test="$varServicio = 'VIX+'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">VIX</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                               <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">DISNEY</xsl:text>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>  
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">PRODUCT</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="$CveStreaming"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SUSPENSION_DATE</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select='xp20:format-dateTime(orderentryabo:EffectiveEndDate,"[Y0001]-[M01]-[D01]")'/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Source</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no">siebel</xsl:text>
                            </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">AccountName</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">LAST_UPDATED</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="xp20:current-dateTime()"/>
                            <!--<xsl:value-of select='xp20:format-dateTime(xp20:current-dateTime(),"[M01]/[D01]/[Y0001] [H01]:[m01]:[s01]")'/>-->
                          </corecom:Value>
                        </corecom:Specification>
                        <xsl:if test="orderentryabo:ActionCode = 'Suspend' or orderentryabo:ActionCode = 'Resume'">
                          <xsl:variable name="suspTypeColl"
                                        select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/COLLECTION_ACTIONNAME.dvm","COMMON", xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason), "OSM_01", "")'/>
                          <xsl:choose>
                            <xsl:when test="$suspTypeColl != ''">
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">SuspensionType</xsl:text>
                                </corecom:Name>
                                <corecom:Value>
                                  <xsl:value-of select='$suspTypeColl'/>
                                </corecom:Value>
                              </corecom:Specification>
                            </xsl:when>
                            <xsl:otherwise>
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">SuspensionType</xsl:text>
                                </corecom:Name>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">SUSPENSION</xsl:text>
                                </corecom:Value>
                              </corecom:Specification>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:if>
                      </corecom:SpecificationGroup>
                    </xsl:when>
                    <!-- Fin Striming Disney+, Vix+, Star+, Combo+ -->
                    <!-- inicio Striming: BlueToGo Video Everywhere Pre  - BTG Pre-->
                    <xsl:when test="contains($fullfillmentIC,'Streaming Service Class') and $varServicio = 'BTG PRE'">
                      <corecom:SpecificationGroup>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">BillingProductType</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="$vBillingPTC"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ServiceType</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">N/A</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <!--Se agrega specification ServiceId-->
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                          </corecom:Name>
                          <xsl:choose>
                            <xsl:when test="orderentryabo:ActionCode = 'New' and xp20:upper-case(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'SOA_XREF_CODE','','SOA_SERVICIO','-')) = 'SI'">
                              <corecom:Value>
                                <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',orderentryabo:IntegrationId,'COMMON',false())"/>
                              </corecom:Value>
                            </xsl:when>
                            <xsl:when test="orderentryabo:ActionCode != 'New'">
                              <corecom:Value>
                                <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',orderentryabo:IntegrationId,'COMMON',false())"/>
                              </corecom:Value>
                            </xsl:when>
                            <xsl:otherwise>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">NotFault</xsl:text>
                              </corecom:Value>
                            </xsl:otherwise>
                          </xsl:choose>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">UnifiedServiceId</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:IntegrationId"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">serviceType</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">SERVICE</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">serviceUpdateScheme</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">Technology</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">STREAMING</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">transaction_id</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceOrderId"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ExternalOffer</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">OTT</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">account_number</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">last_updated</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select='xp20:format-dateTime(xp20:current-dateTime(),"[Y0001]-[M01]-[D01]T[H01]:[m01]:[s01]")'/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">offers</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="substring-before(orderentryabo:ExternalOffer,'-')"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">sku</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="substring-after(orderentryabo:ExternalOffer,'-')"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">service</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">BTG_SPORTS</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">PartNumber</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:PartNumber"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">email</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OTTUser"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">compound_hashed_password</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OTTPassword"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">country</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <!--  <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">last_change_type</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                               <xsl:text disable-output-escaping="no"></xsl:text> lo resolvio M6
                            </corecom:Value>
                          </corecom:Specification>-->
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">StartDate</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:EffectiveStartDate"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">EndDate</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:EffectiveEndDate"/>
                          </corecom:Value>
                        </corecom:Specification>
                      </corecom:SpecificationGroup>
                    </xsl:when>
                    <!-- fin Striming BlueToGo Video Everywhere Pre  -->
                    <!-- Striming DTC - BTG Sport -->
                    <xsl:when test="contains($fullfillmentIC,'Streaming Service Class')">
                      <corecom:SpecificationGroup>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">BillingProductType</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="$vBillingPTC"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ServiceType</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">/service/ott</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <!--Se agrega specification ServiceId-->
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                          </corecom:Name>
                          <xsl:choose>
                            <xsl:when test="orderentryabo:ActionCode = 'New' and xp20:upper-case(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'SOA_XREF_CODE','','SOA_SERVICIO','-')) = 'SI'">
                              <corecom:Value>
                                <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',orderentryabo:IntegrationId,'COMMON',false())"/>
                              </corecom:Value>
                            </xsl:when>
                            <xsl:when test="orderentryabo:ActionCode != 'New'">
                              <corecom:Value>
                                <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',orderentryabo:IntegrationId,'COMMON',false())"/>
                              </corecom:Value>
                            </xsl:when>
                            <xsl:otherwise>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">NotFault</xsl:text>
                              </corecom:Value>
                            </xsl:otherwise>
                          </xsl:choose>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">UnifiedServiceId</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:IntegrationId"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">serviceType</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">SERVICE</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">serviceUpdateScheme</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">Technology</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">STREAMING</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">transaction_id</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceOrderId"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ExternalOffer</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">OTT</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">account_number</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Account"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">last_updated</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="xp20:current-dateTime()"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">offers</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:ExternalOffer"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">service</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:text disable-output-escaping="no">BTG_SPORTS</xsl:text>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">PartNumber</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:PartNumber"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">email</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OTTUser"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">compound_hashed_password</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OTTPassword"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">country</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CountryCode"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <!--  <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">last_change_type</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                               <xsl:text disable-output-escaping="no"></xsl:text> DTC pendiente 
                            </corecom:Value>
                          </corecom:Specification>-->
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">StartDate</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:EffectiveStartDate"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">EndDate</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="orderentryabo:EffectiveEndDate"/>
                          </corecom:Value>
                        </corecom:Specification>
                      </corecom:SpecificationGroup>
                    </xsl:when>
                    <!-- Fin Striming DTC  -->
                    <!-- TV y BTI  -->
                    <xsl:otherwise>
                      <corecom:SpecificationGroup>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">Extensible Attributes</xsl:text>
                        </corecom:Name>
                        <xsl:variable name="varServicioDatosBTI">
                          <xsl:choose>
                            <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Product = 'Servicio Datos BTI']/orderentryabo:Product = 'Servicio Datos BTI'">
                              <xsl:text>Y</xsl:text>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:text>N</xsl:text>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:variable>
                        <xsl:if test="$lineasDif='Broadband Service Bundle' and $varServicioDatosBTI = 'N' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Product = 'Servicio Blue Telecomm Internet InalÃ¡mbrico']/orderentryabo:Supplier = 'ATT'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DataBagSize</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Product = 'Servicio Blue Telecomm Internet InalÃ¡mbrico']/orderentryabo:DataBag"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UOMDataBag</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Product = 'Servicio Blue Telecomm Internet InalÃ¡mbrico']/orderentryabo:UOMDataBag"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">LocalityCode</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountLocalityCode"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <xsl:if test="$lineasDif!='RB' and $tipoLinea!='SIM' and $lineasDif!='TV Access Bundle' and $lineasDif!='TV Bundle' and $lineasDif!='TV Access'">
                          <xsl:if test="$vBillingPTC!='CouldNotBeFound'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">BillingProductType</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <!--<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$vBillingPTC,'BRM_OSM_TYPE_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>-->
                                <xsl:value-of select="$vBillingPTC"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                        </xsl:if>
                        <xsl:if test="$tipoLinea = 'SMC'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">AccountWWW</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:InternetServicesFlag = 'Y'">
                                  <xsl:text disable-output-escaping="no">Y</xsl:text>
                                </xsl:when>
                                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:InternetServicesFlag = 'N'">
                                  <xsl:text disable-output-escaping="no">N</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no">N</xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$tipoLinea='IRD' or $tipoLinea='Modem' or $tipoLinea = 'SMC'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DeviceId</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <xsl:when test="$tipoLinea='IRD' or $tipoLinea = 'SMC' or ($tipoLinea = 'SMC' and $lineasDif='ExtensionHMC') or ($tipoLinea = 'SMC' and $lineasDif='Extension')">
                                <xsl:choose>
                                  <xsl:when test="string-length(orderentryabo:AssetReceiverId) = 12.0">
                                    <corecom:Value>
                                      <xsl:value-of select="orderentryabo:AssetReceiverId"/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:when test="string-length(orderentryabo:AssetReceiverId) = 11.0">
                                    <corecom:Value>
                                      <xsl:value-of select='concat("0",orderentryabo:AssetReceiverId)'/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:when test="string-length(orderentryabo:AssetReceiverId) = 10.0">
                                    <corecom:Value>
                                      <xsl:value-of select='concat("00",orderentryabo:AssetReceiverId)'/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no">000000000000</xsl:text>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                              <xsl:when test="$tipoLinea='Modem'">
                                <xsl:choose>
                                  <xsl:when test="$modemTipoCuenta='BroadbandEquipment'">
                                    <corecom:Value>
                                      <xsl:value-of select='orderentryabo:IntegrationId'/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:when test="$modemTipoCuenta='InternetEquipment'">
                                    <corecom:Value>
                                      <xsl:value-of select="orderentryabo:AssetInternet"/>
                                    </corecom:Value>
                                  </xsl:when>
                                </xsl:choose>
                              </xsl:when>
                            </xsl:choose>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$tipoLinea!= 'Modem' and $tipoLinea!='SIM' and $lineasDif!='Global Bandwidth' and $lineasDif!='Bandwidth' and $lineasDif!='Personalizable' and orderentryabo:ProductSubTypeIntegration!='Telco'
							and $lineasDif!='Broadband Service Bundle' and $lineasDif!='Access Bundle' and $lineasDif!='Access' and $lineasDif!='TV Access Bundle' and $lineasDif!='TV Bundle' and $lineasDif!='TV Access'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SmartcardId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="$tipoLinea='SMC' or $tipoLinea='Extension'">
                                  <xsl:value-of select="orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:when test="$tipoLinea='IRD' or $lineasDif='PPE' or $tipoLinea='RB'">
                                  <!--<xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ (dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01',orderentryabo:AssetTypeCode, 'COMMON', '') = 'SMC') and (orderentryabo:ParentOrderItemId = $parentId)]/orderentryabo:AssetNumber"/>-->
                                  <!--xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ (dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01',orderentryabo:AssetTypeCode, 'COMMON', '') = 'SMC') and (orderentryabo:IntegrationId = $vParentServiceInstanceId)]/orderentryabo:AssetNumber"/>-->
                                  <!--<xsl:variable name="actionItem"
									select="orderentryabo:ActionCode"/>  -->
                                  <xsl:choose>
                                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems[orderentryabo:ParentEquipmentId=$integrationId]">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ (dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01',orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') = 'SMC') and (orderentryabo:IntegrationId = $vParentServiceInstanceId) and orderentryabo:ActionCode = $actionItem]/orderentryabo:AssetNumber"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ (dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01',orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') = 'SMC') and (orderentryabo:IntegrationId = $vParentServiceInstanceId)]/orderentryabo:AssetNumber"/>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:choose>
                                    <!-- Aug17-AJNR: Se agregan campos specification para Blue Telecom -->
                                    <xsl:when test="$productType = 'BroadbandService' or $productType = 'VoIPService' or $productType = 'WirelessBroadbandService'">
                                      <xsl:value-of select="orderentryabo:AssetNumber"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <!--<xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ (dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '') = 'SMC') and (orderentryabo:ParentOrderItemId = $parentId)]/orderentryabo:AssetNumber"/>-->
                                      <xsl:choose>
                                        <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems[orderentryabo:ParentEquipmentId=$vParentServiceInstanceId]">
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ (dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') = 'SMC') and (orderentryabo:IntegrationId = $vParentServiceInstanceId) and orderentryabo:ActionCode='New']/orderentryabo:AssetNumber"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ (dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') = 'SMC') and (orderentryabo:IntegrationId = $vParentServiceInstanceId)]/orderentryabo:AssetNumber"/>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:choose>
                          <xsl:when test="$tipoLinea='SMC' or $tipoLinea='Extension'">
                            <!--<xsl:variable name="parentSerialNumber"
							select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '') ='IRD' and orderentryabo:ParentOrderItemId=$parentId]/orderentryabo:AssetNumber"/>-->
                            <!--<xsl:variable name="actionItem"
									select="orderentryabo:ActionCode"/>-->
                            <xsl:variable name="parentSerialNumber">
                              <xsl:choose>
                                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems[orderentryabo:ParentEquipmentId=$integrationId]">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') ='IRD' and orderentryabo:ParentOrderItemId=$parentId and orderentryabo:ActionCode = $actionItem ]/orderentryabo:AssetNumber"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') ='IRD' and orderentryabo:ParentOrderItemId=$parentId]/orderentryabo:AssetNumber"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </xsl:variable>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">PartNumber</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select='$parentSerialNumber'/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:when>
                          <xsl:when test="$tipoLinea='IRD' or $productType = 'BroadbandService' or $productType = 'VoIPService'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">PartNumber</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="orderentryabo:AssetNumber"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:when>
                          <xsl:when test="$tipoLinea='Modem'">
                            <xsl:choose>
                              <xsl:when test="$modemTipoCuenta='BroadbandEquipment'">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">PartNumber</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:value-of select="orderentryabo:AssetNumber"/>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:when>
                              <xsl:when test="$modemTipoCuenta='InternetEquipment'">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">PartNumber</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:choose>
                                      <xsl:when test="$numPaqBTG > 1">
                                        <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'InternetService' and orderentryabo:ActionCode='New']">
                                          <xsl:choose>
                                            <xsl:when test="contains(orderentryabo:Product,'1') or contains(orderentryabo:Product,'2')">
                                              <xsl:text disable-output-escaping="no">450005010297</xsl:text>
                                            </xsl:when>
                                            <xsl:otherwise>
                                              <xsl:text disable-output-escaping="no">450005010294</xsl:text>
                                            </xsl:otherwise>
                                          </xsl:choose>
                                        </xsl:for-each>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'InternetService']">
                                          <xsl:if test="contains(orderentryabo:Product,'BlueToGo')">
                                            <xsl:choose>
                                              <xsl:when test="contains(orderentryabo:Product,'1') or contains(orderentryabo:Product,'2')">
                                                <xsl:text disable-output-escaping="no">450005010297</xsl:text>
                                              </xsl:when>
                                              <xsl:otherwise>
                                                <xsl:text disable-output-escaping="no">450005010294</xsl:text>
                                              </xsl:otherwise>
                                            </xsl:choose>
                                          </xsl:if>
                                        </xsl:for-each>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:when>
                            </xsl:choose>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:if test="$tipoLinea='IRD'or ($tipoLinea='Modem' and $modemTipoCuenta='InternetEquipment')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DeviceModel</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="$tipoLinea='IRD'">
                                  <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_IRDModel.dvm','Siebel_01', substring(orderentryabo:AssetNumber,1,6), 'SAP_01','CouldNotBeFound')"/>
                                </xsl:when>
                                <xsl:when test="$tipoLinea='Modem'">
                                  <xsl:choose>
                                    <xsl:when test="$numPaqBTG > 1">
                                      <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'InternetService' and orderentryabo:ActionCode='New']">
                                        <xsl:choose>
                                          <xsl:when test="contains(orderentryabo:Product,'1') or contains(orderentryabo:Product,'2')">
                                            <xsl:text disable-output-escaping="no">Cablemodem SBG901</xsl:text>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:text disable-output-escaping="no">CABLEMODEM WI-FI DOCSIS 3.0</xsl:text>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'InternetService']">
                                        <xsl:choose>
                                          <xsl:when test="contains(orderentryabo:Product,'1') or contains(orderentryabo:Product,'2')">
                                            <xsl:text disable-output-escaping="no">Cablemodem SBG901</xsl:text>
                                          </xsl:when>
                                          <xsl:otherwise>
                                            <xsl:text disable-output-escaping="no">CABLEMODEM WI-FI DOCSIS 3.0</xsl:text>
                                          </xsl:otherwise>
                                        </xsl:choose>
                                      </xsl:for-each>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:when>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$hierarchy != '' and $tipoLinea='IRD'">
                          <xsl:choose>
                            <!-- Se modifica validacion para cuentas MultiPaquete RAH 05/02/2019!-->
                            <xsl:when test="xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:MultiPaquete) = 'Y'">
                              <!--<xsl:variable name="parentItemIdR"
							  select="orderentryabo:ParentOrderItemId"/>-->
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">HierarchyPosition</xsl:text>
                                </corecom:Name>
                                <xsl:variable name="accionEquipo"
                                              select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','Siebel_01',orderentryabo:ActionCode,'OSM_01','ACTIONNOTSUPPORTED')"/>
                                <xsl:choose>
                                  <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems) >= 1">
                                    <xsl:choose>
                                      <xsl:when test="$accionEquipo='ADD' or $accionEquipo='DELETE'">
                                        <corecom:Value>
                                          <!--<xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems[orderentryabo:ParentEquipmentId = substring($parentId,1,string-length($parentId)-1)]/orderentryabo:PositionReplace"/>-->
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems[orderentryabo:ParentEquipmentId = $integrationId]/orderentryabo:PositionReplace"/>
                                        </corecom:Value>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <corecom:Value>
                                          <xsl:value-of select="position()-count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems)"/>
                                        </corecom:Value>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Value>
                                      <xsl:value-of select="position()"/>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </corecom:Specification>
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">HierarchyType</xsl:text>
                                </corecom:Name>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">Master</xsl:text>
                                </corecom:Value>
                              </corecom:Specification>
                            </xsl:when>
                            <xsl:otherwise>
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">HierarchyPosition</xsl:text>
                                </corecom:Name>
                                <xsl:choose>
                                  <xsl:when test="contains(xp20:upper-case($hierarchy),'MASTER')">
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no">1</xsl:text>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Value>
                                      <xsl:value-of select="number(substring($hierarchy,6.0)) + 1.0"/>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </corecom:Specification>
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">HierarchyType</xsl:text>
                                </corecom:Name>
                                <xsl:choose>
                                  <xsl:when test="contains(xp20:upper-case($hierarchy),'MASTER')">
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no">Master</xsl:text>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no">Slave</xsl:text>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </corecom:Specification>
                            </xsl:otherwise>
                          </xsl:choose>
                          <xsl:choose>
                            <!-- Se agrega validacion con base a la etiqueta MultiPaquete y al nivel de jerarquia del equipo RAH 05/02/2019 !-->
                            <xsl:when test="(contains(xp20:upper-case($hierarchy),'MASTER') and string-length(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:MultiPaquete) = 0) or xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:MultiPaquete) = 'Y'">
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">HierarchyFlag</xsl:text>
                                </corecom:Name>
                                <xsl:choose>
                                  <xsl:when test="orderentryabo:AssetSupportedTechnology='MS'">
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no">true</xsl:text>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no">false</xsl:text>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </corecom:Specification>
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">SlavesCount</xsl:text>
                                </corecom:Name>
                                <xsl:choose>
                                  <!-- Se modifica validacion para cuentas MultiPaquete RAH 05/02/2019!-->
                                  <xsl:when test="xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:MultiPaquete) = 'Y'">
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no">0</xsl:text>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Value>
                                      <xsl:choose>
                                        <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType = 'Reemplazo de equipo completo'">
                                          <xsl:value-of select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[contains(orderentryabo:Hierarchy,'Slave') and dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01',orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') = 'IRD' and orderentryabo:ActionCode != 'Deleted'])"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:value-of select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[contains(orderentryabo:Hierarchy,'Slave') and dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01',orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') = 'IRD'])"/>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </corecom:Specification>
                            </xsl:when>
                            <!-- Se modifica validacion para cuentas MultiPaquete RAH 05/02/2019!-->
                            <xsl:when test="contains(xp20:upper-case($hierarchy),'SLAVE') and string-length(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:MultiPaquete) = 0">
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">MasterSMCId</xsl:text>
                                </corecom:Name>
                                <corecom:Value>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode='SMC' and orderentryabo:Hierarchy='Master' and not(contains(orderentryabo:ActionCode, 'Deleted'))]/orderentryabo:AssetNumber"/>
                                </corecom:Value>
                              </corecom:Specification>
                            </xsl:when>
                          </xsl:choose>
                        </xsl:if>
                        <xsl:if test="$tipoLinea!='SIM' and $lineasDif!='RB' and $lineasDif!='Global Bandwidth' and $lineasDif!='Bandwidth' and $lineasDif!='Personalizable' 
							and $lineasDif!='Broadband Service Bundle' and $lineasDif!='Access Bundle' and $lineasDif!='Access' and $lineasDif!='TV Access Bundle' and $lineasDif!='TV Bundle' and $lineasDif!='TV Access'">
                          <xsl:choose>
                            <xsl:when test="orderentryabo:ProductTypeCode='Producto' and ($productType = 'BroadbandService' or $productType = 'VoIPService' or $productType = 'WirelessBroadbandService')">
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">ServiceType</xsl:text>
                                </corecom:Name>
                                <xsl:choose>
                                  <xsl:when test="$productType = 'WirelessBroadbandService' and orderentryabo:ExternalOffer = 'MIFI'">
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no">/service/internet/movil</xsl:text>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Value>
                                      <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON', $productType ,'BRM_CLASS_CODE','CouldNotBeFound','SOA_SERVICIO','-')"/>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </corecom:Specification>
                            </xsl:when>
                            <xsl:when test="orderentryabo:ProductTypeCode='Producto' and $productType='InternetService'">
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">ServiceType</xsl:text>
                                </corecom:Name>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">/service/ip/cable</xsl:text>
                                </corecom:Value>
                              </corecom:Specification>
                            </xsl:when>
                            <xsl:when test="$tipoLinea='Modem'">
                              <xsl:if test="$modemTipoCuenta='InternetEquipment'">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">ServiceType</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:value-of select="$permittedTC"/>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:if test="orderentryabo:ProductTypeCode!='Producto'">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">ServiceType</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:value-of select="$permittedTC"/>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:if>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:if>
                        <xsl:if test="$tipoLinea!='SIM' and $lineasDif!='PPE' and $lineasDif!='RB' and $lineasDif!='Global Bandwidth' and $lineasDif!='Bandwidth' and $lineasDif!='Personalizable'
							and $lineasDif!='Broadband Service Bundle' and $lineasDif!='Access Bundle' and $lineasDif!='Access' and $lineasDif!='TV Bundle' and $lineasDif!='TV Access Bundle' 
							and $lineasDif!='TV Access'">
                          <corecom:Specification>
                            <xsl:choose>
                              <xsl:when test="$tipoLinea='Modem'">
                                <xsl:if test="$modemTipoCuenta='InternetEquipment'">
                                  <xsl:choose>
                                    <xsl:when test="$serviceIdEQ = ''">
                                      <corecom:Name>
                                        <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                      </corecom:Name>
                                      <corecom:Value>
                                        <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',$integrationId,'COMMON',orcl:generate-guid(),'ADD')"/>
                                      </corecom:Value>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <corecom:Name>
                                        <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                      </corecom:Name>
                                      <corecom:Value>
                                        <xsl:value-of select="$serviceIdEQ"/>
                                      </corecom:Value>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:if>
                              </xsl:when>
                              <xsl:when test="$tipoLinea='IRD'">
                                <xsl:choose>
                                  <xsl:when test="$serviceIdEQ = '' or ($eqMigFlag='Y' and contains(orderentryabo:ActionCode, 'New'))">
                                    <corecom:Name>
                                      <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                    </corecom:Name>
                                    <corecom:Value>
                                      <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',$integrationId,'COMMON',orcl:generate-guid(),'ADD')"/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Name>
                                      <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                    </corecom:Name>
                                    <corecom:Value>
                                      <xsl:value-of select="$serviceIdEQ"/>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                              <xsl:when test="$tipoLinea='SMC' or $tipoLinea='Extension'">
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                </corecom:Name>
                                <corecom:Value>
                                  <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01',$integrationId,'COMMON',false())"/>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <!--<xsl:variable name="productPaymentScheme"
									  select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_CONFIG_CROSSREFERENCE.dvm','SOA_01', xp20:upper-case(oraext:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ SUBTIPO from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)),'SOA_02','CouldNotBeFound')"/>-->
                                <!--<xsl:text>Esquema: </xsl:text>
						<xsl:value-of select="$productPaymentScheme"/>
						<xsl:text> | Producto: </xsl:text>
						<xsl:value-of select="orderentryabo:Product"/>-->
                                <xsl:choose>
                                  <!-- Aug17-AJNR: Se agrega nuevo caso para los productos de Blue Telecom -->
                                  <xsl:when test="($productType = 'BroadbandService' or $productType = 'VoIPService' or $productType = 'WirelessBroadbandService' or $productType = 'CellphoneService' or $productType = 'StreamingService')">
                                    <!--<xsl:variable name="serviceIdServ"
											  select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01', orderentryabo:IntegrationId,'COMMON',false())"/>-->
                                    <xsl:choose>
                                      <xsl:when test="$serviceIdEQ = ''">
                                        <corecom:Name>
                                          <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                        </corecom:Name>
                                        <corecom:Value>
                                          <xsl:value-of select="xref:populateXRefRow('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref','Siebel_01', orderentryabo:IntegrationId, 'COMMON', orcl:generate-guid(), 'ADD')"/>
                                        </corecom:Value>
                                      </xsl:when>
                                      <xsl:otherwise>
                                        <corecom:Name>
                                          <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                        </corecom:Name>
                                        <corecom:Value>
                                          <xsl:value-of select="$serviceIdEQ"/>
                                        </corecom:Value>
                                      </xsl:otherwise>
                                    </xsl:choose>
                                  </xsl:when>
                                  <xsl:when test="orderentryabo:ActionCode = 'New' and xp20:upper-case(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTTYPECODE.dvm','COMMON',$productType,'SOA_XREF_CODE','','SOA_SERVICIO','-')) = 'SI'">
                                    <corecom:Name>
                                      <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                    </corecom:Name>
                                    <corecom:Value>
                                      <xsl:value-of select="xref:populateXRefRow(concat('oramds:/apps/AIAMetaData/xref/',$productPaymentScheme),'Siebel_01',orderentryabo:IntegrationId,'COMMON',orcl:generate-guid(),'ADD')"/>
                                      <xsl:if test="not(contains($productPaymentScheme,'PREPAY'))">
                                        <xsl:variable name="productExpDate"
                                                      select="concat(orderentryabo:IntegrationId,'_',substring-before(orderentryabo:EffectiveEndDate,'T'))"/>
                                        <xsl:variable name="xrefSiebel_02"
                                                      select="xref:populateXRefRow(concat('oramds:/apps/AIAMetaData/xref/',$productPaymentScheme),'Siebel_01',orderentryabo:IntegrationId,'Siebel_02',$productExpDate,'LINK')"/>
                                      </xsl:if>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:when test="orderentryabo:ActionCode != 'New'">
                                    <corecom:Name>
                                      <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                    </corecom:Name>
                                    <corecom:Value>
                                      <xsl:value-of select="xref:lookupXRef(concat('oramds:/apps/AIAMetaData/xref/',$productPaymentScheme),'Siebel_01',orderentryabo:IntegrationId,'COMMON',false())"/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Name>
                                      <xsl:text disable-output-escaping="no">ServiceId</xsl:text>
                                    </corecom:Name>
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no"></xsl:text>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$lineasDif='Global Bandwidth' or $lineasDif='Bandwidth'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UploadSpeed</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:UploadSpeed != ''">
                                  <xsl:value-of select="orderentryabo:UploadSpeed"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode='Bandwidth']/orderentryabo:UploadSpeed"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DownloadSpeed</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:DownloadSpeed != ''">
                                  <xsl:value-of select="orderentryabo:DownloadSpeed"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode='Bandwidth']/orderentryabo:DownloadSpeed"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DownloadUnit</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:UOMDownloadSpeed != ''">
                                  <xsl:value-of select="orderentryabo:UOMDownloadSpeed"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode='Bandwidth']/orderentryabo:UOMDownloadSpeed"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UploadUnit</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:UOMUploadSpeed != ''">
                                  <xsl:value-of select="orderentryabo:UOMUploadSpeed"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode='Bandwidth']/orderentryabo:UOMUploadSpeed"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$lineasDif='Broadband Service Addon'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DataBag</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:DataBag"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UOMDataBag</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:UOMDataBag"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$lineasDif='Bandwidth'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ServiceReference</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]">
							<xsl:value-of select="orderentryabo:IntegrationId"/>
						</xsl:for-each>-->
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$lineasDif='Global Bandwidth' or ($tipoLinea='Modem' and $modemTipoCuenta='BroadbandEquipment')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">AccessReference</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Access' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]">
							<xsl:value-of select="orderentryabo:IntegrationId"/>
						</xsl:for-each>-->
                              <!--<xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Access' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>-->
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']) > 1">
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Access' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = $actionItem]/orderentryabo:IntegrationId"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCode = 'Access' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$productType = 'WirelessBroadbandService' or $lineasDif='Access' or orderentryabo:ProductTypeCode='Producto'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UnifiedServiceId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:IntegrationId"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$productType = 'WirelessBroadbandService' or $lineasDif='Access'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Technology</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and (orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId or orderentryabo:ParentServiceInstanceId=$integrationId)]">                                
								<xsl:value-of select="orderentryabo:Technology"/>                            
						</xsl:for-each>-->
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']) > 1">
                                  <xsl:choose>
                                    <xsl:when test="$productType = 'WirelessBroadbandService' and orderentryabo:ActionCode = 'Resume'">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = 'Resume']/orderentryabo:Technology"/>
                                    </xsl:when>
                                    <xsl:when test="$productType = 'WirelessBroadbandService'">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = 'New']/orderentryabo:Technology"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = $actionItem]/orderentryabo:Technology"/>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:Technology"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ExternalOffer</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:ExternalOffer"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:choose>
                          <xsl:when test="($tipoLinea='Modem' or $tipoLinea='SIM') and orderentryabo:ActionCode = 'Resume'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">ExternalOffer</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = 'Resume']/orderentryabo:ExternalOffer"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:when>
                          <xsl:when test="($tipoLinea='Modem' or $tipoLinea='SIM') and orderentryabo:ActionCode = 'Suspend'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">ExternalOffer</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = 'Suspend']/orderentryabo:ExternalOffer"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:when>
                          <xsl:when test="$tipoLinea='Modem' or $tipoLinea='SIM'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">ExternalOffer</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:ExternalOffer"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:when>
                        </xsl:choose>
                        <xsl:if test="$productType = 'WirelessBroadbandService' or $lineasDif='Access' or ($tipoLinea='Modem' and $modemTipoCuenta='BroadbandEquipment')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Latitude</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and (orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId or orderentryabo:ParentServiceInstanceId=$integrationId)]">                                
							<corecom:Value>
								<xsl:value-of select="orderentryabo:ServiceAccountAddressLatitude"/>
							</corecom:Value>
						</xsl:for-each>-->
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']) > 1">
                                  <xsl:choose>
                                    <xsl:when test="$productType = 'WirelessBroadbandService'">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = 'New']/orderentryabo:ServiceAccountAddressLatitude"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = $actionItem]/orderentryabo:ServiceAccountAddressLatitude"/>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:ServiceAccountAddressLatitude"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$productType = 'WirelessBroadbandService' or $lineasDif='Access' or ($tipoLinea='Modem' and $modemTipoCuenta='BroadbandEquipment')">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Longitude</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and (orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId or orderentryabo:ParentServiceInstanceId=$integrationId)]">                                
						<corecom:Value>
							<xsl:value-of select="orderentryabo:ServiceAccountAddressLongitude"/>
						</corecom:Value>
					</xsl:for-each>-->
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']) > 1">
                                  <xsl:choose>
                                    <xsl:when test="$productType = 'WirelessBroadbandService'">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = 'New']/orderentryabo:ServiceAccountAddressLongitude"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = $actionItem]/orderentryabo:ServiceAccountAddressLongitude"/>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:ServiceAccountAddressLongitude"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$productType = 'WirelessBroadbandService' or $lineasDif='Access' or $tipoLinea='SIM'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">EquipmentReference</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and (orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId or orderentryabo:ParentServiceInstanceId=$integrationId)]">                                
							<xsl:value-of select="orderentryabo:AssetNumber"/>
						</xsl:for-each>-->
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']) > 1 ">
                                  <xsl:choose>
                                    <xsl:when test="$productType = 'WirelessBroadbandService' and orderentryabo:ActionCode = 'Resume'">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and (orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId or orderentryabo:ParentServiceInstanceId=$integrationId) and orderentryabo:ActionCode = 'Resume']/orderentryabo:AssetNumber"/>
                                    </xsl:when>
                                    <xsl:when test="$productType = 'WirelessBroadbandService'">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and (orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId or orderentryabo:ParentServiceInstanceId=$integrationId) and orderentryabo:ActionCode = 'New']/orderentryabo:AssetNumber"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and (orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId or orderentryabo:ParentServiceInstanceId=$integrationId) and orderentryabo:ActionCode = $actionItem]/orderentryabo:AssetNumber"/>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and (orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId or orderentryabo:ParentServiceInstanceId=$integrationId)]/orderentryabo:AssetNumber"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <!-- JCC 18/06/2019 - Se agrega el specification ServiceUpdateScheme para productos y servicios -->
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:text disable-output-escaping="no">ServiceUpdateScheme</xsl:text>
                          </corecom:Name>
                          <corecom:Value>
                            <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem"/>
                          </corecom:Value>
                        </corecom:Specification>
                        <xsl:if test="$productType = 'WirelessBroadbandService'">
                          <!-- Mapeo de specification para Movilidad BTI RAH 21/02/2019-->
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">EventTypeExtern</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']) > 1">
                                  <xsl:choose>
                                    <xsl:when test="$productType = 'WirelessBroadbandService'">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = 'New']/orderentryabo:EventTypeExtern"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:ActionCode = $actionItem]/orderentryabo:EventTypeExtern"/>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:EventTypeExtern"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <xsl:if test="orderentryabo:ActionCode ='Suspend'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">SuspensionReason</xsl:text>
                              </corecom:Name>
                              <xsl:choose>
                                <xsl:when test='orderentryabo:ReplacementReason!=""'>
                                  <corecom:Value>
                                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_SUSPENSION_CODES.dvm","Siebel_01",orderentryabo:ReplacementReason,"OSM_01","CouldNotBeFound")'/>
                                  </corecom:Value>
                                </xsl:when>
                                <xsl:otherwise>
                                  <corecom:Value>
                                    <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_SUSPENSION_CODES.dvm","Siebel_01",/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason,"OSM_01","CouldNotBeFound")'/>
                                  </corecom:Value>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Specification>
                          </xsl:if>
                        </xsl:if>
                        <xsl:if test="$lineasDif='Access'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Provider</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:Supplier"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$tipoLinea= 'Modem' and $modemTipoCuenta='InternetEquipment'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DeviceType</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no">Cable Modem</xsl:text>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Manufacturer</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no">Motorola</xsl:text>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">MACAddress</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:AssetNumber"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="($tipoLinea= 'Modem' and $modemTipoCuenta='BroadbandEquipment') or $tipoLinea='IRD'">
                          <!-- $stParent y $ssParent-->
                          <xsl:variable name="servicioUsuario"
                                        select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServicesUser"/>
                          <xsl:variable name="paqueteInstanciaServicio_space">
                            <!--xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Paquete' or orderentryabo:ProductTypeCodeCRM = 'Paquete Principal' or orderentryabo:ProductTypeCodeCRM = 'Rentas'] ">
                              <xsl:variable name="psiPaquete"
                                            select="orderentryabo:ParentServiceInstanceId"/>
                              <xsl:choose>
                                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode='SIM' and orderentryabo:IntegrationId=$psiPaquete and orderentryabo:IntegrationId=$vParentServiceInstanceId and $psiPaquete = $vParentServiceInstanceId]/orderentryabo:ServiceProductType='DATOS' and $tipoLinea= 'Modem'">
                                  <xsl:value-of select="orderentryabo:Product"/>
                                </xsl:when>
                                
                                <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode='SMC' and orderentryabo:IntegrationId=$psiPaquete and orderentryabo:IntegrationId=$vParentServiceInstanceId]/orderentryabo:ServiceProductType='VIDEO' and $tipoLinea= 'IRD'">
                                  <xsl:value-of select="orderentryabo:Product"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no"></xsl:text>
                                </xsl:otherwise>
                              </xsl:choose> <xsl:when test="$tipoLinea= 'IRD'">
                            </xsl:for-each-->
                            <xsl:choose>
                              <xsl:when test="$tipoLinea = 'Modem' and contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountServiceWeighting,'6')">
                                <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Rentas' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]">
                                  <xsl:if test="position()=1">
                                    <xsl:value-of select="orderentryabo:Product"/>
                                  </xsl:if>
                                </xsl:for-each>
                              </xsl:when>
                              <!--crecimientos prepago-->
                              <xsl:when test="$tipoLinea = 'Modem' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfilePaymentSystem = 'PRE' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType = 'Nuevo' and contains(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountService,'COMBO')">
                                <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Service' and contains(orderentryabo:ProductType,'Datos') and  orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]">
                                  <xsl:value-of select="concat('COMBO DP BTI ',orderentryabo:DownloadSpeed,orderentryabo:UOMDownloadSpeed,' VETV HD')"/>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="$tipoLinea = 'Modem'">
                                <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Paquete' or orderentryabo:ProductTypeCodeCRM = 'Paquete Principal']">
                                  <xsl:variable name="psiPaquete"
                                                select="orderentryabo:ParentServiceInstanceId"/>
                                  <xsl:choose>
                                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode='SIM' and orderentryabo:IntegrationId=$psiPaquete and orderentryabo:IntegrationId=$vParentServiceInstanceId and $psiPaquete = $vParentServiceInstanceId]/orderentryabo:ServiceProductType='DATOS'">
                                      <xsl:value-of select="concat(orderentryabo:Product, ' ')"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:text disable-output-escaping="no"></xsl:text>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                              <xsl:when test="$tipoLinea = 'IRD'">
                                <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeCodeCRM = 'Paquete' or orderentryabo:ProductTypeCodeCRM = 'Paquete Principal'] ">
                                  <xsl:variable name="psiPaquete"
                                                select="orderentryabo:ParentServiceInstanceId"/>
                                  <xsl:choose>
                                    <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode='SMC' and orderentryabo:IntegrationId=$psiPaquete and orderentryabo:IntegrationId=$vParentServiceInstanceId]/orderentryabo:ServiceProductType='VIDEO'">
                                      <xsl:value-of select="concat(orderentryabo:Product,' ')"/>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:text disable-output-escaping="no"></xsl:text>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:for-each>
                              </xsl:when>
                            </xsl:choose>
                          </xsl:variable>
                          <xsl:variable name="paqueteInstanciaServicio"
                                        select="normalize-space($paqueteInstanciaServicio_space)"/>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SaleType</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <xsl:when test="contains(orderentryabo:ProductTypeCodeCRM,'UHD') and contains(orderentryabo:Hierarchy,'Slave') and  orderentryabo:AssetTypeCode = 'IRD'">
                                <corecom:Value>
                                  <xsl:value-of select="$stParentIRDUltra"/>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:value-of select="$stParent"/>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SaleSubtype</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <xsl:when test="contains(orderentryabo:ProductTypeCodeCRM,'UHD') and contains(orderentryabo:Hierarchy,'Slave') and  orderentryabo:AssetTypeCode = 'IRD'">
                                <corecom:Value>
                                  <xsl:value-of select="$ssParentIRDUltra"/>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:value-of select="$ssParent"/>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SaleDetail</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <xsl:when test="contains(orderentryabo:ProductTypeCodeCRM,'UHD') and contains(orderentryabo:Hierarchy,'Slave') and  orderentryabo:AssetTypeCode = 'IRD'">
                                <corecom:Value>
                                  <xsl:value-of select="$saleDetailIRDUltra"/>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:IntegrationId=$validintID]/orderentryabo:Product"/>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SalePackage</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="contains(orderentryabo:ProductTypeCodeCRM,'UHD') and contains(orderentryabo:Hierarchy,'Slave') and  orderentryabo:AssetTypeCode = 'IRD'">
                                  <xsl:value-of select="substring($paqueteInstanciaServicioIRDUHD,1.0,90.0)"/>
                                </xsl:when>
                                <xsl:when test="string-length($paqueteInstanciaServicio) = 0">
                                  <xsl:text disable-output-escaping="no"></xsl:text>
                                </xsl:when>
                                <xsl:when test="contains($paqueteInstanciaServicio,'IE')">
                                  <xsl:value-of select="substring-before($paqueteInstanciaServicio,' IE')"/>
                                </xsl:when>
                                <xsl:when test="contains($paqueteInstanciaServicio,'IG')">
                                  <xsl:value-of select="substring-before($paqueteInstanciaServicio,' IG')"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="substring($paqueteInstanciaServicio,1.0,90.0)"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ContractName</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="$tipoLinea= 'Modem'">
                                  <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ServiceProductType='DATOS' and orderentryabo:AgreementNameLine!='']">
                                    <xsl:if test="position()=1">
                                      <xsl:value-of select="orderentryabo:AgreementNameLine"/>
                                    </xsl:if>
                                  </xsl:for-each>
                                </xsl:when>
                                <xsl:when test="$tipoLinea= 'IRD'">
                                  <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ServiceProductType='VIDEO' and orderentryabo:AgreementNameLine!='']">
                                    <xsl:if test="position()=1">
                                      <xsl:value-of select="orderentryabo:AgreementNameLine"/>
                                    </xsl:if>
                                  </xsl:for-each>
                                </xsl:when>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$tipoLinea= 'Modem' and $modemTipoCuenta='BroadbandEquipment'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">EquipmentModel</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:AssetModel"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$tipoLinea= 'Modem' or $tipoLinea='SIM'">
                          <xsl:if test="orderentryabo:ActionCode='Modified/New'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">NewEquipmentFlag</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">false</xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">NewCardFlag</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">false</xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                        </xsl:if>
                        <xsl:if test="$tipoLinea='SIM'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ICCID</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:AssetNumber"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">IMSI</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:IMSI"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">MSISDN</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:MSISDN"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="orderentryabo:ProductTypeCode='Producto' or $lineasDif='PPE' or $lineasDif='Broadband Service Addon' or orderentryabo:ProductTypeCode ='Broadband Service Addon'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">StartDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveStartDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">EndDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveEndDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="orderentryabo:ProductTypeCode='Producto'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">IntegrationProductType</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:ProductTypeIntegration"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SalesProductId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:ProductId"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">TechnicalProductId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ M6_ID from ofertacomercial_codes where nombre_producto='&quot;, orderentryabo:Product ,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">BillingProductId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ BRM_ID from ofertacomercial_codes where nombre_producto='&quot;, orderentryabo:Product ,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ProductName</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:Product"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ParentService</xsl:text>
                            </corecom:Name>
                            <!--<xsl:variable name="parentIntegrationId"
								  select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '') = 'IRD') and (orderentryabo:ParentOrderItemId = $parentId)]/orderentryabo:IntegrationId"/>-->
                            <xsl:variable name="parentIntegrationId"
                                          select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId and orderentryabo:IntegrationId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>
                            <xsl:variable name="productSubType"
                                          select="orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ SUBTIPO from ofertacomercial_codes where nombre_producto='&quot;, orderentryabo:Product ,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>
                            <xsl:variable name="prodTipoCodigo"
                                          select="orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ Tipo_Codigo from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>
                            <xsl:choose>
                              <xsl:when test="$productSubType = 'OTT'">
                                <xsl:variable name="ActionCodeItem"
                                              select="orderentryabo:ActionCode"/>
                                <xsl:variable name="countServDatosOTT"
                                              select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[(orderentryabo:ProductTypeIntegration = 'StreamingService') and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId])"/>
                                <xsl:variable name="parentOTTIntId">
                                  <xsl:choose>
                                    <xsl:when test="$countServDatosOTT = 1 ">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'StreamingService' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>
                                    </xsl:when>
                                    <xsl:when test="$countServDatosOTT > 1 ">
                                      <xsl:variable name="actionServDatos"
                                                    select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'StreamingService' and orderentryabo:ActionCode=$ActionCodeItem])"/>
                                      <xsl:choose>
                                        <xsl:when test="$actionServDatos = 1 ">
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'StreamingService' and orderentryabo:ActionCode=$ActionCodeItem]/orderentryabo:IntegrationId"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'StreamingService']/orderentryabo:IntegrationId"/>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:text disable-output-escaping="no">NotFound</xsl:text>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <corecom:Value>
                                  <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref","Siebel_01",$parentOTTIntId,"COMMON",false())'/>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:when test="$productSubType = 'Cel'">
                                <xsl:variable name="ActionCodeItem"
                                              select="orderentryabo:ActionCode"/>
                                <xsl:variable name="countServDatosCel"
                                              select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[(orderentryabo:ProductTypeIntegration = 'CellphoneService') and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId])"/>
                                <xsl:variable name="parentCelIntId">
                                  <xsl:choose>
                                    <xsl:when test="$countServDatosCel = 1 ">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'CellphoneService' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]/orderentryabo:IntegrationId"/>
                                    </xsl:when>
                                    <xsl:when test="$countServDatosCel > 1 ">
                                      <xsl:variable name="actionServDatos"
                                                    select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'CellphoneService' and orderentryabo:ActionCode=$ActionCodeItem])"/>
                                      <xsl:choose>
                                        <xsl:when test="$actionServDatos = 1 ">
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'CellphoneService' and orderentryabo:ActionCode=$ActionCodeItem]/orderentryabo:IntegrationId"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'CellphoneService']/orderentryabo:IntegrationId"/>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:text disable-output-escaping="no">NotFound</xsl:text>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:variable>
                                <corecom:Value>
                                  <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref","Siebel_01",$parentCelIntId,"COMMON",false())'/>
                                </corecom:Value>
                              </xsl:when>
                              <!-- Aug17-AJNR: Se agrega asignacion de ParentService para productos TELCO -->
                              <xsl:when test="$productSubType = 'Telco'">
                                <!--<xsl:variable name="prodTipoCodigo"
									  select="orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ Tipo_Codigo from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/>-->
                                <xsl:variable name="ActionCodeItem"
                                              select="orderentryabo:ActionCode"/>
                                <xsl:choose>
                                  <xsl:when test="$prodTipoCodigo = '/service/ip'">
                                    <!--Jan2018-DERC: Conteo de Servicios Telco que vienen en la orden -->
                                    <xsl:variable name="countServDatosTelco"
                                                  select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[(orderentryabo:ProductTypeIntegration = 'BroadbandService' or orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService') and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId])"/>
                                    <xsl:variable name="parentTelcoIntId">
                                      <xsl:choose>
                                        <xsl:when test="$countServDatosTelco = 1 ">
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'BroadbandService']/orderentryabo:IntegrationId"/>
                                        </xsl:when>
                                        <xsl:when test="$countServDatosTelco > 1 ">
                                          <xsl:variable name="actionServDatos"
                                                        select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'BroadbandService' and orderentryabo:ActionCode=$ActionCodeItem])"/>
                                          <xsl:choose>
                                            <xsl:when test="$actionServDatos = 1 ">
                                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'BroadbandService' and orderentryabo:ActionCode=$ActionCodeItem]/orderentryabo:IntegrationId"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                              <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'BroadbandService']">
										<xsl:value-of select="orderentryabo:IntegrationId"/>
									  </xsl:for-each>-->
                                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'BroadbandService']/orderentryabo:IntegrationId"/>
                                            </xsl:otherwise>
                                          </xsl:choose>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:text disable-output-escaping="no">NotFound</xsl:text>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:variable>
                                    <corecom:Value>
                                      <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref","Siebel_01",$parentTelcoIntId,"COMMON",false())'/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:when test="$prodTipoCodigo = '/service/air'">
                                    <!--Jan2018-DERC: Conteo de Servicios Telco que vienen en la orden -->
                                    <xsl:variable name="countServDatosTelco"
                                                  select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId])"/>
                                    <xsl:variable name="parentTelcoIntId">
                                      <xsl:choose>
                                        <xsl:when test="$countServDatosTelco = 1 ">
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService']/orderentryabo:IntegrationId"/>
                                        </xsl:when>
                                        <xsl:when test="$countServDatosTelco > 1 ">
                                          <xsl:variable name="actionServDatos"
                                                        select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService' and orderentryabo:ActionCode=$ActionCodeItem])"/>
                                          <xsl:choose>
                                            <xsl:when test="$actionServDatos = 1">
                                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService' and orderentryabo:ActionCode=$ActionCodeItem]/orderentryabo:IntegrationId"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                              <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService']">
										<xsl:value-of select="orderentryabo:IntegrationId"/>
									  </xsl:for-each>-->
                                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService']/orderentryabo:IntegrationId"/>
                                            </xsl:otherwise>
                                          </xsl:choose>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:text disable-output-escaping="no">NotFound</xsl:text>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:variable>
                                    <corecom:Value>
                                      <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref","Siebel_01",$parentTelcoIntId,"COMMON",false())'/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:when test="$prodTipoCodigo = '/service/internet/movil'">
                                    <!--Jan2018-DERC: Conteo de Servicios Telco que vienen en la orden -->
                                    <xsl:variable name="countServDatosTelco"
                                                  select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId])"/>
                                    <xsl:variable name="parentTelcoIntId">
                                      <xsl:choose>
                                        <xsl:when test="$countServDatosTelco = 1 ">
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService']/orderentryabo:IntegrationId"/>
                                        </xsl:when>
                                        <xsl:when test="$countServDatosTelco > 1 ">
                                          <xsl:variable name="actionServDatos"
                                                        select="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService' and orderentryabo:ActionCode=$ActionCodeItem])"/>
                                          <xsl:choose>
                                            <xsl:when test="$actionServDatos = 1">
                                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService' and orderentryabo:ActionCode=$ActionCodeItem]/orderentryabo:IntegrationId"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                              <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService']">
										<xsl:value-of select="orderentryabo:IntegrationId"/>
									  </xsl:for-each>-->
                                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'WirelessBroadbandService']/orderentryabo:IntegrationId"/>
                                            </xsl:otherwise>
                                          </xsl:choose>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:text disable-output-escaping="no">NotFound</xsl:text>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:variable>
                                    <corecom:Value>
                                      <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref","Siebel_01",$parentTelcoIntId,"COMMON",false())'/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:when test="$prodTipoCodigo = '/service/telephony'">
                                    <xsl:variable name="parentTelcoIntId">
                                      <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'VoIPService']/orderentryabo:IntegrationId"/>
                                    </xsl:variable>
                                    <corecom:Value>
                                      <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref","Siebel_01",$parentTelcoIntId,"COMMON",false())'/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no"></xsl:text>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                              <xsl:when test="$productSubType = 'Internet'">
                                <xsl:choose>
                                  <xsl:when test="$prodTipoCodigo = '/service/bluetogo'">
                                    <xsl:variable name="parentBluetogoIntId">
                                      <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems">
								<xsl:if test="orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ OSM_ID from ofertacomercial_codes where nombre_producto='&quot;, orderentryabo:Product ,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;) = 'InternetEquipment'">
								  <xsl:value-of select="orderentryabo:IntegrationId"/>
								</xsl:if>
							  </xsl:for-each>-->
                                      <xsl:choose>
                                        <xsl:when test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'Modem' and orderentryabo:ParentServiceInstanceId=$vParentServiceInstanceId]) > 1">
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'Modem' and orderentryabo:ActionCode='New']/orderentryabo:IntegrationId"/>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:ProductTypeIntegration = 'Modem']/orderentryabo:IntegrationId"/>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </xsl:variable>
                                    <corecom:Value>
                                      <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref","Siebel_01",$parentBluetogoIntId,"COMMON",false())'/>
                                    </corecom:Value>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Value>
                                      <xsl:text disable-output-escaping="no"></xsl:text>
                                    </corecom:Value>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                              <xsl:when test="$parentIntegrationId != ''">
                                <corecom:Value>
                                  <xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_SERVICESID.xref","Siebel_01",$parentIntegrationId,"COMMON",false())'/>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no"></xsl:text>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UsageStartDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveStartDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UsageEndDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveEndDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">CycleStartDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveStartDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">CycleEndDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveEndDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DataBag</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:DataBag"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UOMDataBag</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:UOMDataBag"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">PurchaseStartDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveStartDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">PurchaseEndDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveEndDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ProductPaymentScheme</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:ProductSubTypeIntegration='Telco' and contains($productPaymentScheme,'PREPAY')">
                                  <xsl:value-of select="xp20:upper-case(concat(orderentryabo:ProductSubTypeIntegration,' PRE'))"/>
                                </xsl:when>
                                <!-- <xsl:otherwise>
							<xsl:value-of select="xp20:upper-case(oraext:lookup-table('ofertacomercial_codes','SIEBEL_ID', orderentryabo:PartNumber,'SUBTIPO','jdbc/usr_ofcomer'))"/>
							</xsl:otherwise>-->
                                <xsl:when test="oraext:lookup-table('ofertacomercial_codes','SIEBEL_ID', orderentryabo:PartNumber,'SUBTIPO','jdbc/usr_ofcomer') = 'Tradicional/VeTV'">
                                  <xsl:value-of select="xp20:upper-case(oraext:lookup-table('ofertacomercial_codes','SIEBEL_ID', orderentryabo:PartNumber,'SUBTIPO','jdbc/usr_ofcomer'))"/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_CONFIG_CROSSREFERENCE.dvm','SOA_01', xp20:upper-case(oraext:lookup-table('ofertacomercial_codes','SIEBEL_ID', orderentryabo:PartNumber,'SUBTIPO','jdbc/usr_ofcomer')),'COMMON','CouldNotBeFound')"/>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <!--
					RHA-Jul2018. Se modifica el codigo para enviar el valor del StreamingId siempre y cuando exista valor en el campo CVE_STREAMING 
				  -->
                          <!--xsl:if test='($productType = "OTTService" or $productType = "OTTSignalService") or (/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:Product = "BlueToGo Video Everywhere"])'-->
                          <xsl:if test="$CveStreaming != ''">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">StreamingId</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <!--xsl:value-of select="orcl:query-database(concat(&quot;select /*+ FIRST_ROWS(1)*/ CVE_STREAMING from ofertacomercial_codes where nombre_producto='&quot;,orderentryabo:Product,&quot;' and siebel_id='&quot;,orderentryabo:PartNumber,&quot;' and rownum=1 &quot;),false(),false(),&quot;jdbc/usr_ofcomer&quot;)"/-->
                                <xsl:value-of select="$CveStreaming"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:if test="xp20:upper-case($productType) = 'PAYMENTPROMISE'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">PromiseMode</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">0</xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">Amount</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">0</xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">AmountExempt</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no"></xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">BusinessPartner</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no"></xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">PromiseCurrency</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODES.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:CurrencyCode,'COMMON','CouldNotBeFound')"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:if test="$productType='InternetService'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">Bandwidth</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:choose>
                                  <xsl:when test="contains(orderentryabo:Product,'1')">
                                    <xsl:text disable-output-escaping="no">Sky Internet Baja</xsl:text>
                                  </xsl:when>
                                  <xsl:when test="contains(orderentryabo:Product,'2')">
                                    <xsl:text disable-output-escaping="no">Sky Internet Media 1</xsl:text>
                                  </xsl:when>
                                  <xsl:when test="contains(orderentryabo:Product,'3')">
                                    <xsl:text disable-output-escaping="no">Sky Internet Media 2</xsl:text>
                                  </xsl:when>
                                  <xsl:when test="contains(orderentryabo:Product,'4')">
                                    <xsl:text disable-output-escaping="no">Sky Internet Alta</xsl:text>
                                  </xsl:when>
                                </xsl:choose>
                              </corecom:Value>
                            </corecom:Specification>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">PriorBlueToGoTransactionId</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="orderentryabo:Id"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:if test="orderentryabo:ActionCode = 'Deleted'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">StatusFlag</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no"></xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">TargetStatus</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no"></xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:if test="xp20:upper-case($productType) = 'PACKAGE'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">ClientPackage</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="orderentryabo:Product"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:variable name="suspTypeColl"
                                        select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/COLLECTION_ACTIONNAME.dvm","COMMON", xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason), "OSM_01", "")'/>
                          <xsl:choose>
                            <xsl:when test="$suspTypeColl != ''">
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">SuspensionType</xsl:text>
                                </corecom:Name>
                                <corecom:Value>
                                  <xsl:value-of select='$suspTypeColl'/>
                                </corecom:Value>
                              </corecom:Specification>
                            </xsl:when>
                          </xsl:choose>
                        </xsl:if>
                        <!--Finaliza specifactions solo productos-->
                        <xsl:if test="$tipoLinea= 'Modem' or $tipoLinea='SMC'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">CollectionsOrigin</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no">CRM</xsl:text>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <!--Se implementa Flag TermsConditionsWeb para notificar a Callidus si genera o no comision por aceptacion de terminos y condiciones RAH 07/02/2019-->
                        <xsl:if test="$tipoLinea= 'Modem'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">TermsConditionsWeb</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="xp20:upper-case(orderentryabo:FlagTermsConditions) = 'Y'">
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no"></xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                          <!--Se agrega implementacion de SpecificationCode ActivationCode para los Cambios de Domicilio hacia M6 RAH 12/02/2019-->
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ActivationCode</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:ActivationCode != ''">
                                  <xsl:value-of select='orderentryabo:ActivationCode'/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no"></xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="($productType = 'WirelessBroadbandService' or $tipoLinea='SIM')  and orderentryabo:ActionCode = 'Resume'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ActivationCode</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:ActivationCode != ''">
                                  <xsl:value-of select='orderentryabo:ActivationCode'/>
                                </xsl:when>
                                <xsl:otherwise>
                                  <xsl:text disable-output-escaping="no"></xsl:text>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$tipoLinea='SMC' or $tipoLinea='Extension'">
                          <!--                      <xsl:variable name="parentSerialNumber"
								select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '') ='IRD' and orderentryabo:ParentOrderItemId=$parentId]/orderentryabo:AssetNumber"/>-->
                          <!--<xsl:variable name="actionItem"
								select="orderentryabo:ActionCode"/>              -->
                          <xsl:variable name="parentSerialNumber">
                            <xsl:choose>
                              <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems[orderentryabo:ParentEquipmentId=$integrationId]">
                                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') ='IRD' and orderentryabo:ParentOrderItemId=$parentId and orderentryabo:ActionCode = $actionItem ]/orderentryabo:AssetNumber"/>
                              </xsl:when>
                              <xsl:otherwise>
                                <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') ='IRD' and orderentryabo:ParentOrderItemId=$parentId]/orderentryabo:AssetNumber"/>
                              </xsl:otherwise>
                            </xsl:choose>
                          </xsl:variable>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">AccessKey</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no"></xsl:text>
                            </corecom:Value>
                          </corecom:Specification>
                          <xsl:if test="orderentryabo:ActivationCode != ''">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">ActivationCode</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="orderentryabo:ActivationCode"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">AddressGrade</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountAddressGrade"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Bouquet</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:Bouquet"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">CallbackDay</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:CallbackDay"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">CustomerType</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountType"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">CuttingDate</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileBillCycle"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">IPPVAllowed</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',orderentryabo:StatusIPPV,'OSM_01','CouldNotBeFound','Common','IPPV')"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">IPPVType</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',orderentryabo:StatusIPPV,'ID_PersonalBit_01','CouldNotBeFound','Common','IPPV')"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">NewCardFlag</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <!--1 Para Unificacion de cuentas-->
                              <xsl:when test="(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Cambia Tipo Cuenta' or /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Unifica Cuenta') and orderentryabo:ActionCode = 'New'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--2 Equipo migrado-->
                              <xsl:when test="contains(orderentryabo:ActionCode, 'New') and $eqMigFlag='Y'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!-- 3 Reactivacion por reposicion con equipo nuevo-->
                              <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType = 'Reactivacion por reposicion' and orderentryabo:ActionCode ='Modified/New' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--4 Reactivacion de cuenta con equipo viejo-->
                              <xsl:when test="orderentryabo:ActionCode ='Modified/New' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--5 Crecimiento con equipo viejo-->
                              <xsl:when test="orderentryabo:ActionCode ='Modified/New' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--6 Crecimientos, Reemplazos, Activaciones y Rectivaciones de cuenta con equipo nuevo-->
                              <xsl:when test="orderentryabo:ActionCode='New'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">PaymentMethod</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="$paymentMethodCode"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountUpdateFlag = 'Y'">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">PBReset</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:text disable-output-escaping="no">CE</xsl:text>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileBillCycle != ''">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:value-of select="concat('PersonalBit@', dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileBillCycle,'Grupo_01','CouldNotBeFound','Common','Dia de corte'))"/>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:BillingProfileBillCycle,'ID_PersonalBit_01','CouldNotBeFound','Common','Dia de corte')"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountType != ''">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:value-of select="concat('PersonalBit@', dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountType,'Grupo_01','CouldNotBeFound','Common','Tipo suscriptor'))"/>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ServiceAccountType,'ID_PersonalBit_01','CouldNotBeFound','Common','Tipo suscriptor')"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:if test="$paymentMethodCode != ''">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:value-of select="concat('PersonalBit@', dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','OSM_01',$paymentMethodCode,'Grupo_01','CouldNotBeFound','Common','Tipo de pago'))"/>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','OSM_01',$paymentMethodCode,'ID_PersonalBit_01','CouldNotBeFound','Common','Tipo de pago')"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:variable name="validAddressLocal"
                                        select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:PrimaryAccountValidatedAddress, 'OSM_01','N', 'Common', 'Grado de direccion')"/>
                          <xsl:if test="$validAddressLocal != ''">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:value-of select="concat('PersonalBit@', dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',$validAddressLocal,'Grupo_01','CouldNotBeFound','Common','Grado de direccion'))"/>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',$validAddressLocal,'ID_PersonalBit_01','CouldNotBeFound','Common','Grado de direccion')"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <!--<xsl:text>parentSerialNumber: </xsl:text>
				  <xsl:value-of select="$parentSerialNumber"/>
				  <xsl:text>irdModel: </xsl:text>
				  <xsl:value-of select="substring($parentSerialNumber,1,6)"/>-->
                          <xsl:variable name="irdModel"
                                        select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_IRDModel.dvm','Siebel_01', substring($parentSerialNumber,1,6), 'SAP_01','CouldNotBeFound')"/>
                          <xsl:if test="$irdModel != ''">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:value-of select="concat('PersonalBit@', dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01','Tipo de equipo','Grupo_01','CouldNotBeFound','Common','Tipo de equipo'))"/>
                              </corecom:Name>
                              <xsl:choose>
                                <xsl:when test="orderentryabo:CompanionDevices != ''">
                                  <corecom:Value>
                                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_HMCSTREAM.dvm','SIEBEL_01',orderentryabo:CompanionDevices,'COMMON','CouldNotBeFound')"/>
                                  </corecom:Value>
                                </xsl:when>
                                <xsl:otherwise>
                                  <corecom:Value>
                                    <xsl:value-of select="$irdModel"/>
                                  </corecom:Value>
                                </xsl:otherwise>
                              </xsl:choose>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:if test="orderentryabo:StatusIPPV != ''">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:value-of select="concat('PersonalBit@', dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',orderentryabo:StatusIPPV,'Grupo_01','CouldNotBeFound','Common','IPPV'))"/>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PERSONALBITS.dvm','Siebel_01',orderentryabo:StatusIPPV,'ID_PersonalBit_01','CouldNotBeFound','Common','IPPV')"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                        </xsl:if>
                        <!--Solo para SMC y extensiones-->
                        <xsl:if test="$lineasDif='PPE'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">CategoryName</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:PPEContent"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Channel</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:PPEChannel"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ContentDescription</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:Product"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">EntryType</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/PPV_ACCSOURCE.dvm","SOAS_01",xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Source),"BRM_01","")'/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">EventState</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no"></xsl:text>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">EventType</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:PPEEventType"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ProviderId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:Supplier"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ProviderName</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:text disable-output-escaping="no"></xsl:text>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">TokenId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:PPETokenId"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">TrackingId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:PPETrackingId"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">TechnicalProductId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:PPETrackingId"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <!--Solo para PPE-->
                        <xsl:if test="$lineasDif='RB'">
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SeriesId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookSeriesId"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ConfigRecording</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookRecordingConfiguration"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ContentId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookContentId"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ContentIdFormat</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookContentType"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Duration</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookDuration"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">MajorChannel</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookComercialNumber"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ManufactureId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookManufacturerCode"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Method</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookRecordingType"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">NoSerial</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookSequenceNumber"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Recurring</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookRecurringFlag"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">RequestLifeTime</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveEndDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">SatSourceAllowed</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookContentType"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Season</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookSeason"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">StartTime</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:EffectiveStartDate"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">IdService</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookIdUniqueChannel"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ChannelName</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookChannel"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">NameEvent</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookEventName"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">IdEvent</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookEventId"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ContentProvider</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookContentProvider"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">OriginalNetwork</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookOriginalNetwork"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">TransportStream</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookTransportStream"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">ProgramId</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookProgramId"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Source</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SOURCEREMBOOK.dvm','TagSourceWorkOrder', /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:Source,'AsapValue','CouldNotBeFound')"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Recording</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:RemBookReminder"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <!--Solo para RB-->
                        <xsl:if test="$tipoLinea='IRD' or $tipoLinea='Modem' or $tipoLinea='SMC' or $tipoLinea='Extension'">
                          <xsl:if test="$tipoLinea='IRD' or $tipoLinea='SMC' or $tipoLinea='Extension'">
                            <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems) >= 1">
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">EquipmentReplacementFlag</xsl:text>
                                </corecom:Name>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </corecom:Specification>
                            </xsl:if>
                          </xsl:if>
                          <xsl:if test="$tipoLinea= 'Modem' and $modemTipoCuenta='InternetEquipment'">
                            <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']) > 1">
                              <corecom:Specification>
                                <corecom:Name>
                                  <xsl:text disable-output-escaping="no">EquipmentReplacementFlag</xsl:text>
                                </corecom:Name>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </corecom:Specification>
                            </xsl:if>
                          </xsl:if>
                          <!--JCC - 17/07/2019 - Se agrega specification DisconnectReason para el proceso de cancelacion administrativa sin cambio de estatus hacia OSM -->
                          <!-- <xsl:if test="orderentryabo:ActionCode = 'Deleted' or orderentryabo:ActionCode = 'Add'">-->
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">DisconnectReason</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$tipoLinea='SMC'">
                          <!-- JCC 25/07/2019 : Se agrega Specification HouseHoldId para HMC-->
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">HouseHoldID</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:HouseHoldId"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <!--Fin-->
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">NewEquipmentFlag</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <!--1 Para Unificacion de cuentas-->
                              <xsl:when test="(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Cambia Tipo Cuenta' or /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Unifica Cuenta') and orderentryabo:ActionCode = 'New'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--2 Equipo migrado-->
                              <xsl:when test="contains(orderentryabo:ActionCode, 'New') and $eqMigFlag='Y'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!-- 3 Reactivacion por resposisicion con equipo nuevo-->
                              <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType = 'Reactivacion por reposicion'
									and orderentryabo:ActionCode ='Modified/New'
									and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--4 Reactivacion de cuenta con equipo viejo-->
                              <xsl:when test="orderentryabo:ActionCode ='Modified/New' 
									and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--5 Crecimiento con equipo viejo-->
                              <xsl:when test="orderentryabo:ActionCode ='Modified/New' 
									and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--6 Crecimientos, Reemplazos, Activaciones y Rectivaciones de cuenta con equipo nuevo-->
                              <xsl:when test="orderentryabo:ActionCode='New'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Functionality</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:ProductTypeCode"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">UnitPrice</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:AgreementSubscriptionAmount"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Promotion</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:AgreementSKYPromotion"/>
                            </corecom:Value>
                          </corecom:Specification>
                        </xsl:if>
                        <!--Solo IRD-->
                        <!-- AJNR -->
                        <xsl:if test="$tipoLinea='IRD' or $tipoLinea='Modem' or $tipoLinea='SMC' or $tipoLinea='SIM'">
                          <xsl:choose>
                            <xsl:when test="$tipoLinea='Modem'">
                              <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']) > 1
									and orderentryabo:ActionCode = 'New'">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">ReplaceTo</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ActionCode='Deleted']">
								<xsl:value-of select="orderentryabo:AssetNumber"/>
							</xsl:for-each> -->
                                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ActionCode='Deleted' and orderentryabo:IntegrationId= $integrationId]/orderentryabo:AssetNumber"/>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:if>
                              <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'Modem']) > 1
									and orderentryabo:ActionCode = 'Resume'">
                                <!-- reactivaciÃ³n JP-->
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">ReplaceTo</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:AssetTypeCode = 'Modem' and orderentryabo:ActionCode='Deleted' and orderentryabo:IntegrationId= $integrationId]/orderentryabo:AssetNumber"/>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:if>
                            </xsl:when>
                            <xsl:when test="$tipoLinea='SIM'">
                              <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM']) > 1
									and orderentryabo:ActionCode = 'New'">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">ReplaceTo</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:AssetTypeCode = 'SIM' and orderentryabo:ActionCode='Deleted' and orderentryabo:IntegrationId= $integrationId]/orderentryabo:AssetNumber"/>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:if>
                              <!-- Reactivacion JP-->
                              <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[orderentryabo:AssetTypeCode = 'SIM']) > 1
									and orderentryabo:ActionCode = 'Resume'">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">ReplaceTo</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ orderentryabo:AssetTypeCode = 'SIM' and orderentryabo:ActionCode='Deleted' and orderentryabo:IntegrationId= $integrationId]/orderentryabo:AssetNumber"/>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:if>
                            </xsl:when>
                            <xsl:otherwise>
                              <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems) >= 1
									and orderentryabo:ActionCode = 'New'">
                                <corecom:Specification>
                                  <corecom:Name>
                                    <xsl:text disable-output-escaping="no">ReplaceTo</xsl:text>
                                  </corecom:Name>
                                  <corecom:Value>
                                    <xsl:choose>
                                      <xsl:when test="$tipoLinea='SMC'">
                                        <!--<xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '') = 'SMC' 
												and dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:ProductTypeCode, 'COMMON', '') = '' 
												and orderentryabo:IntegrationId= $integrationId and orderentryabo:ActionCode='Deleted']">
										<xsl:value-of select="orderentryabo:AssetNumber"/>
									</xsl:for-each>-->
                                        <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode, 'COMMON', '', 'SOA_02','-') = 'SMC' and orderentryabo:ActionCode='Deleted' and orderentryabo:IntegrationId= $integrationId]/orderentryabo:AssetNumber"/>
                                      </xsl:when>
                                      <xsl:when test="$tipoLinea='IRD'">
                                        <xsl:for-each select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-LineItems/orderentryabo:ComWorkOrder-LineItems[ dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRODUCTCLASSIFICATION.dvm','SIEBEL_01', orderentryabo:AssetTypeCode,'COMMON', '', 'SOA_02','-') = 'IRD' and orderentryabo:IntegrationId= $integrationId and orderentryabo:ActionCode='Deleted']">
                                          <xsl:value-of select="orderentryabo:AssetNumber"/>
                                        </xsl:for-each>
                                      </xsl:when>
                                    </xsl:choose>
                                  </corecom:Value>
                                </corecom:Specification>
                              </xsl:if>
                            </xsl:otherwise>
                          </xsl:choose>
                        </xsl:if>
                        <xsl:if test="$tipoLinea='IRD'">
                          <xsl:if test="count(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:ListOfComWorkOrder-ReplaceItems/orderentryabo:ComWorkOrder-ReplaceItems) >= 1">
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">SubstitutionReason</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="orderentryabo:ReplacementReason"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">Promotion</xsl:text>
                            </corecom:Name>
                            <corecom:Value>
                              <xsl:value-of select="orderentryabo:AgreementSKYPromotion"/>
                            </corecom:Value>
                          </corecom:Specification>
                          <!--NewCardFlag a nivel Equipo TV-->
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">NewCardFlag</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <!--1 Para Unificacion de cuentas-->
                              <xsl:when test="(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Cambia Tipo Cuenta' or /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Unifica Cuenta') and orderentryabo:ActionCode = 'New'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--2 Equipo migrado-->
                              <xsl:when test="contains(orderentryabo:ActionCode, 'New') and $eqMigFlag='Y'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!-- 3 Reactivacion por reposicion con equipo nuevo-->
                              <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType = 'Reactivacion por reposicion' and orderentryabo:ActionCode ='Modified/New' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--4 Reactivacion de cuenta con equipo viejo-->
                              <xsl:when test="orderentryabo:ActionCode ='Modified/New' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--5 Crecimiento con equipo viejo-->
                              <xsl:when test="orderentryabo:ActionCode ='Modified/New' and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--6 Crecimientos, Reemplazos, Activaciones y Rectivaciones de cuenta con equipo nuevo-->
                              <xsl:when test="orderentryabo:ActionCode='New'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                          <!--NewEquipmentFlag a nivel Equipo TV-->
                          <corecom:Specification>
                            <corecom:Name>
                              <xsl:text disable-output-escaping="no">NewEquipmentFlag</xsl:text>
                            </corecom:Name>
                            <xsl:choose>
                              <!--1 Para Unificacion de cuentas-->
                              <xsl:when test="(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Cambia Tipo Cuenta' or /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Unifica Cuenta') and orderentryabo:ActionCode = 'New'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--2 Equipo migrado-->
                              <xsl:when test="contains(orderentryabo:ActionCode, 'New') and $eqMigFlag='Y'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!-- 3 Reactivacion por resposisicion con equipo nuevo-->
                              <xsl:when test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType = 'Reactivacion por reposicion'
									and orderentryabo:ActionCode ='Modified/New'
									and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--4 Reactivacion de cuenta con equipo viejo-->
                              <xsl:when test="orderentryabo:ActionCode ='Modified/New' 
									and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode = 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--5 Crecimiento con equipo viejo-->
                              <xsl:when test="orderentryabo:ActionCode ='Modified/New' 
									and /orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:AccountActionCode != 'Resume' ">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <!--6 Crecimientos, Reemplazos, Activaciones y Rectivaciones de cuenta con equipo nuevo-->
                              <xsl:when test="orderentryabo:ActionCode='New'">
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">true</xsl:text>
                                </corecom:Value>
                              </xsl:when>
                              <xsl:otherwise>
                                <corecom:Value>
                                  <xsl:text disable-output-escaping="no">false</xsl:text>
                                </corecom:Value>
                              </xsl:otherwise>
                            </xsl:choose>
                          </corecom:Specification>
                        </xsl:if>
                        <xsl:if test="$tipoLinea='IRD' or $tipoLinea='SMC' or $lineasDif='Extension' or $tipoLinea='Modem' or $tipoLinea='SIM'">
                          <!-- AJNR May19: Se agrega validacion para enviar estos campos cuando la orden sea una MOC Migracion de Oferta Comercial -->
                          <xsl:if test="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason = 'Cambio Oferta Comercial Ext.'">
                            <!-- AJNR May19: Cuando la orden es MOC se envia la info en el campo suspensiontype -->
                            <corecom:Specification>
                              <corecom:Name>
                                <xsl:text disable-output-escaping="no">MOCReason</xsl:text>
                              </corecom:Name>
                              <corecom:Value>
                                <xsl:value-of select="orderentryabo:ReplacementReason"/>
                              </corecom:Value>
                            </corecom:Specification>
                          </xsl:if>
                          <xsl:if test="orderentryabo:ActionCode = 'Suspend' or orderentryabo:ActionCode = 'Resume'">
                            <xsl:choose>
                              <xsl:when test="orderentryabo:ActionCode = 'Suspend'">
                                <xsl:variable name="suspTypeColl"
                                              select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/COLLECTION_ACTIONNAME.dvm","COMMON", xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason), "OSM_01", "")'/>
                                <xsl:choose>
                                  <xsl:when test="$suspTypeColl != ''">
                                    <corecom:Specification>
                                      <corecom:Name>
                                        <xsl:text disable-output-escaping="no">SuspensionType</xsl:text>
                                      </corecom:Name>
                                      <corecom:Value>
                                        <xsl:value-of select='$suspTypeColl'/>
                                      </corecom:Value>
                                    </corecom:Specification>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Specification>
                                      <corecom:Name>
                                        <xsl:text disable-output-escaping="no">SuspensionType</xsl:text>
                                      </corecom:Name>
                                      <corecom:Value>
                                        <xsl:text disable-output-escaping="no">SUSPENSION</xsl:text>
                                      </corecom:Value>
                                    </corecom:Specification>
                                    <corecom:Specification>
                                      <corecom:Name>
                                        <xsl:text disable-output-escaping="no">SuspensionReason</xsl:text>
                                      </corecom:Name>
                                      <xsl:choose>
                                        <xsl:when test='orderentryabo:ReplacementReason!=""'>
                                          <corecom:Value>
                                            <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_SUSPENSION_CODES.dvm","Siebel_01",orderentryabo:ReplacementReason,"OSM_01","CouldNotBeFound")'/>
                                          </corecom:Value>
                                        </xsl:when>
                                        <xsl:otherwise>
                                          <corecom:Value>
                                            <xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/SALESORDER_SUSPENSION_CODES.dvm","Siebel_01",/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason,"OSM_01","CouldNotBeFound")'/>
                                          </corecom:Value>
                                        </xsl:otherwise>
                                      </xsl:choose>
                                    </corecom:Specification>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                              <xsl:when test="orderentryabo:ActionCode = 'Resume'">
                                <xsl:variable name="suspTypeColl"
                                              select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/COLLECTION_ACTIONNAME.dvm","COMMON", xp20:upper-case(/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:DisconnectReason), "OSM_01", "")'/>
                                <xsl:choose>
                                  <xsl:when test="$suspTypeColl != ''">
                                    <corecom:Specification>
                                      <corecom:Name>
                                        <xsl:text disable-output-escaping="no">SuspensionType</xsl:text>
                                      </corecom:Name>
                                      <corecom:Value>
                                        <xsl:value-of select='$suspTypeColl'/>
                                      </corecom:Value>
                                    </corecom:Specification>
                                  </xsl:when>
                                  <xsl:otherwise>
                                    <corecom:Specification>
                                      <corecom:Name>
                                        <xsl:text disable-output-escaping="no">SuspensionType</xsl:text>
                                      </corecom:Name>
                                      <corecom:Value>
                                        <xsl:text disable-output-escaping="no">SUSPENSION</xsl:text>
                                      </corecom:Value>
                                    </corecom:Specification>
                                  </xsl:otherwise>
                                </xsl:choose>
                              </xsl:when>
                            </xsl:choose>
                          </xsl:if>
                        </xsl:if>
                      </corecom:SpecificationGroup>
                    </xsl:otherwise>
                  </xsl:choose>
                  <corecom:NetworkIndicator>
                    <xsl:text disable-output-escaping="no">false</xsl:text>
                  </corecom:NetworkIndicator>
                  <corecom:FulfillmentCompositionTypeCode>
                    <xsl:text disable-output-escaping="no"></xsl:text>
                  </corecom:FulfillmentCompositionTypeCode>
                  <corecom:FulfillmentSuccessCode>
                    <xsl:text disable-output-escaping="no"></xsl:text>
                  </corecom:FulfillmentSuccessCode>
                  <corecom:PrimaryClassificationCode>
                    <xsl:text disable-output-escaping="no"></xsl:text>
                  </corecom:PrimaryClassificationCode>
                  <corecom:ServiceInstanceIndicator>
                    <xsl:choose>
                      <xsl:when test="$fullfillmentIC!=''">
                        <xsl:text disable-output-escaping="no">true</xsl:text>
                      </xsl:when>
                      <xsl:otherwise>
                        <xsl:text disable-output-escaping="no">false</xsl:text>
                      </xsl:otherwise>
                    </xsl:choose>
                  </corecom:ServiceInstanceIndicator>
                </corecom:ItemReference>
                <corecom:InstalledProductReference>
                  <corecom:InstalledProductIdentification>
                    <corecom:BusinessComponentID schemeID="INSTALLEDPRODUCT_ID"
                                                 schemeAgencyID="COMMON">
                      <xsl:value-of select="orcl:generate-guid()"/>
                    </corecom:BusinessComponentID>
                    <corecom:ApplicationObjectKey>
                      <corecom:ID schemeID="INSTALLEDPRODUCT_ID"
                                  schemeAgencyID="SEBL_01">
                        <xsl:value-of select="concat(substring(orcl:generate-guid(),1.0,8.0), format-number($countPosition,'00'))"/>
                      </corecom:ID>
                    </corecom:ApplicationObjectKey>
                  </corecom:InstalledProductIdentification>
                </corecom:InstalledProductReference>
                <salesorderebo:SalesOrderSchedule>
                  <salesorderebo:RequestedDeliveryDateTime>
                    <xsl:value-of select="xp20:current-dateTime()"/>
                  </salesorderebo:RequestedDeliveryDateTime>
                  <salesorderebo:ExpectedDeliveryDate>
                    <xsl:value-of select="xp20:current-dateTime()"/>
                  </salesorderebo:ExpectedDeliveryDate>
                  <corecom:BillToPartyReference>
                    <corecom:BillingProfileReference>
                      <corecom:BillingProfileIdentification>
                        <corecom:ID>
                          <xsl:attribute name="schemeID">
                            <xsl:text disable-output-escaping="no">BILLINGPROFILE_ID</xsl:text>
                          </xsl:attribute>
                          <xsl:attribute name="schemeAgencyID">
                            <xsl:text disable-output-escaping="no">SEBL_01</xsl:text>
                          </xsl:attribute>
                          <xsl:value-of select="$COMMON_BILLINGPROFILEID"/>
                        </corecom:ID>
                      </corecom:BillingProfileIdentification>
                    </corecom:BillingProfileReference>
                  </corecom:BillToPartyReference>
                </salesorderebo:SalesOrderSchedule>
                <salesorderebo:SalesOrderLineSpecificationGroup>
                  <corecom:SpecificationGroup>
                    <corecom:Name>
                      <xsl:text disable-output-escaping="no">Extensible Attributes</xsl:text>
                    </corecom:Name>
                  </corecom:SpecificationGroup>
                </salesorderebo:SalesOrderLineSpecificationGroup>
              </salesorderebo:SalesOrderLine>
            </xsl:if>
          </xsl:for-each>
          <salesorderebo:Custom>
            <ns2:Siebel63OrderType>
              <xsl:value-of select="/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:SubOrderType"/>
            </ns2:Siebel63OrderType>
            <ns2:SOAOrderType>
              <xsl:value-of select="concat(dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ORDERTYPE.dvm','Siebel_01','ALL','OSM_01','','SOA_01','NUEVA-ERA'),dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRIORITY.dvm','Siebel_02',/orderentryabo:SiebelMessage/orderentryabo:ListOfSkyhjComWorkOrder/orderentryabo:ComWorkOrder-Orders/orderentryabo:OrderPriority,'SOA_01',''))"/>
            </ns2:SOAOrderType>
          </salesorderebo:Custom>
        </salesorderebo:ProcessSalesOrderFulfillment>
      </salesorderebo:DataArea>
    </salesorderebo:ProcessSalesOrderFulfillmentEBM>
  </xsl:template>
</xsl:stylesheet>